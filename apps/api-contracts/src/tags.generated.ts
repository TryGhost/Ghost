// ============================================================================
// AUTO-GENERATED from Ghost SDK JSON Schemas
// Source: https://raw.githubusercontent.com/TryGhost/SDK/main/packages/admin-api-schema/lib/schemas/tags.json
//
// DO NOT EDIT THIS FILE MANUALLY
// Run 'yarn generate' to regenerate from the official Ghost SDK schemas
//
// This file contains ONLY the pure JSON Schema â†’ Zod conversion
// All composed schemas and customizations are in tags.ts
// ============================================================================

import { z } from 'zod';

export const TagsInputSchema = z
    .object({
        name: z.string().regex(new RegExp('^([^,]|$)')).min(1).max(191).optional(),
        slug: z.union([z.string().max(191), z.null()]).optional(),
        description: z.union([z.string().max(500), z.null()]).optional(),
        feature_image: z.union([z.string().max(2000), z.null()]).optional(),
        visibility: z.enum(['public', 'internal']).optional(),
        meta_title: z.union([z.string().max(300), z.null()]).optional(),
        meta_description: z.union([z.string().max(500), z.null()]).optional(),
        og_image: z.union([z.string().max(2000), z.null()]).optional(),
        og_title: z.union([z.string().max(300), z.null()]).optional(),
        og_description: z.union([z.string().max(500), z.null()]).optional(),
        twitter_image: z.union([z.string().max(2000), z.null()]).optional(),
        twitter_title: z.union([z.string().max(300), z.null()]).optional(),
        twitter_description: z.union([z.string().max(500), z.null()]).optional(),
        codeinjection_head: z.union([z.string().max(65535), z.null()]).optional(),
        codeinjection_foot: z.union([z.string().max(65535), z.null()]).optional(),
        canonical_url: z.union([z.string().max(2000), z.null()]).optional(),
        accent_color: z.union([z.string().max(50), z.null()]).optional(),
    })
    .strict();

// Export TypeScript type for the input schema
export type TagInput = z.infer<typeof TagsInputSchema>;
