VERSION 0
DESCRIPTION >
    Visits trend over time for the last 30 minutes, filling the blanks.
    Works great for the realtime chart.

TOKEN "dashboard" READ
TOKEN "stats page" READ

NODE parsed_hits
DESCRIPTION >
    Parse raw page_hit events

SQL >
    SELECT
        timestamp,
        action,
        version,
        coalesce(session_id, '0') as session_id,
        JSONExtractString(payload, 'locale') as locale,
        JSONExtractString(payload, 'location') as location,
        JSONExtractString(payload, 'referrer') as referrer,
        JSONExtractString(payload, 'pathname') as pathname,
        JSONExtractString(payload, 'href') as href,
        JSONExtractString(payload, 'site_uuid') as site_uuid,
        JSONExtractString(payload, 'member_uuid') as member_uuid,
        JSONExtractString(payload, 'member_status') as member_status,
        JSONExtractString(payload, 'post_uuid') as post_uuid,
        lower(JSONExtractString(payload, 'user-agent')) as user_agent
    FROM analytics_events
    where action = 'page_hit'

NODE analytics_hits_data
SQL >
    SELECT
        site_uuid,
        timestamp,
        action,
        version,
        session_id,
        member_uuid,
        member_status,
        post_uuid,
        location,
        domainWithoutWWW(referrer) as source,
        pathname,
        href,
        case
            when match(user_agent, 'wget|ahrefsbot|curl|urllib|bitdiscovery|\+https://|googlebot')
            then 'bot'
            when match(user_agent, 'android')
            then 'mobile-android'
            when match(user_agent, 'ipad|iphone|ipod')
            then 'mobile-ios'
            else 'desktop'
        END as device,
        case
            when match(user_agent, 'firefox')
            then 'firefox'
            when match(user_agent, 'chrome|crios')
            then 'chrome'
            when match(user_agent, 'opera')
            then 'opera'
            when match(user_agent, 'msie|trident')
            then 'ie'
            when match(user_agent, 'iphone|ipad|safari')
            then 'safari'
            else 'Unknown'
        END as browser
    FROM parsed_hits

NODE timeseries
DESCRIPTION >
    Generate a timeseries for the last 30 minutes, so we call fill empty data points

SQL >
    with (now() - interval 30 minute) as start
    select addMinutes(toStartOfMinute(start), number) as t
    from (select arrayJoin(range(1, 31)) as number)

NODE visits
DESCRIPTION >
    Get last 30 minutes metrics gropued by minute

SQL >
    %
    select toStartOfMinute(timestamp) as t, uniq(session_id) as visits
    from analytics_hits_data
    where
        site_uuid = {{String(site_uuid, 'mock_site_uuid', description="Tenant ID", required=True)}}
         {% if defined(member_status) %}
            and member_status IN {{ Array(member_status,'String') }}
        {% end %}
        and timestamp >= (now() - interval 30 minute)
    group by toStartOfMinute(timestamp)
    order by toStartOfMinute(timestamp)

NODE endpoint
DESCRIPTION >
    Join and generate timeseries with metrics for the last 30 minutes

SQL >
    select a.t, b.visits from timeseries a left join visits b on a.t = b.t order by a.t
