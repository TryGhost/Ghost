NODE parsed_hits
DESCRIPTION >
    Parse raw page_hit events

SQL >
    SELECT
        timestamp,
        action,
        version,
        coalesce(session_id, '0') as session_id,
        payload.locale::String as locale,
        payload.location::String as location,
        payload.referrer::String as referrer,
        payload.pathname::String as pathname,
        payload.href::String as href,
        payload.site_uuid::String as site_uuid,
        payload.member_uuid::String as member_uuid,
        payload.member_status::String as member_status,
        payload.post_uuid::String as post_uuid,
        lower(payload.`user-agent`::String) as user_agent
    FROM analytics_events
    where action = 'page_hit'

NODE analytics_hits_data
SQL >
    SELECT
        site_uuid,
        timestamp,
        action,
        version,
        session_id,
        member_uuid,
        member_status,
        post_uuid,
        location,
        domainWithoutWWW(referrer) as source,
        pathname,
        href,
        case
            when match(user_agent, 'wget|ahrefsbot|curl|urllib|bitdiscovery|\+https://|googlebot')
            then 'bot'
            when match(user_agent, 'android')
            then 'mobile-android'
            when match(user_agent, 'ipad|iphone|ipod')
            then 'mobile-ios'
            else 'desktop'
        END as device,
        case
            when match(user_agent, 'firefox')
            then 'firefox'
            when match(user_agent, 'chrome|crios')
            then 'chrome'
            when match(user_agent, 'opera')
            then 'opera'
            when match(user_agent, 'msie|trident')
            then 'ie'
            when match(user_agent, 'iphone|ipad|safari')
            then 'safari'
            else 'Unknown'
        END as browser
    FROM parsed_hits

NODE analytics_sessions_1
DESCRIPTION >
    Aggregate by session_id and calculate session metrics

SQL >
    SELECT
        site_uuid,
        toDate(timestamp) AS date,
        session_id,
        maxIf(
            member_status,
            member_status IN ('paid', 'free', 'undefined')
        ) AS member_status,
        anySimpleState(post_uuid) AS post_uuid,
        anySimpleState(device) AS device,
        anySimpleState(browser) AS browser,
        anySimpleState(location) AS location,
        anySimpleState(source) AS source,
        anySimpleState(pathname) AS pathname,
        minSimpleState(timestamp) AS first_view,
        maxSimpleState(timestamp) AS latest_view,
        countState() AS pageviews
    FROM analytics_hits_data
    GROUP BY date, session_id, site_uuid

# mark it as type endpoint but it's not used as an endpoint, just to feed other pipes
TYPE endpoint
