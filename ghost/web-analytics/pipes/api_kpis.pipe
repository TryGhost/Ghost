VERSION 3
TAGS "v0"

NODE timeseries
SQL >

    %
                        {% set _single_day = defined(date_from) and day_diff(date_from, date_to) == 0 %}
                        with
                            {% if defined(date_from) %}
                                toStartOfDay(
                                    toDate(
                                        {{
                                            Date(
                                                date_from,
                                                description="Starting day for filtering a date range",
                                                required=False,
                                            )
                                        }}
                                    )
                                ) as start,
                            {% else %} toStartOfDay(timestampAdd(today(), interval -7 day)) as start,
                            {% end %}
                            {% if defined(date_to) %}
                                toStartOfDay(
                                    toDate(
                                        {{
                                            Date(
                                                date_to,
                                                description="Finishing day for filtering a date range",
                                                required=False,
                                            )
                                        }}
                                    )
                                ) as end
                            {% else %} toStartOfDay(today()) as end
                            {% end %}
                        {% if _single_day %}
                            select
                                arrayJoin(
                                    arrayMap(
                                        x -> toDateTime(x),
                                        range(
                                            toUInt32(toDateTime(start)), toUInt32(timestampAdd(end, interval 1 day)), 3600
                                        )
                                    )
                                ) as date
                        {% else %}
                            select
                                arrayJoin(
                                    arrayMap(
                                        x -> toDate(x),
                                        range(toUInt32(start), toUInt32(timestampAdd(end, interval 1 day)), 24 * 3600)
                                    )
                                ) as date
                        {% end %}



NODE pageviews
SQL >

    %
                        {% if defined(date_from) and day_diff(date_from, date_to) == 0 %}
                            select
                                site_uuid,
                                toStartOfHour(timestamp) as date,
                                session_id,
                                member_status,
                                device,
                                browser,
                                location,
                                source,
                                pathname,
                                os,
                                count() over (partition by session_id) as hits_per_session,
                                count() as pageviews,
                                max(timestamp) as latest_view_aux,
                                min(timestamp) as first_view_aux
                            from mv_hits
                            where toDate(timestamp) = {{ Date(date_from) }}
                            group by toStartOfHour(timestamp), session_id, site_uuid, member_status, device, browser, location, source, pathname, os
                        {% else %}
                            select
                                site_uuid,
                                toDate(timestamp) as date,
                                member_status,
                                device,
                                browser,
                                location,
                                source,
                                pathname,
                                os,
                                session_id,
                                count() over (partition by session_id) as hits_per_session,
                                count() as pageviews,
                                max(timestamp) as latest_view_aux,
                                min(timestamp) as first_view_aux
                            from mv_hits
                            where
                                {% if defined(date_from) %} toDate(timestamp) >= {{ Date(date_from) }}
                                {% else %} toDate(timestamp) >= timestampAdd(today(), interval -7 day)
                                {% end %}
                                {% if defined(date_to) %} and toDate(timestamp) <= {{ Date(date_to) }}
                                {% else %} and toDate(timestamp) <= today()
                                {% end %}
                            group by date, session_id, site_uuid, member_status, device, browser, location, source, pathname, os
                        {% end %}



NODE data
SQL >

    %
                        select
                            date,
                            uniq(session_id) as visits,
                            sum(pageviews) as pageviews,
                            sum(case when hits_per_session = 1 then 1 else 0 end) / nullIf(uniq(session_id), 0) as bounce_rate,
                            avg(latest_view_aux - first_view_aux) as avg_session_sec
                        from pageviews
                        where
                            site_uuid = {{String(site_uuid, 'mock_site_uuid', description="Tenant ID", required=False)}}
                            {% if defined(member_status) %} and member_status IN {{ Array(member_status, "'undefined', 'free', 'paid'", description="Member status to filter on", required=False) }} {% end %}
                            {% if defined(device) %} and device = {{ String(device, description="Device to filter on", required=False) }} {% end %}
                            {% if defined(browser) %} and browser = {{ String(browser, description="Browser to filter on", required=False) }} {% end %}
                            {% if defined(os) %} and os = {{ String(os, description="Operating system to filter on", required=False) }} {% end %}
                            {% if defined(source) %} and source = {{ String(source, description="Source to filter on", required=False) }} {% end %}
                            {% if defined(location) %} and location = {{ String(location, description="Location to filter on", required=False) }} {% end %}
                            {% if defined(pathname) %} and pathname = {{ String(pathname, description="Pathname to filter on", required=False) }} {% end %}
                        group by date



NODE endpoint
SQL >

    select a.date, b.visits, b.pageviews, b.bounce_rate, b.avg_session_sec
    from timeseries a
    left join data b using date


