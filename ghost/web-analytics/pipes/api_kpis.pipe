VERSION 1

TAGS "v0"

INCLUDE "_parsed_hits.incl"

NODE timeseries
SQL >

    %
                {% set _single_day = defined(date_from) and day_diff(date_from, date_to) == 0 %}
                with
                    {% if defined(date_from) %}
                        toStartOfDay(
                            toDate(
                                {{
                                    Date(
                                        date_from,
                                        description="Starting day for filtering a date range",
                                        required=False,
                                    )
                                }}
                            )
                        ) as start,
                    {% else %} toStartOfDay(timestampAdd(today(), interval -7 day)) as start,
                    {% end %}
                    {% if defined(date_to) %}
                        toStartOfDay(
                            toDate(
                                {{
                                    Date(
                                        date_to,
                                        description="Finishing day for filtering a date range",
                                        required=False,
                                    )
                                }}
                            )
                        ) as end
                    {% else %} toStartOfDay(today()) as end
                    {% end %}
                {% if _single_day %}
                    select
                        arrayJoin(
                            arrayMap(
                                x -> toDateTime(x),
                                range(
                                    toUInt32(toDateTime(start)), toUInt32(timestampAdd(end, interval 1 day)), 3600
                                )
                            )
                        ) as date
                {% else %}
                    select
                        arrayJoin(
                            arrayMap(
                                x -> toDate(x),
                                range(toUInt32(start), toUInt32(timestampAdd(end, interval 1 day)), 24 * 3600)
                            )
                        ) as date
                {% end %}



NODE pageviews
SQL >

    %
                {% if defined(date_from) and day_diff(date_from, date_to) == 0 %}
                    select
                        site_uuid,
                        toStartOfHour(timestamp) as date,
                        session_id,
                        member_status,
                        case
                            when match(user_agent, 'wget|ahrefsbot|curl|urllib|bitdiscovery|\+https://|googlebot')
                            then 'bot'
                            when match(user_agent, 'android')
                            then 'mobile-android'
                            when match(user_agent, 'ipad|iphone|ipod')
                            then 'mobile-ios'
                            else 'desktop'
                        END as device,
                        case
                            when match(user_agent, 'firefox')
                            then 'firefox'
                            when match(user_agent, 'chrome|crios')
                            then 'chrome'
                            when match(user_agent, 'opera')
                            then 'opera'
                            when match(user_agent, 'msie|trident')
                            then 'ie'
                            when match(user_agent, 'iphone|ipad|safari')
                            then 'safari'
                            else 'Unknown'
                        END as browser,
                        location,
                        domainWithoutWWW(referrer) as source,
                        pathname,
                        case
                            when match(user_agent, 'windows')
                            then 'windows'
                            when match(user_agent, 'mac')
                            then 'macos'
                            when match(user_agent, 'linux')
                            then 'linux'
                            when match(user_agent, 'android')
                            then 'android'
                            when match(user_agent, 'iphone|ipad|ipod')
                            then 'ios'
                            else 'Unknown'
                        END as os,
                        uniq(session_id) as visits,
                        count() as pageviews,
                        case when min(timestamp) = max(timestamp) then 1 else 0 end as is_bounce,
                        max(timestamp) as latest_view_aux,
                        min(timestamp) as first_view_aux
                    from parsed_hits
                    where toDate(timestamp) = {{ Date(date_from) }}
                    group by toStartOfHour(timestamp), session_id, site_uuid, member_status, device, browser, location, source, pathname, os
                {% else %}
                    select
                        site_uuid,
                        date,
                        member_status,
                        device,
                        browser,
                        location,
                        source,
                        pathname,
                        os,
                        session_id,
                        uniq(session_id) as visits,
                        countMerge(pageviews) as pageviews,
                        case when min(first_view) = max(latest_view) then 1 else 0 end as is_bounce,
                        max(latest_view) as latest_view_aux,
                        min(first_view) as first_view_aux
                    from _mv_sessions
                    where
                        {% if defined(date_from) %} date >= {{ Date(date_from) }}
                        {% else %} date >= timestampAdd(today(), interval -7 day)
                        {% end %}
                        {% if defined(date_to) %} and date <= {{ Date(date_to) }}
                        {% else %} and date <= today()
                        {% end %}
                    group by date, session_id, site_uuid, member_status, device, browser, location, source, pathname, os
                {% end %}



NODE data
SQL >

    %
                select
                    date,
                    uniq(session_id) as visits,
                    sum(pageviews) as pageviews,
                    sum(case when latest_view_aux = first_view_aux then 1 else 0 end) / visits as bounce_rate,
                    avg(latest_view_aux - first_view_aux) as avg_session_sec
                from pageviews
                where
                    site_uuid = {{String(site_uuid, 'mock_site_uuid', description="Tenant ID", required=True)}}
                    {% if defined(member_status) %} and member_status IN {{ Array(member_status, "'undefined', 'free', 'paid'", description="Member status to filter on", required=False) }} {% end %}
                    {% if defined(device) %} and device = {{ String(device, description="Device to filter on", required=False) }} {% end %}
                    {% if defined(browser) %} and browser = {{ String(browser, description="Browser to filter on", required=False) }} {% end %}
                    {% if defined(os) %} and os = {{ String(os, description="Operating system to filter on", required=False) }} {% end %}
                    {% if defined(source) %} and source = {{ String(source, description="Source to filter on", required=False) }} {% end %}
                    {% if defined(location) %} and location = {{ String(location, description="Location to filter on", required=False) }} {% end %}
                    {% if defined(pathname) %} and pathname = {{ String(pathname, description="Pathname to filter on", required=False) }} {% end %}
                group by date



NODE endpoint
SQL >

    select a.date, b.visits, b.pageviews, b.bounce_rate, b.avg_session_sec
    from timeseries a
    left join data b using date