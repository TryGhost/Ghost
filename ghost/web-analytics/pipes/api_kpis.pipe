VERSION 8
TOKEN "stats_page" READ

NODE timeseries
SQL >

    %
        {% set _single_day = defined(date_from) and day_diff(date_from, date_to) == 0 %}
        with
            {% if defined(date_from) %}
                toStartOfDay(
                    toDate(
                        {{
                            Date(
                                date_from,
                                description="Starting day for filtering a date range",
                                required=False,
                            )
                        }}
                    )
                ) as start,
            {% else %} toStartOfDay(timestampAdd(today(), interval -7 day)) as start,
            {% end %}
            {% if defined(date_to) %}
                toStartOfDay(
                    toDate(
                        {{
                            Date(
                                date_to,
                                description="Finishing day for filtering a date range",
                                required=False,
                            )
                        }}
                    )
                ) as end
            {% else %} toStartOfDay(today()) as end
            {% end %}
        {% if _single_day %}
            select
                arrayJoin(
                    arrayMap(
                        x -> toDateTime(toString(toDateTime(x)), {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}}),
                        range(
                            toUInt32(toDateTime(start)), toUInt32(timestampAdd(end, interval 1 day)), 3600
                        )
                    )
                ) as date
        {% else %}
            select
                arrayJoin(
                    arrayMap(
                        x -> toDate(x),
                        range(toUInt32(start), toUInt32(timestampAdd(end, interval 1 day)), 24 * 3600)
                    )
                ) as date
        {% end %}


NODE session_metrics
DESCRIPTION >
    Calculate session-level metrics (visits, pageviews, bounce rate, avg session duration)

SQL >

    %
        select
            site_uuid,
            {% if defined(date_from) and day_diff(date_from, date_to) == 0 %}
                toStartOfHour(toTimezone(first_pageview, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) as date,
            {% else %}
                toDate(toTimezone(first_pageview, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) as date,
            {% end %}
            session_id,
            pageviews,
            is_bounce,
            duration as session_sec
        from mv_session_data sd
            inner join filtered_sessions fs
                on fs.session_id = sd.session_id
        where
            site_uuid = {{ String(site_uuid, 'mock_site_uuid', description="Tenant ID", required=True) }}
            {% if defined(date_from) and day_diff(date_from, date_to) == 0 %}
                and toDate(toTimezone(first_pageview, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) = {{ Date(date_from) }}
            {% else %}
                {% if defined(date_from) %} and toDate(toTimezone(first_pageview, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) >= {{ Date(date_from) }} {% else %} and toDate(toTimezone(first_pageview, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) >= timestampAdd(today(), interval -7 day) {% end %}
                {% if defined(date_to) %} and toDate(toTimezone(first_pageview, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) <= {{ Date(date_to) }} {% else %} and toDate(toTimezone(first_pageview, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) <= today() {% end %}
            {% end %}


NODE data
DESCRIPTION >
    Calculate KPIs per time period

SQL >

    select
        a.date,
        uniq(distinct s.session_id) as visits,
        sum(s.pageviews) as pageviews,
        truncate(avg(s.is_bounce), 2) as bounce_rate,
        truncate(avg(s.session_sec), 2) as avg_session_sec
    from timeseries a
    inner join session_metrics s on a.date = s.date
    group by a.date
    order by a.date


NODE pathname_pageviews
DESCRIPTION >
    Calculate pageviews for specific pathname with time granularity handling

SQL >

    %
            select
                {% if defined(date_from) and day_diff(date_from, date_to) == 0 %}
                    toStartOfHour(toTimezone(timestamp, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) as date,
                {% else %}
                    toDate(toTimezone(timestamp, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) as date,
                {% end %}
                count() pageviews
            from timeseries a
            inner join _mv_hits h on
                {% if defined(date_from) and day_diff(date_from, date_to) == 0 %}
                    a.date = toStartOfHour(toTimezone(timestamp, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}}))
                {% else %}
                    a.date = toDate(toTimezone(timestamp, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}}))
                {% end %}
            where
                site_uuid = {{ String(site_uuid, 'mock_site_uuid', description="Tenant ID", required=True) }}
                {% if defined(date_from) and day_diff(date_from, date_to) == 0 %}
                    and toDate(toTimezone(timestamp, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) = {{ Date(date_from) }}
                {% else %}
                    {% if defined(date_from) %} and toDate(toTimezone(timestamp, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) >= {{ Date(date_from) }} {% else %} and toDate(toTimezone(timestamp, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) >= timestampAdd(today(), interval -7 day) {% end %}
                    {% if defined(date_to) %} and toDate(toTimezone(timestamp, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) <= {{ Date(date_to) }} {% else %} and toDate(toTimezone(timestamp, {{String(timezone, 'Etc/UTC', description="Site timezone", required=True)}})) <= today() {% end %}
                {% end %}
                {% if defined(member_status) %} and member_status IN {{ Array(member_status, "'undefined', 'free', 'paid'", description="Member status to filter on", required=False) }} {% end %}
                {% if defined(device) %} and device = {{ String(device, description="Device to filter on", required=False) }} {% end %}
                {% if defined(browser) %} and browser = {{ String(browser, description="Browser to filter on", required=False) }} {% end %}
                {% if defined(os) %} and os = {{ String(os, description="Operating system to filter on", required=False) }} {% end %}
                {% if defined(source) %} and source = {{ String(source, description="Source to filter on", required=False) }} {% end %}
                {% if defined(location) %} and location = {{ String(location, description="Location to filter on", required=False) }} {% end %}
                {% if defined(pathname) %} and pathname = {{ String(pathname, description="Pathname to filter on", required=False) }} {% end %}
            group by date
            order by date


NODE finished_data
SQL >

    %
            select
                a.date as date,
                coalesce(b.visits, 0) as visits,
                {% if defined(pathname) %}coalesce(c.pageviews, 0){% else %}coalesce(b.pageviews, 0){% end %} as pageviews,
                coalesce(b.bounce_rate, 0) as bounce_rate,
                coalesce(b.avg_session_sec, 0) as avg_session_sec
            from timeseries a
            left join data b on a.date = b.date
            {% if defined(pathname) %}left join pathname_pageviews c on a.date = c.date{% end %}
