name: ghost-e2e
services:
  mysql:
    image: mysql:8.4.5
    command: --innodb-buffer-pool-size=1G --innodb-log-buffer-size=500M --innodb-change-buffer-max-size=50 --innodb-flush-log-at-trx_commit=0 --innodb-flush-method=O_DIRECT
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ghost_testing
      MYSQL_USER: ghost
      MYSQL_PASSWORD: ghost
    tmpfs:
      - /var/lib/mysql
    healthcheck:
      test: ["CMD", "mysql", "-h", "127.0.0.1", "-uroot", "-proot", "ghost_testing", "-e", "SELECT 1"]
      interval: 1s
      retries: 120
      timeout: 5s
      start_period: 10s

  ghost-migrations:
    # if not specified this will default to tag of Ghost project
    image: ${GHOST_IMAGE_TAG:-ghost-monorepo:latest}
    pull_policy: never
    working_dir: /home/ghost
    command: ["yarn", "knex-migrator", "init"]
    environment:
      database__client: mysql2
      database__connection__host: mysql
      database__connection__user: root
      database__connection__password: root
      database__connection__database: ghost_testing
    restart: on-failure:5
    depends_on:
      mysql:
        condition: service_healthy

  caddy:
    image: caddy:latest
    ports:
      - "8080:80"
    volumes:
      - ../.docker/caddy/Caddyfile.e2e:/etc/caddy/Caddyfile:ro
    environment:
      - ANALYTICS_PROXY_TARGET=analytics:3000
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80"]
      interval: 1s
      timeout: 5s
      retries: 30
    depends_on:
      analytics:
        condition: service_healthy

  analytics:
    image: ghost/traffic-analytics:1.0.20
    platform: linux/amd64
    command: ["node", "--enable-source-maps", "dist/server.js"]
    entrypoint: [ "/app/entrypoint.sh" ]
    expose:
      - "3000"
    healthcheck:
      # Simpler: use Node's global fetch (Node 18+)
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:3000').then(r=>process.exit(r.status<500?0:1)).catch(()=>process.exit(1))\"" ]
      interval: 1s
      retries: 120
    volumes:
      - ../.docker/analytics/entrypoint.sh:/app/entrypoint.sh:ro
      - shared-config:/mnt/shared-config:ro
    environment:
      - PROXY_TARGET=http://tinybird-local:7181/v0/events
      - TINYBIRD_WAIT=true
    depends_on:
      tinybird-local:
        condition: service_healthy
      tb-cli:
        condition: service_completed_successfully

  tinybird-local:
    image: tinybirdco/tinybird-local:latest
    platform: linux/amd64
    stop_grace_period: 2s
    ports:
      - "7181:7181"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7181/v0/health" ]
      interval: 1s
      timeout: 5s
      retries: 120

  tb-cli:
    build:
      context: ../
      dockerfile: .docker/tb-cli/Dockerfile
    working_dir: /home/tinybird
    environment:
      - TB_HOST=http://tinybird-local:7181
      - TB_LOCAL_HOST=tinybird-local
    volumes:
      - ../ghost/core/core/server/data/tinybird:/home/tinybird
      - shared-config:/mnt/shared-config
    depends_on:
      tinybird-local:
        condition: service_healthy

  mailpit:
    image: axllent/mailpit
    platform: linux/amd64
    ports:
      - "1026:1025" # SMTP server
      - "8026:8025" # Web interface
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8025"]
      interval: 1s
      retries: 30

  portal:
    image: ${GHOST_IMAGE_TAG:-ghost-monorepo:latest}
    pull_policy: never
    working_dir: /home/ghost/apps/portal
    command: ["yarn", "preview", "--port", "4175", "--host", "0.0.0.0"]
    ports:
      - "4175"  # Dynamic host port assignment
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4175/portal.min.js"]
      interval: 1s
      timeout: 3s
      retries: 30
      start_period: 10s

volumes:
  shared-config:

networks:
  default:
    name: ghost_e2e
