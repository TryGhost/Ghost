{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2020-03-31",
    "endpointPrefix":"wellarchitected",
    "jsonVersion":"1.1",
    "protocol":"rest-json",
    "protocols":["rest-json"],
    "serviceAbbreviation":"Well-Architected",
    "serviceFullName":"AWS Well-Architected Tool",
    "serviceId":"WellArchitected",
    "signatureVersion":"v4",
    "signingName":"wellarchitected",
    "uid":"wellarchitected-2020-03-31",
    "auth":["aws.auth#sigv4"]
  },
  "operations":{
    "AssociateLenses":{
      "name":"AssociateLenses",
      "http":{
        "method":"PATCH",
        "requestUri":"/workloads/{WorkloadId}/associateLenses"
      },
      "input":{"shape":"AssociateLensesInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Associate a lens to a workload.</p> <p>Up to 10 lenses can be associated with a workload in a single API operation. A maximum of 20 lenses can be associated with a workload.</p> <note> <p> <b>Disclaimer</b> </p> <p>By accessing and/or applying custom lenses created by another Amazon Web Services user or account, you acknowledge that custom lenses created by other users and shared with you are Third Party Content as defined in the Amazon Web Services Customer Agreement. </p> </note>"
    },
    "AssociateProfiles":{
      "name":"AssociateProfiles",
      "http":{
        "method":"PATCH",
        "requestUri":"/workloads/{WorkloadId}/associateProfiles"
      },
      "input":{"shape":"AssociateProfilesInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Associate a profile with a workload.</p>"
    },
    "CreateLensShare":{
      "name":"CreateLensShare",
      "http":{
        "method":"POST",
        "requestUri":"/lenses/{LensAlias}/shares"
      },
      "input":{"shape":"CreateLensShareInput"},
      "output":{"shape":"CreateLensShareOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create a lens share.</p> <p>The owner of a lens can share it with other Amazon Web Services accounts, users, an organization, and organizational units (OUs) in the same Amazon Web Services Region. Lenses provided by Amazon Web Services (Amazon Web Services Official Content) cannot be shared.</p> <p> Shared access to a lens is not removed until the lens invitation is deleted.</p> <p>If you share a lens with an organization or OU, all accounts in the organization or OU are granted access to the lens.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/lenses-sharing.html\">Sharing a custom lens</a> in the <i>Well-Architected Tool User Guide</i>.</p> <note> <p> <b>Disclaimer</b> </p> <p>By sharing your custom lenses with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your custom lenses available to those other accounts. Those other accounts may continue to access and use your shared custom lenses even if you delete the custom lenses from your own Amazon Web Services account or terminate your Amazon Web Services account.</p> </note>"
    },
    "CreateLensVersion":{
      "name":"CreateLensVersion",
      "http":{
        "method":"POST",
        "requestUri":"/lenses/{LensAlias}/versions"
      },
      "input":{"shape":"CreateLensVersionInput"},
      "output":{"shape":"CreateLensVersionOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create a new lens version.</p> <p>A lens can have up to 100 versions.</p> <p>Use this operation to publish a new lens version after you have imported a lens. The <code>LensAlias</code> is used to identify the lens to be published. The owner of a lens can share the lens with other Amazon Web Services accounts and users in the same Amazon Web Services Region. Only the owner of a lens can delete it. </p>"
    },
    "CreateMilestone":{
      "name":"CreateMilestone",
      "http":{
        "method":"POST",
        "requestUri":"/workloads/{WorkloadId}/milestones"
      },
      "input":{"shape":"CreateMilestoneInput"},
      "output":{"shape":"CreateMilestoneOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create a milestone for an existing workload.</p>"
    },
    "CreateProfile":{
      "name":"CreateProfile",
      "http":{
        "method":"POST",
        "requestUri":"/profiles"
      },
      "input":{"shape":"CreateProfileInput"},
      "output":{"shape":"CreateProfileOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create a profile.</p>"
    },
    "CreateProfileShare":{
      "name":"CreateProfileShare",
      "http":{
        "method":"POST",
        "requestUri":"/profiles/{ProfileArn}/shares"
      },
      "input":{"shape":"CreateProfileShareInput"},
      "output":{"shape":"CreateProfileShareOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create a profile share.</p>"
    },
    "CreateReviewTemplate":{
      "name":"CreateReviewTemplate",
      "http":{
        "method":"POST",
        "requestUri":"/reviewTemplates"
      },
      "input":{"shape":"CreateReviewTemplateInput"},
      "output":{"shape":"CreateReviewTemplateOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create a review template.</p> <note> <p> <b>Disclaimer</b> </p> <p>Do not include or gather personal identifiable information (PII) of end users or other identifiable individuals in or via your review templates. If your review template or those shared with you and used in your account do include or collect PII you are responsible for: ensuring that the included PII is processed in accordance with applicable law, providing adequate privacy notices, and obtaining necessary consents for processing such data.</p> </note>"
    },
    "CreateTemplateShare":{
      "name":"CreateTemplateShare",
      "http":{
        "method":"POST",
        "requestUri":"/templates/shares/{TemplateArn}"
      },
      "input":{"shape":"CreateTemplateShareInput"},
      "output":{"shape":"CreateTemplateShareOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create a review template share.</p> <p>The owner of a review template can share it with other Amazon Web Services accounts, users, an organization, and organizational units (OUs) in the same Amazon Web Services Region. </p> <p> Shared access to a review template is not removed until the review template share invitation is deleted.</p> <p>If you share a review template with an organization or OU, all accounts in the organization or OU are granted access to the review template.</p> <note> <p> <b>Disclaimer</b> </p> <p>By sharing your review template with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your review template available to those other accounts.</p> </note>"
    },
    "CreateWorkload":{
      "name":"CreateWorkload",
      "http":{
        "method":"POST",
        "requestUri":"/workloads"
      },
      "input":{"shape":"CreateWorkloadInput"},
      "output":{"shape":"CreateWorkloadOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create a new workload.</p> <p>The owner of a workload can share the workload with other Amazon Web Services accounts, users, an organization, and organizational units (OUs) in the same Amazon Web Services Region. Only the owner of a workload can delete it.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/define-workload.html\">Defining a Workload</a> in the <i>Well-Architected Tool User Guide</i>.</p> <important> <p>Either <code>AwsRegions</code>, <code>NonAwsRegions</code>, or both must be specified when creating a workload.</p> <p>You also must specify <code>ReviewOwner</code>, even though the parameter is listed as not being required in the following section. </p> </important> <p>When creating a workload using a review template, you must have the following IAM permissions:</p> <ul> <li> <p> <code>wellarchitected:GetReviewTemplate</code> </p> </li> <li> <p> <code>wellarchitected:GetReviewTemplateAnswer</code> </p> </li> <li> <p> <code>wellarchitected:ListReviewTemplateAnswers</code> </p> </li> <li> <p> <code>wellarchitected:GetReviewTemplateLensReview</code> </p> </li> </ul>"
    },
    "CreateWorkloadShare":{
      "name":"CreateWorkloadShare",
      "http":{
        "method":"POST",
        "requestUri":"/workloads/{WorkloadId}/shares"
      },
      "input":{"shape":"CreateWorkloadShareInput"},
      "output":{"shape":"CreateWorkloadShareOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Create a workload share.</p> <p>The owner of a workload can share it with other Amazon Web Services accounts and users in the same Amazon Web Services Region. Shared access to a workload is not removed until the workload invitation is deleted.</p> <p>If you share a workload with an organization or OU, all accounts in the organization or OU are granted access to the workload.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/workloads-sharing.html\">Sharing a workload</a> in the <i>Well-Architected Tool User Guide</i>.</p>"
    },
    "DeleteLens":{
      "name":"DeleteLens",
      "http":{
        "method":"DELETE",
        "requestUri":"/lenses/{LensAlias}"
      },
      "input":{"shape":"DeleteLensInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Delete an existing lens.</p> <p>Only the owner of a lens can delete it. After the lens is deleted, Amazon Web Services accounts and users that you shared the lens with can continue to use it, but they will no longer be able to apply it to new workloads. </p> <note> <p> <b>Disclaimer</b> </p> <p>By sharing your custom lenses with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your custom lenses available to those other accounts. Those other accounts may continue to access and use your shared custom lenses even if you delete the custom lenses from your own Amazon Web Services account or terminate your Amazon Web Services account.</p> </note>"
    },
    "DeleteLensShare":{
      "name":"DeleteLensShare",
      "http":{
        "method":"DELETE",
        "requestUri":"/lenses/{LensAlias}/shares/{ShareId}"
      },
      "input":{"shape":"DeleteLensShareInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Delete a lens share.</p> <p>After the lens share is deleted, Amazon Web Services accounts, users, organizations, and organizational units (OUs) that you shared the lens with can continue to use it, but they will no longer be able to apply it to new workloads.</p> <note> <p> <b>Disclaimer</b> </p> <p>By sharing your custom lenses with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your custom lenses available to those other accounts. Those other accounts may continue to access and use your shared custom lenses even if you delete the custom lenses from your own Amazon Web Services account or terminate your Amazon Web Services account.</p> </note>"
    },
    "DeleteProfile":{
      "name":"DeleteProfile",
      "http":{
        "method":"DELETE",
        "requestUri":"/profiles/{ProfileArn}"
      },
      "input":{"shape":"DeleteProfileInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Delete a profile.</p> <note> <p> <b>Disclaimer</b> </p> <p>By sharing your profile with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your profile available to those other accounts. Those other accounts may continue to access and use your shared profile even if you delete the profile from your own Amazon Web Services account or terminate your Amazon Web Services account.</p> </note>"
    },
    "DeleteProfileShare":{
      "name":"DeleteProfileShare",
      "http":{
        "method":"DELETE",
        "requestUri":"/profiles/{ProfileArn}/shares/{ShareId}"
      },
      "input":{"shape":"DeleteProfileShareInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Delete a profile share.</p>"
    },
    "DeleteReviewTemplate":{
      "name":"DeleteReviewTemplate",
      "http":{
        "method":"DELETE",
        "requestUri":"/reviewTemplates/{TemplateArn}"
      },
      "input":{"shape":"DeleteReviewTemplateInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Delete a review template.</p> <p>Only the owner of a review template can delete it.</p> <p>After the review template is deleted, Amazon Web Services accounts, users, organizations, and organizational units (OUs) that you shared the review template with will no longer be able to apply it to new workloads.</p>"
    },
    "DeleteTemplateShare":{
      "name":"DeleteTemplateShare",
      "http":{
        "method":"DELETE",
        "requestUri":"/templates/shares/{TemplateArn}/{ShareId}"
      },
      "input":{"shape":"DeleteTemplateShareInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Delete a review template share.</p> <p>After the review template share is deleted, Amazon Web Services accounts, users, organizations, and organizational units (OUs) that you shared the review template with will no longer be able to apply it to new workloads.</p>"
    },
    "DeleteWorkload":{
      "name":"DeleteWorkload",
      "http":{
        "method":"DELETE",
        "requestUri":"/workloads/{WorkloadId}"
      },
      "input":{"shape":"DeleteWorkloadInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Delete an existing workload.</p>"
    },
    "DeleteWorkloadShare":{
      "name":"DeleteWorkloadShare",
      "http":{
        "method":"DELETE",
        "requestUri":"/workloads/{WorkloadId}/shares/{ShareId}"
      },
      "input":{"shape":"DeleteWorkloadShareInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Delete a workload share.</p>"
    },
    "DisassociateLenses":{
      "name":"DisassociateLenses",
      "http":{
        "method":"PATCH",
        "requestUri":"/workloads/{WorkloadId}/disassociateLenses"
      },
      "input":{"shape":"DisassociateLensesInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Disassociate a lens from a workload.</p> <p>Up to 10 lenses can be disassociated from a workload in a single API operation.</p> <note> <p>The Amazon Web Services Well-Architected Framework lens (<code>wellarchitected</code>) cannot be removed from a workload.</p> </note>"
    },
    "DisassociateProfiles":{
      "name":"DisassociateProfiles",
      "http":{
        "method":"PATCH",
        "requestUri":"/workloads/{WorkloadId}/disassociateProfiles"
      },
      "input":{"shape":"DisassociateProfilesInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Disassociate a profile from a workload.</p>"
    },
    "ExportLens":{
      "name":"ExportLens",
      "http":{
        "method":"GET",
        "requestUri":"/lenses/{LensAlias}/export"
      },
      "input":{"shape":"ExportLensInput"},
      "output":{"shape":"ExportLensOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Export an existing lens.</p> <p>Only the owner of a lens can export it. Lenses provided by Amazon Web Services (Amazon Web Services Official Content) cannot be exported.</p> <p>Lenses are defined in JSON. For more information, see <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/lenses-format-specification.html\">JSON format specification</a> in the <i>Well-Architected Tool User Guide</i>.</p> <note> <p> <b>Disclaimer</b> </p> <p>Do not include or gather personal identifiable information (PII) of end users or other identifiable individuals in or via your custom lenses. If your custom lens or those shared with you and used in your account do include or collect PII you are responsible for: ensuring that the included PII is processed in accordance with applicable law, providing adequate privacy notices, and obtaining necessary consents for processing such data.</p> </note>"
    },
    "GetAnswer":{
      "name":"GetAnswer",
      "http":{
        "method":"GET",
        "requestUri":"/workloads/{WorkloadId}/lensReviews/{LensAlias}/answers/{QuestionId}"
      },
      "input":{"shape":"GetAnswerInput"},
      "output":{"shape":"GetAnswerOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get the answer to a specific question in a workload review.</p>"
    },
    "GetConsolidatedReport":{
      "name":"GetConsolidatedReport",
      "http":{
        "method":"GET",
        "requestUri":"/consolidatedReport"
      },
      "input":{"shape":"GetConsolidatedReportInput"},
      "output":{"shape":"GetConsolidatedReportOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"}
      ],
      "documentation":"<p>Get a consolidated report of your workloads.</p> <p>You can optionally choose to include workloads that have been shared with you.</p>"
    },
    "GetGlobalSettings":{
      "name":"GetGlobalSettings",
      "http":{
        "method":"GET",
        "requestUri":"/global-settings"
      },
      "output":{"shape":"GetGlobalSettingsOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Global settings for all workloads.</p>"
    },
    "GetLens":{
      "name":"GetLens",
      "http":{
        "method":"GET",
        "requestUri":"/lenses/{LensAlias}"
      },
      "input":{"shape":"GetLensInput"},
      "output":{"shape":"GetLensOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get an existing lens.</p>"
    },
    "GetLensReview":{
      "name":"GetLensReview",
      "http":{
        "method":"GET",
        "requestUri":"/workloads/{WorkloadId}/lensReviews/{LensAlias}"
      },
      "input":{"shape":"GetLensReviewInput"},
      "output":{"shape":"GetLensReviewOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get lens review.</p>"
    },
    "GetLensReviewReport":{
      "name":"GetLensReviewReport",
      "http":{
        "method":"GET",
        "requestUri":"/workloads/{WorkloadId}/lensReviews/{LensAlias}/report"
      },
      "input":{"shape":"GetLensReviewReportInput"},
      "output":{"shape":"GetLensReviewReportOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get lens review report.</p>"
    },
    "GetLensVersionDifference":{
      "name":"GetLensVersionDifference",
      "http":{
        "method":"GET",
        "requestUri":"/lenses/{LensAlias}/versionDifference"
      },
      "input":{"shape":"GetLensVersionDifferenceInput"},
      "output":{"shape":"GetLensVersionDifferenceOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get lens version differences.</p>"
    },
    "GetMilestone":{
      "name":"GetMilestone",
      "http":{
        "method":"GET",
        "requestUri":"/workloads/{WorkloadId}/milestones/{MilestoneNumber}"
      },
      "input":{"shape":"GetMilestoneInput"},
      "output":{"shape":"GetMilestoneOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get a milestone for an existing workload.</p>"
    },
    "GetProfile":{
      "name":"GetProfile",
      "http":{
        "method":"GET",
        "requestUri":"/profiles/{ProfileArn}"
      },
      "input":{"shape":"GetProfileInput"},
      "output":{"shape":"GetProfileOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get profile information.</p>"
    },
    "GetProfileTemplate":{
      "name":"GetProfileTemplate",
      "http":{
        "method":"GET",
        "requestUri":"/profileTemplate"
      },
      "input":{"shape":"GetProfileTemplateInput"},
      "output":{"shape":"GetProfileTemplateOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get profile template.</p>"
    },
    "GetReviewTemplate":{
      "name":"GetReviewTemplate",
      "http":{
        "method":"GET",
        "requestUri":"/reviewTemplates/{TemplateArn}"
      },
      "input":{"shape":"GetReviewTemplateInput"},
      "output":{"shape":"GetReviewTemplateOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get review template.</p>"
    },
    "GetReviewTemplateAnswer":{
      "name":"GetReviewTemplateAnswer",
      "http":{
        "method":"GET",
        "requestUri":"/reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}/answers/{QuestionId}"
      },
      "input":{"shape":"GetReviewTemplateAnswerInput"},
      "output":{"shape":"GetReviewTemplateAnswerOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get review template answer.</p>"
    },
    "GetReviewTemplateLensReview":{
      "name":"GetReviewTemplateLensReview",
      "http":{
        "method":"GET",
        "requestUri":"/reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}"
      },
      "input":{"shape":"GetReviewTemplateLensReviewInput"},
      "output":{"shape":"GetReviewTemplateLensReviewOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get a lens review associated with a review template.</p>"
    },
    "GetWorkload":{
      "name":"GetWorkload",
      "http":{
        "method":"GET",
        "requestUri":"/workloads/{WorkloadId}"
      },
      "input":{"shape":"GetWorkloadInput"},
      "output":{"shape":"GetWorkloadOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Get an existing workload.</p>"
    },
    "ImportLens":{
      "name":"ImportLens",
      "http":{
        "method":"PUT",
        "requestUri":"/importLens"
      },
      "input":{"shape":"ImportLensInput"},
      "output":{"shape":"ImportLensOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Import a new custom lens or update an existing custom lens.</p> <p>To update an existing custom lens, specify its ARN as the <code>LensAlias</code>. If no ARN is specified, a new custom lens is created.</p> <p>The new or updated lens will have a status of <code>DRAFT</code>. The lens cannot be applied to workloads or shared with other Amazon Web Services accounts until it's published with <a>CreateLensVersion</a>.</p> <p>Lenses are defined in JSON. For more information, see <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/lenses-format-specification.html\">JSON format specification</a> in the <i>Well-Architected Tool User Guide</i>.</p> <p>A custom lens cannot exceed 500 KB in size.</p> <note> <p> <b>Disclaimer</b> </p> <p>Do not include or gather personal identifiable information (PII) of end users or other identifiable individuals in or via your custom lenses. If your custom lens or those shared with you and used in your account do include or collect PII you are responsible for: ensuring that the included PII is processed in accordance with applicable law, providing adequate privacy notices, and obtaining necessary consents for processing such data.</p> </note>"
    },
    "ListAnswers":{
      "name":"ListAnswers",
      "http":{
        "method":"GET",
        "requestUri":"/workloads/{WorkloadId}/lensReviews/{LensAlias}/answers"
      },
      "input":{"shape":"ListAnswersInput"},
      "output":{"shape":"ListAnswersOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List of answers for a particular workload and lens.</p>"
    },
    "ListCheckDetails":{
      "name":"ListCheckDetails",
      "http":{
        "method":"POST",
        "requestUri":"/workloads/{WorkloadId}/checks"
      },
      "input":{"shape":"ListCheckDetailsInput"},
      "output":{"shape":"ListCheckDetailsOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List of Trusted Advisor check details by account related to the workload.</p>"
    },
    "ListCheckSummaries":{
      "name":"ListCheckSummaries",
      "http":{
        "method":"POST",
        "requestUri":"/workloads/{WorkloadId}/checkSummaries"
      },
      "input":{"shape":"ListCheckSummariesInput"},
      "output":{"shape":"ListCheckSummariesOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List of Trusted Advisor checks summarized for all accounts related to the workload.</p>"
    },
    "ListLensReviewImprovements":{
      "name":"ListLensReviewImprovements",
      "http":{
        "method":"GET",
        "requestUri":"/workloads/{WorkloadId}/lensReviews/{LensAlias}/improvements"
      },
      "input":{"shape":"ListLensReviewImprovementsInput"},
      "output":{"shape":"ListLensReviewImprovementsOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List the improvements of a particular lens review.</p>"
    },
    "ListLensReviews":{
      "name":"ListLensReviews",
      "http":{
        "method":"GET",
        "requestUri":"/workloads/{WorkloadId}/lensReviews"
      },
      "input":{"shape":"ListLensReviewsInput"},
      "output":{"shape":"ListLensReviewsOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List lens reviews for a particular workload.</p>"
    },
    "ListLensShares":{
      "name":"ListLensShares",
      "http":{
        "method":"GET",
        "requestUri":"/lenses/{LensAlias}/shares"
      },
      "input":{"shape":"ListLensSharesInput"},
      "output":{"shape":"ListLensSharesOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List the lens shares associated with the lens.</p>"
    },
    "ListLenses":{
      "name":"ListLenses",
      "http":{
        "method":"GET",
        "requestUri":"/lenses"
      },
      "input":{"shape":"ListLensesInput"},
      "output":{"shape":"ListLensesOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List the available lenses.</p>"
    },
    "ListMilestones":{
      "name":"ListMilestones",
      "http":{
        "method":"POST",
        "requestUri":"/workloads/{WorkloadId}/milestonesSummaries"
      },
      "input":{"shape":"ListMilestonesInput"},
      "output":{"shape":"ListMilestonesOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List all milestones for an existing workload.</p>"
    },
    "ListNotifications":{
      "name":"ListNotifications",
      "http":{
        "method":"POST",
        "requestUri":"/notifications"
      },
      "input":{"shape":"ListNotificationsInput"},
      "output":{"shape":"ListNotificationsOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List lens notifications.</p>"
    },
    "ListProfileNotifications":{
      "name":"ListProfileNotifications",
      "http":{
        "method":"GET",
        "requestUri":"/profileNotifications/"
      },
      "input":{"shape":"ListProfileNotificationsInput"},
      "output":{"shape":"ListProfileNotificationsOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List profile notifications.</p>"
    },
    "ListProfileShares":{
      "name":"ListProfileShares",
      "http":{
        "method":"GET",
        "requestUri":"/profiles/{ProfileArn}/shares"
      },
      "input":{"shape":"ListProfileSharesInput"},
      "output":{"shape":"ListProfileSharesOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List profile shares.</p>"
    },
    "ListProfiles":{
      "name":"ListProfiles",
      "http":{
        "method":"GET",
        "requestUri":"/profileSummaries"
      },
      "input":{"shape":"ListProfilesInput"},
      "output":{"shape":"ListProfilesOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List profiles.</p>"
    },
    "ListReviewTemplateAnswers":{
      "name":"ListReviewTemplateAnswers",
      "http":{
        "method":"GET",
        "requestUri":"/reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}/answers"
      },
      "input":{"shape":"ListReviewTemplateAnswersInput"},
      "output":{"shape":"ListReviewTemplateAnswersOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List the answers of a review template.</p>"
    },
    "ListReviewTemplates":{
      "name":"ListReviewTemplates",
      "http":{
        "method":"GET",
        "requestUri":"/reviewTemplates"
      },
      "input":{"shape":"ListReviewTemplatesInput"},
      "output":{"shape":"ListReviewTemplatesOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List review templates.</p>"
    },
    "ListShareInvitations":{
      "name":"ListShareInvitations",
      "http":{
        "method":"GET",
        "requestUri":"/shareInvitations"
      },
      "input":{"shape":"ListShareInvitationsInput"},
      "output":{"shape":"ListShareInvitationsOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List the share invitations.</p> <p> <code>WorkloadNamePrefix</code>, <code>LensNamePrefix</code>, <code>ProfileNamePrefix</code>, and <code>TemplateNamePrefix</code> are mutually exclusive. Use the parameter that matches your <code>ShareResourceType</code>.</p>"
    },
    "ListTagsForResource":{
      "name":"ListTagsForResource",
      "http":{
        "method":"GET",
        "requestUri":"/tags/{WorkloadArn}"
      },
      "input":{"shape":"ListTagsForResourceInput"},
      "output":{"shape":"ListTagsForResourceOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>List the tags for a resource.</p> <note> <p>The WorkloadArn parameter can be a workload ARN, a custom lens ARN, a profile ARN, or review template ARN.</p> </note>"
    },
    "ListTemplateShares":{
      "name":"ListTemplateShares",
      "http":{
        "method":"GET",
        "requestUri":"/templates/shares/{TemplateArn}"
      },
      "input":{"shape":"ListTemplateSharesInput"},
      "output":{"shape":"ListTemplateSharesOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List review template shares.</p>"
    },
    "ListWorkloadShares":{
      "name":"ListWorkloadShares",
      "http":{
        "method":"GET",
        "requestUri":"/workloads/{WorkloadId}/shares"
      },
      "input":{"shape":"ListWorkloadSharesInput"},
      "output":{"shape":"ListWorkloadSharesOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>List the workload shares associated with the workload.</p>"
    },
    "ListWorkloads":{
      "name":"ListWorkloads",
      "http":{
        "method":"POST",
        "requestUri":"/workloadsSummaries"
      },
      "input":{"shape":"ListWorkloadsInput"},
      "output":{"shape":"ListWorkloadsOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Paginated list of workloads.</p>"
    },
    "TagResource":{
      "name":"TagResource",
      "http":{
        "method":"POST",
        "requestUri":"/tags/{WorkloadArn}"
      },
      "input":{"shape":"TagResourceInput"},
      "output":{"shape":"TagResourceOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Adds one or more tags to the specified resource.</p> <note> <p>The WorkloadArn parameter can be a workload ARN, a custom lens ARN, a profile ARN, or review template ARN.</p> </note>"
    },
    "UntagResource":{
      "name":"UntagResource",
      "http":{
        "method":"DELETE",
        "requestUri":"/tags/{WorkloadArn}"
      },
      "input":{"shape":"UntagResourceInput"},
      "output":{"shape":"UntagResourceOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Deletes specified tags from a resource.</p> <note> <p>The WorkloadArn parameter can be a workload ARN, a custom lens ARN, a profile ARN, or review template ARN.</p> </note> <p>To specify multiple tags, use separate <b>tagKeys</b> parameters, for example:</p> <p> <code>DELETE /tags/WorkloadArn?tagKeys=key1&amp;tagKeys=key2</code> </p>"
    },
    "UpdateAnswer":{
      "name":"UpdateAnswer",
      "http":{
        "method":"PATCH",
        "requestUri":"/workloads/{WorkloadId}/lensReviews/{LensAlias}/answers/{QuestionId}"
      },
      "input":{"shape":"UpdateAnswerInput"},
      "output":{"shape":"UpdateAnswerOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update the answer to a specific question in a workload review.</p>"
    },
    "UpdateGlobalSettings":{
      "name":"UpdateGlobalSettings",
      "http":{
        "method":"PATCH",
        "requestUri":"/global-settings"
      },
      "input":{"shape":"UpdateGlobalSettingsInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update whether the Amazon Web Services account is opted into organization sharing and discovery integration features.</p>"
    },
    "UpdateIntegration":{
      "name":"UpdateIntegration",
      "http":{
        "method":"POST",
        "requestUri":"/workloads/{WorkloadId}/updateIntegration"
      },
      "input":{"shape":"UpdateIntegrationInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ConflictException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update integration features.</p>"
    },
    "UpdateLensReview":{
      "name":"UpdateLensReview",
      "http":{
        "method":"PATCH",
        "requestUri":"/workloads/{WorkloadId}/lensReviews/{LensAlias}"
      },
      "input":{"shape":"UpdateLensReviewInput"},
      "output":{"shape":"UpdateLensReviewOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update lens review for a particular workload.</p>"
    },
    "UpdateProfile":{
      "name":"UpdateProfile",
      "http":{
        "method":"PATCH",
        "requestUri":"/profiles/{ProfileArn}"
      },
      "input":{"shape":"UpdateProfileInput"},
      "output":{"shape":"UpdateProfileOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update a profile.</p>"
    },
    "UpdateReviewTemplate":{
      "name":"UpdateReviewTemplate",
      "http":{
        "method":"PATCH",
        "requestUri":"/reviewTemplates/{TemplateArn}"
      },
      "input":{"shape":"UpdateReviewTemplateInput"},
      "output":{"shape":"UpdateReviewTemplateOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update a review template.</p>"
    },
    "UpdateReviewTemplateAnswer":{
      "name":"UpdateReviewTemplateAnswer",
      "http":{
        "method":"PATCH",
        "requestUri":"/reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}/answers/{QuestionId}"
      },
      "input":{"shape":"UpdateReviewTemplateAnswerInput"},
      "output":{"shape":"UpdateReviewTemplateAnswerOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update a review template answer.</p>"
    },
    "UpdateReviewTemplateLensReview":{
      "name":"UpdateReviewTemplateLensReview",
      "http":{
        "method":"PATCH",
        "requestUri":"/reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}"
      },
      "input":{"shape":"UpdateReviewTemplateLensReviewInput"},
      "output":{"shape":"UpdateReviewTemplateLensReviewOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update a lens review associated with a review template.</p>"
    },
    "UpdateShareInvitation":{
      "name":"UpdateShareInvitation",
      "http":{
        "method":"PATCH",
        "requestUri":"/shareInvitations/{ShareInvitationId}"
      },
      "input":{"shape":"UpdateShareInvitationInput"},
      "output":{"shape":"UpdateShareInvitationOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update a workload or custom lens share invitation.</p> <note> <p>This API operation can be called independently of any resource. Previous documentation implied that a workload ARN must be specified.</p> </note>"
    },
    "UpdateWorkload":{
      "name":"UpdateWorkload",
      "http":{
        "method":"PATCH",
        "requestUri":"/workloads/{WorkloadId}"
      },
      "input":{"shape":"UpdateWorkloadInput"},
      "output":{"shape":"UpdateWorkloadOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update an existing workload.</p>"
    },
    "UpdateWorkloadShare":{
      "name":"UpdateWorkloadShare",
      "http":{
        "method":"PATCH",
        "requestUri":"/workloads/{WorkloadId}/shares/{ShareId}"
      },
      "input":{"shape":"UpdateWorkloadShareInput"},
      "output":{"shape":"UpdateWorkloadShareOutput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Update a workload share.</p>"
    },
    "UpgradeLensReview":{
      "name":"UpgradeLensReview",
      "http":{
        "method":"PUT",
        "requestUri":"/workloads/{WorkloadId}/lensReviews/{LensAlias}/upgrade"
      },
      "input":{"shape":"UpgradeLensReviewInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Upgrade lens review for a particular workload.</p>"
    },
    "UpgradeProfileVersion":{
      "name":"UpgradeProfileVersion",
      "http":{
        "method":"PUT",
        "requestUri":"/workloads/{WorkloadId}/profiles/{ProfileArn}/upgrade"
      },
      "input":{"shape":"UpgradeProfileVersionInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Upgrade a profile.</p>"
    },
    "UpgradeReviewTemplateLensReview":{
      "name":"UpgradeReviewTemplateLensReview",
      "http":{
        "method":"PUT",
        "requestUri":"/reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}/upgrade"
      },
      "input":{"shape":"UpgradeReviewTemplateLensReviewInput"},
      "errors":[
        {"shape":"ValidationException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ConflictException"},
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Upgrade the lens review of a review template.</p>"
    }
  },
  "shapes":{
    "AccessDeniedException":{
      "type":"structure",
      "required":["Message"],
      "members":{
        "Message":{"shape":"ExceptionMessage"}
      },
      "documentation":"<p>User does not have sufficient access to perform this action.</p>",
      "error":{"httpStatusCode":403},
      "exception":true
    },
    "AccountJiraConfigurationInput":{
      "type":"structure",
      "members":{
        "IssueManagementStatus":{
          "shape":"AccountJiraIssueManagementStatus",
          "documentation":"<p>Account-level: Jira issue management status.</p>"
        },
        "IssueManagementType":{
          "shape":"IssueManagementType",
          "documentation":"<p>Account-level: Jira issue management type.</p>"
        },
        "JiraProjectKey":{
          "shape":"JiraProjectKey",
          "documentation":"<p>Account-level: Jira project key to sync workloads to.</p>"
        },
        "IntegrationStatus":{
          "shape":"IntegrationStatusInput",
          "documentation":"<p>Account-level: Configuration status of the Jira integration.</p>"
        }
      },
      "documentation":"<p>Account-level: Input for the Jira configuration.</p>"
    },
    "AccountJiraConfigurationOutput":{
      "type":"structure",
      "members":{
        "IntegrationStatus":{
          "shape":"IntegrationStatus",
          "documentation":"<p>Account-level: Configuration status of the Jira integration.</p>"
        },
        "IssueManagementStatus":{
          "shape":"AccountJiraIssueManagementStatus",
          "documentation":"<p>Account-level: Jira issue management status.</p>"
        },
        "IssueManagementType":{
          "shape":"IssueManagementType",
          "documentation":"<p>Account-level: Jira issue management type.</p>"
        },
        "Subdomain":{
          "shape":"Subdomain",
          "documentation":"<p>Account-level: Jira subdomain URL.</p>"
        },
        "JiraProjectKey":{
          "shape":"JiraProjectKey",
          "documentation":"<p>Account-level: Jira project key to sync workloads to.</p>"
        },
        "StatusMessage":{
          "shape":"StatusMessage",
          "documentation":"<p>Account-level: Status message on configuration of the Jira integration.</p>"
        }
      },
      "documentation":"<p>Account-level: Output configuration of the Jira integration.</p>"
    },
    "AccountJiraIssueManagementStatus":{
      "type":"string",
      "enum":[
        "ENABLED",
        "DISABLED"
      ]
    },
    "AccountSummary":{
      "type":"map",
      "key":{"shape":"CheckStatus"},
      "value":{"shape":"CheckStatusCount"},
      "documentation":"<p>Account summary for a Well-Architected best practice in relation to Trusted Advisor checks.</p>"
    },
    "AdditionalResourceType":{
      "type":"string",
      "enum":[
        "HELPFUL_RESOURCE",
        "IMPROVEMENT_PLAN"
      ]
    },
    "AdditionalResources":{
      "type":"structure",
      "members":{
        "Type":{
          "shape":"AdditionalResourceType",
          "documentation":"<p>Type of additional resource for a custom lens.</p>"
        },
        "Content":{
          "shape":"Urls",
          "documentation":"<p>The URLs for additional resources, either helpful resources or improvement plans, for a custom lens. Up to five additional URLs can be specified.</p>"
        }
      },
      "documentation":"<p>The choice level additional resources for a custom lens.</p> <p>This field does not apply to Amazon Web Services official lenses.</p>"
    },
    "AdditionalResourcesList":{
      "type":"list",
      "member":{"shape":"AdditionalResources"}
    },
    "Answer":{
      "type":"structure",
      "members":{
        "QuestionId":{"shape":"QuestionId"},
        "PillarId":{"shape":"PillarId"},
        "QuestionTitle":{"shape":"QuestionTitle"},
        "QuestionDescription":{"shape":"QuestionDescription"},
        "ImprovementPlanUrl":{"shape":"ImprovementPlanUrl"},
        "HelpfulResourceUrl":{"shape":"HelpfulResourceUrl"},
        "HelpfulResourceDisplayText":{
          "shape":"DisplayText",
          "documentation":"<p>The helpful resource text to be displayed for a custom lens.</p> <p>This field does not apply to Amazon Web Services official lenses.</p>"
        },
        "Choices":{"shape":"Choices"},
        "SelectedChoices":{"shape":"SelectedChoices"},
        "ChoiceAnswers":{
          "shape":"ChoiceAnswers",
          "documentation":"<p>A list of selected choices to a question in your workload.</p>"
        },
        "IsApplicable":{"shape":"IsApplicable"},
        "Risk":{"shape":"Risk"},
        "Notes":{"shape":"Notes"},
        "Reason":{
          "shape":"AnswerReason",
          "documentation":"<p>The reason why the question is not applicable to your workload.</p>"
        },
        "JiraConfiguration":{
          "shape":"JiraConfiguration",
          "documentation":"<p>Configuration of the Jira integration.</p>"
        }
      },
      "documentation":"<p>An answer of the question.</p>"
    },
    "AnswerReason":{
      "type":"string",
      "enum":[
        "OUT_OF_SCOPE",
        "BUSINESS_PRIORITIES",
        "ARCHITECTURE_CONSTRAINTS",
        "OTHER",
        "NONE"
      ]
    },
    "AnswerSummaries":{
      "type":"list",
      "member":{"shape":"AnswerSummary"},
      "documentation":"<p>List of answer summaries of lens review in a workload.</p>"
    },
    "AnswerSummary":{
      "type":"structure",
      "members":{
        "QuestionId":{"shape":"QuestionId"},
        "PillarId":{"shape":"PillarId"},
        "QuestionTitle":{"shape":"QuestionTitle"},
        "Choices":{"shape":"Choices"},
        "SelectedChoices":{"shape":"SelectedChoices"},
        "ChoiceAnswerSummaries":{
          "shape":"ChoiceAnswerSummaries",
          "documentation":"<p>A list of selected choices to a question in your workload.</p>"
        },
        "IsApplicable":{"shape":"IsApplicable"},
        "Risk":{"shape":"Risk"},
        "Reason":{
          "shape":"AnswerReason",
          "documentation":"<p>The reason why a choice is non-applicable to a question in your workload.</p>"
        },
        "QuestionType":{
          "shape":"QuestionType",
          "documentation":"<p>The type of the question.</p>"
        },
        "JiraConfiguration":{
          "shape":"JiraConfiguration",
          "documentation":"<p>Configuration of the Jira integration.</p>"
        }
      },
      "documentation":"<p>An answer summary of a lens review in a workload.</p>"
    },
    "ApplicationArn":{
      "type":"string",
      "max":2084,
      "pattern":"arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:/applications/[a-z0-9]+"
    },
    "AssociateLensesInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "LensAliases"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "LensAliases":{"shape":"LensAliases"}
      },
      "documentation":"<p>Input to associate lens reviews.</p>"
    },
    "AssociateProfilesInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "ProfileArns"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "ProfileArns":{
          "shape":"ProfileArns",
          "documentation":"<p>The list of profile ARNs to associate with the workload.</p>"
        }
      }
    },
    "AwsAccountId":{
      "type":"string",
      "documentation":"<p>An Amazon Web Services account ID.</p>",
      "max":12,
      "min":12,
      "pattern":"[0-9]{12}"
    },
    "AwsRegion":{
      "type":"string",
      "documentation":"<p>An Amazon Web Services Region, for example, <code>us-west-2</code> or <code>ap-northeast-1</code>.</p>",
      "max":100
    },
    "Base64String":{
      "type":"string",
      "documentation":"<p>The Base64-encoded string representation of a lens review report.</p> <p>This data can be used to create a PDF file.</p> <p>Only returned by <a>GetConsolidatedReport</a> when <code>PDF</code> format is requested.</p>"
    },
    "BestPractice":{
      "type":"structure",
      "members":{
        "ChoiceId":{"shape":"ChoiceId"},
        "ChoiceTitle":{"shape":"ChoiceTitle"}
      },
      "documentation":"<p>A best practice, or question choice, that has been identified as a risk in this question.</p>"
    },
    "BestPractices":{
      "type":"list",
      "member":{"shape":"BestPractice"}
    },
    "CheckDescription":{"type":"string"},
    "CheckDetail":{
      "type":"structure",
      "members":{
        "Id":{
          "shape":"CheckId",
          "documentation":"<p>Trusted Advisor check ID.</p>"
        },
        "Name":{
          "shape":"CheckName",
          "documentation":"<p>Trusted Advisor check name.</p>"
        },
        "Description":{
          "shape":"CheckDescription",
          "documentation":"<p>Trusted Advisor check description.</p>"
        },
        "Provider":{
          "shape":"CheckProvider",
          "documentation":"<p>Provider of the check related to the best practice.</p>"
        },
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>Well-Architected Lens ARN associated to the check.</p>"
        },
        "PillarId":{"shape":"PillarId"},
        "QuestionId":{"shape":"QuestionId"},
        "ChoiceId":{"shape":"ChoiceId"},
        "Status":{
          "shape":"CheckStatus",
          "documentation":"<p>Status associated to the check.</p>"
        },
        "AccountId":{"shape":"AwsAccountId"},
        "FlaggedResources":{
          "shape":"FlaggedResources",
          "documentation":"<p>Count of flagged resources associated to the check.</p>"
        },
        "Reason":{
          "shape":"CheckFailureReason",
          "documentation":"<p>Reason associated to the check.</p>"
        },
        "UpdatedAt":{"shape":"Timestamp"}
      },
      "documentation":"<p>Account details for a Well-Architected best practice in relation to Trusted Advisor checks.</p>"
    },
    "CheckDetails":{
      "type":"list",
      "member":{"shape":"CheckDetail"}
    },
    "CheckFailureReason":{
      "type":"string",
      "enum":[
        "ASSUME_ROLE_ERROR",
        "ACCESS_DENIED",
        "UNKNOWN_ERROR",
        "PREMIUM_SUPPORT_REQUIRED"
      ]
    },
    "CheckId":{"type":"string"},
    "CheckName":{"type":"string"},
    "CheckProvider":{
      "type":"string",
      "enum":["TRUSTED_ADVISOR"]
    },
    "CheckStatus":{
      "type":"string",
      "enum":[
        "OKAY",
        "WARNING",
        "ERROR",
        "NOT_AVAILABLE",
        "FETCH_FAILED"
      ]
    },
    "CheckStatusCount":{
      "type":"integer",
      "max":101,
      "min":1
    },
    "CheckSummaries":{
      "type":"list",
      "member":{"shape":"CheckSummary"}
    },
    "CheckSummary":{
      "type":"structure",
      "members":{
        "Id":{
          "shape":"CheckId",
          "documentation":"<p>Trusted Advisor check ID.</p>"
        },
        "Name":{
          "shape":"CheckName",
          "documentation":"<p>Trusted Advisor check name.</p>"
        },
        "Provider":{
          "shape":"CheckProvider",
          "documentation":"<p>Provider of the check related to the best practice.</p>"
        },
        "Description":{
          "shape":"CheckDescription",
          "documentation":"<p>Trusted Advisor check description.</p>"
        },
        "UpdatedAt":{"shape":"Timestamp"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>Well-Architected Lens ARN associated to the check.</p>"
        },
        "PillarId":{"shape":"PillarId"},
        "QuestionId":{"shape":"QuestionId"},
        "ChoiceId":{"shape":"ChoiceId"},
        "Status":{
          "shape":"CheckStatus",
          "documentation":"<p>Status associated to the check.</p>"
        },
        "AccountSummary":{
          "shape":"AccountSummary",
          "documentation":"<p>Account summary associated to the check.</p>"
        }
      },
      "documentation":"<p>Trusted Advisor check summary.</p>"
    },
    "Choice":{
      "type":"structure",
      "members":{
        "ChoiceId":{"shape":"ChoiceId"},
        "Title":{"shape":"ChoiceTitle"},
        "Description":{"shape":"ChoiceDescription"},
        "HelpfulResource":{
          "shape":"ChoiceContent",
          "documentation":"<p>The helpful resource (both text and URL) for a particular choice.</p> <p>This field only applies to custom lenses. Each choice can have only one helpful resource.</p>"
        },
        "ImprovementPlan":{
          "shape":"ChoiceContent",
          "documentation":"<p>The improvement plan (both text and URL) for a particular choice.</p> <p>This field only applies to custom lenses. Each choice can have only one improvement plan.</p>"
        },
        "AdditionalResources":{
          "shape":"AdditionalResourcesList",
          "documentation":"<p>The additional resources for a choice in a custom lens.</p> <p>A choice can have up to two additional resources: one of type <code>HELPFUL_RESOURCE</code>, one of type <code>IMPROVEMENT_PLAN</code>, or both.</p>"
        }
      },
      "documentation":"<p>A choice available to answer question.</p>"
    },
    "ChoiceAnswer":{
      "type":"structure",
      "members":{
        "ChoiceId":{"shape":"ChoiceId"},
        "Status":{
          "shape":"ChoiceStatus",
          "documentation":"<p>The status of a choice.</p>"
        },
        "Reason":{
          "shape":"ChoiceReason",
          "documentation":"<p>The reason why a choice is non-applicable to a question in your workload.</p>"
        },
        "Notes":{
          "shape":"ChoiceNotes",
          "documentation":"<p>The notes associated with a choice.</p>"
        }
      },
      "documentation":"<p>A choice that has been answered on a question in your workload.</p>"
    },
    "ChoiceAnswerSummaries":{
      "type":"list",
      "member":{"shape":"ChoiceAnswerSummary"}
    },
    "ChoiceAnswerSummary":{
      "type":"structure",
      "members":{
        "ChoiceId":{"shape":"ChoiceId"},
        "Status":{
          "shape":"ChoiceStatus",
          "documentation":"<p>The status of a choice.</p>"
        },
        "Reason":{
          "shape":"ChoiceReason",
          "documentation":"<p>The reason why a choice is non-applicable to a question in your workload.</p>"
        }
      },
      "documentation":"<p>A choice summary that has been answered on a question in your workload.</p>"
    },
    "ChoiceAnswers":{
      "type":"list",
      "member":{"shape":"ChoiceAnswer"}
    },
    "ChoiceContent":{
      "type":"structure",
      "members":{
        "DisplayText":{
          "shape":"ChoiceContentDisplayText",
          "documentation":"<p>The display text for the choice content.</p>"
        },
        "Url":{
          "shape":"ChoiceContentUrl",
          "documentation":"<p>The URL for the choice content.</p>"
        }
      },
      "documentation":"<p>The choice content.</p>"
    },
    "ChoiceContentDisplayText":{
      "type":"string",
      "max":1024,
      "min":1
    },
    "ChoiceContentUrl":{
      "type":"string",
      "max":1024,
      "min":1
    },
    "ChoiceDescription":{
      "type":"string",
      "documentation":"<p>The description of a choice.</p>",
      "max":1024,
      "min":1
    },
    "ChoiceId":{
      "type":"string",
      "documentation":"<p>The ID of a choice.</p>",
      "max":64,
      "min":1
    },
    "ChoiceImprovementPlan":{
      "type":"structure",
      "members":{
        "ChoiceId":{"shape":"ChoiceId"},
        "DisplayText":{
          "shape":"DisplayText",
          "documentation":"<p>The display text for the improvement plan.</p>"
        },
        "ImprovementPlanUrl":{"shape":"ImprovementPlanUrl"}
      },
      "documentation":"<p>The choice level improvement plan.</p>"
    },
    "ChoiceImprovementPlans":{
      "type":"list",
      "member":{"shape":"ChoiceImprovementPlan"}
    },
    "ChoiceNotes":{
      "type":"string",
      "max":250
    },
    "ChoiceReason":{
      "type":"string",
      "enum":[
        "OUT_OF_SCOPE",
        "BUSINESS_PRIORITIES",
        "ARCHITECTURE_CONSTRAINTS",
        "OTHER",
        "NONE"
      ]
    },
    "ChoiceStatus":{
      "type":"string",
      "enum":[
        "SELECTED",
        "NOT_APPLICABLE",
        "UNSELECTED"
      ]
    },
    "ChoiceTitle":{
      "type":"string",
      "documentation":"<p>The title of a choice.</p>",
      "max":512,
      "min":1
    },
    "ChoiceUpdate":{
      "type":"structure",
      "required":["Status"],
      "members":{
        "Status":{
          "shape":"ChoiceStatus",
          "documentation":"<p>The status of a choice.</p>"
        },
        "Reason":{
          "shape":"ChoiceReason",
          "documentation":"<p>The reason why a choice is non-applicable to a question in your workload.</p>"
        },
        "Notes":{
          "shape":"ChoiceNotes",
          "documentation":"<p>The notes associated with a choice.</p>"
        }
      },
      "documentation":"<p>A list of choices to be updated.</p>"
    },
    "ChoiceUpdates":{
      "type":"map",
      "key":{"shape":"ChoiceId"},
      "value":{"shape":"ChoiceUpdate"}
    },
    "Choices":{
      "type":"list",
      "member":{"shape":"Choice"},
      "documentation":"<p>List of choices available for a question.</p>"
    },
    "ClientRequestToken":{
      "type":"string",
      "documentation":"<p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>",
      "max":2048,
      "min":1
    },
    "ConflictException":{
      "type":"structure",
      "required":[
        "Message",
        "ResourceId",
        "ResourceType"
      ],
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "ResourceId":{"shape":"ExceptionResourceId"},
        "ResourceType":{"shape":"ExceptionResourceType"}
      },
      "documentation":"<p>The resource has already been processed, was deleted, or is too large.</p>",
      "error":{"httpStatusCode":409},
      "exception":true
    },
    "ConsolidatedReportMetric":{
      "type":"structure",
      "members":{
        "MetricType":{
          "shape":"MetricType",
          "documentation":"<p>The metric type of a metric in the consolidated report. Currently only WORKLOAD metric types are supported.</p>"
        },
        "RiskCounts":{"shape":"RiskCounts"},
        "WorkloadId":{"shape":"WorkloadId"},
        "WorkloadName":{"shape":"WorkloadName"},
        "WorkloadArn":{"shape":"WorkloadArn"},
        "UpdatedAt":{"shape":"Timestamp"},
        "Lenses":{
          "shape":"LensMetrics",
          "documentation":"<p>The metrics for the lenses in the workload.</p>"
        },
        "LensesAppliedCount":{
          "shape":"LensesAppliedCount",
          "documentation":"<p>The total number of lenses applied to the workload.</p>"
        }
      },
      "documentation":"<p>A metric that contributes to the consolidated report.</p>"
    },
    "ConsolidatedReportMetrics":{
      "type":"list",
      "member":{"shape":"ConsolidatedReportMetric"}
    },
    "Count":{
      "type":"integer",
      "documentation":"<p>A non-negative integer that denotes how many.</p>",
      "min":0
    },
    "CreateLensShareInput":{
      "type":"structure",
      "required":[
        "LensAlias",
        "SharedWith",
        "ClientRequestToken"
      ],
      "members":{
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "SharedWith":{"shape":"SharedWith"},
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true
        }
      }
    },
    "CreateLensShareOutput":{
      "type":"structure",
      "members":{
        "ShareId":{"shape":"ShareId"}
      }
    },
    "CreateLensVersionInput":{
      "type":"structure",
      "required":[
        "LensAlias",
        "LensVersion",
        "ClientRequestToken"
      ],
      "members":{
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "LensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The version of the lens being created.</p>"
        },
        "IsMajorVersion":{
          "shape":"IsMajorVersion",
          "documentation":"<p>Set to true if this new major lens version.</p>"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true
        }
      }
    },
    "CreateLensVersionOutput":{
      "type":"structure",
      "members":{
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens.</p>"
        },
        "LensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The version of the lens.</p>"
        }
      }
    },
    "CreateMilestoneInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "MilestoneName",
        "ClientRequestToken"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "MilestoneName":{"shape":"MilestoneName"},
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true
        }
      },
      "documentation":"<p>Input for milestone creation.</p>"
    },
    "CreateMilestoneOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "MilestoneNumber":{"shape":"MilestoneNumber"}
      },
      "documentation":"<p>Output of a create milestone call.</p>"
    },
    "CreateProfileInput":{
      "type":"structure",
      "required":[
        "ProfileName",
        "ProfileDescription",
        "ProfileQuestions",
        "ClientRequestToken"
      ],
      "members":{
        "ProfileName":{
          "shape":"ProfileName",
          "documentation":"<p>Name of the profile.</p>"
        },
        "ProfileDescription":{
          "shape":"ProfileDescription",
          "documentation":"<p>The profile description.</p>"
        },
        "ProfileQuestions":{
          "shape":"ProfileQuestionUpdates",
          "documentation":"<p>The profile questions.</p>"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags assigned to the profile.</p>"
        }
      }
    },
    "CreateProfileOutput":{
      "type":"structure",
      "members":{
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>"
        },
        "ProfileVersion":{
          "shape":"ProfileVersion",
          "documentation":"<p>Version of the profile.</p>"
        }
      }
    },
    "CreateProfileShareInput":{
      "type":"structure",
      "required":[
        "ProfileArn",
        "SharedWith",
        "ClientRequestToken"
      ],
      "members":{
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>",
          "location":"uri",
          "locationName":"ProfileArn"
        },
        "SharedWith":{"shape":"SharedWith"},
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true
        }
      }
    },
    "CreateProfileShareOutput":{
      "type":"structure",
      "members":{
        "ShareId":{"shape":"ShareId"},
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>"
        }
      }
    },
    "CreateReviewTemplateInput":{
      "type":"structure",
      "required":[
        "TemplateName",
        "Description",
        "Lenses",
        "ClientRequestToken"
      ],
      "members":{
        "TemplateName":{
          "shape":"TemplateName",
          "documentation":"<p>Name of the review template.</p>"
        },
        "Description":{
          "shape":"TemplateDescription",
          "documentation":"<p>The review template description.</p>"
        },
        "Lenses":{
          "shape":"ReviewTemplateLenses",
          "documentation":"<p>Lenses applied to the review template.</p>"
        },
        "Notes":{"shape":"Notes"},
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags assigned to the review template.</p>"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true
        }
      }
    },
    "CreateReviewTemplateOutput":{
      "type":"structure",
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>"
        }
      }
    },
    "CreateTemplateShareInput":{
      "type":"structure",
      "required":[
        "TemplateArn",
        "SharedWith",
        "ClientRequestToken"
      ],
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>",
          "location":"uri",
          "locationName":"TemplateArn"
        },
        "SharedWith":{"shape":"SharedWith"},
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true
        }
      }
    },
    "CreateTemplateShareOutput":{
      "type":"structure",
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>"
        },
        "ShareId":{"shape":"ShareId"}
      }
    },
    "CreateWorkloadInput":{
      "type":"structure",
      "required":[
        "WorkloadName",
        "Description",
        "Environment",
        "Lenses",
        "ClientRequestToken"
      ],
      "members":{
        "WorkloadName":{"shape":"WorkloadName"},
        "Description":{"shape":"WorkloadDescription"},
        "Environment":{"shape":"WorkloadEnvironment"},
        "AccountIds":{"shape":"WorkloadAccountIds"},
        "AwsRegions":{"shape":"WorkloadAwsRegions"},
        "NonAwsRegions":{"shape":"WorkloadNonAwsRegions"},
        "PillarPriorities":{"shape":"WorkloadPillarPriorities"},
        "ArchitecturalDesign":{"shape":"WorkloadArchitecturalDesign"},
        "ReviewOwner":{"shape":"WorkloadReviewOwner"},
        "IndustryType":{"shape":"WorkloadIndustryType"},
        "Industry":{"shape":"WorkloadIndustry"},
        "Lenses":{"shape":"WorkloadLenses"},
        "Notes":{"shape":"Notes"},
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags to be associated with the workload.</p>"
        },
        "DiscoveryConfig":{
          "shape":"WorkloadDiscoveryConfig",
          "documentation":"<p>Well-Architected discovery configuration settings associated to the workload.</p>"
        },
        "Applications":{
          "shape":"WorkloadApplications",
          "documentation":"<p>List of AppRegistry application ARNs associated to the workload.</p>"
        },
        "ProfileArns":{
          "shape":"WorkloadProfileArns",
          "documentation":"<p>The list of profile ARNs associated with the workload.</p>"
        },
        "ReviewTemplateArns":{
          "shape":"ReviewTemplateArns",
          "documentation":"<p>The list of review template ARNs to associate with the workload.</p>"
        },
        "JiraConfiguration":{
          "shape":"WorkloadJiraConfigurationInput",
          "documentation":"<p>Jira configuration settings when creating a workload.</p>"
        }
      },
      "documentation":"<p>Input for workload creation.</p>"
    },
    "CreateWorkloadOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "WorkloadArn":{"shape":"WorkloadArn"}
      },
      "documentation":"<p>Output of a create workload call.</p>"
    },
    "CreateWorkloadShareInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "SharedWith",
        "PermissionType",
        "ClientRequestToken"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "SharedWith":{"shape":"SharedWith"},
        "PermissionType":{"shape":"PermissionType"},
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true
        }
      },
      "documentation":"<p>Input for Create Workload Share</p>"
    },
    "CreateWorkloadShareOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "ShareId":{"shape":"ShareId"}
      },
      "documentation":"<p>Input for Create Workload Share</p>"
    },
    "DefinitionType":{
      "type":"string",
      "enum":[
        "WORKLOAD_METADATA",
        "APP_REGISTRY"
      ]
    },
    "DeleteLensInput":{
      "type":"structure",
      "required":[
        "LensAlias",
        "ClientRequestToken",
        "LensStatus"
      ],
      "members":{
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"ClientRequestToken"
        },
        "LensStatus":{
          "shape":"LensStatusType",
          "documentation":"<p>The status of the lens to be deleted.</p>",
          "location":"querystring",
          "locationName":"LensStatus"
        }
      }
    },
    "DeleteLensShareInput":{
      "type":"structure",
      "required":[
        "ShareId",
        "LensAlias",
        "ClientRequestToken"
      ],
      "members":{
        "ShareId":{
          "shape":"ShareId",
          "location":"uri",
          "locationName":"ShareId"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"ClientRequestToken"
        }
      }
    },
    "DeleteProfileInput":{
      "type":"structure",
      "required":[
        "ProfileArn",
        "ClientRequestToken"
      ],
      "members":{
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>",
          "location":"uri",
          "locationName":"ProfileArn"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"ClientRequestToken"
        }
      }
    },
    "DeleteProfileShareInput":{
      "type":"structure",
      "required":[
        "ShareId",
        "ProfileArn",
        "ClientRequestToken"
      ],
      "members":{
        "ShareId":{
          "shape":"ShareId",
          "location":"uri",
          "locationName":"ShareId"
        },
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>",
          "location":"uri",
          "locationName":"ProfileArn"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"ClientRequestToken"
        }
      }
    },
    "DeleteReviewTemplateInput":{
      "type":"structure",
      "required":[
        "TemplateArn",
        "ClientRequestToken"
      ],
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>",
          "location":"uri",
          "locationName":"TemplateArn"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"ClientRequestToken"
        }
      }
    },
    "DeleteTemplateShareInput":{
      "type":"structure",
      "required":[
        "ShareId",
        "TemplateArn",
        "ClientRequestToken"
      ],
      "members":{
        "ShareId":{
          "shape":"ShareId",
          "location":"uri",
          "locationName":"ShareId"
        },
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>",
          "location":"uri",
          "locationName":"TemplateArn"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"ClientRequestToken"
        }
      }
    },
    "DeleteWorkloadInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "ClientRequestToken"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"ClientRequestToken"
        }
      },
      "documentation":"<p>Input for workload deletion.</p>"
    },
    "DeleteWorkloadShareInput":{
      "type":"structure",
      "required":[
        "ShareId",
        "WorkloadId",
        "ClientRequestToken"
      ],
      "members":{
        "ShareId":{
          "shape":"ShareId",
          "location":"uri",
          "locationName":"ShareId"
        },
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"ClientRequestToken"
        }
      },
      "documentation":"<p>Input for Delete Workload Share</p>"
    },
    "DifferenceStatus":{
      "type":"string",
      "enum":[
        "UPDATED",
        "NEW",
        "DELETED"
      ]
    },
    "DisassociateLensesInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "LensAliases"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "LensAliases":{"shape":"LensAliases"}
      },
      "documentation":"<p>Input to disassociate lens reviews.</p>"
    },
    "DisassociateProfilesInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "ProfileArns"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "ProfileArns":{
          "shape":"ProfileArns",
          "documentation":"<p>The list of profile ARNs to disassociate from the workload.</p>"
        }
      }
    },
    "DiscoveryIntegrationStatus":{
      "type":"string",
      "enum":[
        "ENABLED",
        "DISABLED"
      ]
    },
    "DisplayText":{
      "type":"string",
      "max":64,
      "min":1
    },
    "ExceptionMessage":{
      "type":"string",
      "documentation":"<p>Description of the error.</p>"
    },
    "ExceptionResourceId":{
      "type":"string",
      "documentation":"<p>Identifier of the resource affected.</p>"
    },
    "ExceptionResourceType":{
      "type":"string",
      "documentation":"<p>Type of the resource affected.</p>"
    },
    "ExportLensInput":{
      "type":"structure",
      "required":["LensAlias"],
      "members":{
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "LensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The lens version to be exported.</p>",
          "location":"querystring",
          "locationName":"LensVersion"
        }
      }
    },
    "ExportLensOutput":{
      "type":"structure",
      "members":{
        "LensJSON":{
          "shape":"LensJSON",
          "documentation":"<p>The JSON representation of a lens.</p>"
        }
      }
    },
    "FlaggedResources":{
      "type":"integer",
      "max":9999,
      "min":1
    },
    "GetAnswerInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "LensAlias",
        "QuestionId"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "QuestionId":{
          "shape":"QuestionId",
          "location":"uri",
          "locationName":"QuestionId"
        },
        "MilestoneNumber":{
          "shape":"MilestoneNumber",
          "location":"querystring",
          "locationName":"MilestoneNumber"
        }
      },
      "documentation":"<p>Input to get answer.</p>"
    },
    "GetAnswerOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "MilestoneNumber":{"shape":"MilestoneNumber"},
        "LensAlias":{"shape":"LensAlias"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens.</p>"
        },
        "Answer":{"shape":"Answer"}
      },
      "documentation":"<p>Output of a get answer call.</p>"
    },
    "GetConsolidatedReportInput":{
      "type":"structure",
      "required":["Format"],
      "members":{
        "Format":{
          "shape":"ReportFormat",
          "documentation":"<p>The format of the consolidated report.</p> <p>For <code>PDF</code>, <code>Base64String</code> is returned. For <code>JSON</code>, <code>Metrics</code> is returned.</p>",
          "location":"querystring",
          "locationName":"Format"
        },
        "IncludeSharedResources":{
          "shape":"IncludeSharedResources",
          "documentation":"<p>Set to <code>true</code> to have shared resources included in the report.</p>",
          "location":"querystring",
          "locationName":"IncludeSharedResources"
        },
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"GetConsolidatedReportMaxResults",
          "documentation":"<p>The maximum number of results to return for this request.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        }
      }
    },
    "GetConsolidatedReportMaxResults":{
      "type":"integer",
      "max":15,
      "min":1
    },
    "GetConsolidatedReportOutput":{
      "type":"structure",
      "members":{
        "Metrics":{
          "shape":"ConsolidatedReportMetrics",
          "documentation":"<p>The metrics that make up the consolidated report.</p> <p>Only returned when <code>JSON</code> format is requested.</p>"
        },
        "NextToken":{"shape":"NextToken"},
        "Base64String":{"shape":"Base64String"}
      }
    },
    "GetGlobalSettingsOutput":{
      "type":"structure",
      "members":{
        "OrganizationSharingStatus":{
          "shape":"OrganizationSharingStatus",
          "documentation":"<p>Amazon Web Services Organizations sharing status.</p>"
        },
        "DiscoveryIntegrationStatus":{
          "shape":"DiscoveryIntegrationStatus",
          "documentation":"<p>Discovery integration status.</p>"
        },
        "JiraConfiguration":{
          "shape":"AccountJiraConfigurationOutput",
          "documentation":"<p>Jira configuration status.</p>"
        }
      }
    },
    "GetLensInput":{
      "type":"structure",
      "required":["LensAlias"],
      "members":{
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "LensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The lens version to be retrieved.</p>",
          "location":"querystring",
          "locationName":"LensVersion"
        }
      }
    },
    "GetLensOutput":{
      "type":"structure",
      "members":{
        "Lens":{
          "shape":"Lens",
          "documentation":"<p>A lens return object.</p>"
        }
      }
    },
    "GetLensReviewInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "LensAlias"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "MilestoneNumber":{
          "shape":"MilestoneNumber",
          "location":"querystring",
          "locationName":"MilestoneNumber"
        }
      },
      "documentation":"<p>Input to get lens review.</p>"
    },
    "GetLensReviewOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "MilestoneNumber":{"shape":"MilestoneNumber"},
        "LensReview":{"shape":"LensReview"}
      },
      "documentation":"<p>Output of a get lens review call.</p>"
    },
    "GetLensReviewReportInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "LensAlias"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "MilestoneNumber":{
          "shape":"MilestoneNumber",
          "location":"querystring",
          "locationName":"MilestoneNumber"
        }
      },
      "documentation":"<p>Input to get lens review report.</p>"
    },
    "GetLensReviewReportOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "MilestoneNumber":{"shape":"MilestoneNumber"},
        "LensReviewReport":{"shape":"LensReviewReport"}
      },
      "documentation":"<p>Output of a get lens review report call.</p>"
    },
    "GetLensVersionDifferenceInput":{
      "type":"structure",
      "required":["LensAlias"],
      "members":{
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "BaseLensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The base version of the lens.</p>",
          "location":"querystring",
          "locationName":"BaseLensVersion"
        },
        "TargetLensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The lens version to target a difference for.</p>",
          "location":"querystring",
          "locationName":"TargetLensVersion"
        }
      }
    },
    "GetLensVersionDifferenceOutput":{
      "type":"structure",
      "members":{
        "LensAlias":{"shape":"LensAlias"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens.</p>"
        },
        "BaseLensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The base version of the lens.</p>"
        },
        "TargetLensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The target lens version for the lens.</p>"
        },
        "LatestLensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The latest version of the lens.</p>"
        },
        "VersionDifferences":{"shape":"VersionDifferences"}
      }
    },
    "GetMilestoneInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "MilestoneNumber"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "MilestoneNumber":{
          "shape":"MilestoneNumber",
          "location":"uri",
          "locationName":"MilestoneNumber"
        }
      },
      "documentation":"<p>Input to get a milestone.</p>"
    },
    "GetMilestoneOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "Milestone":{"shape":"Milestone"}
      },
      "documentation":"<p>Output of a get milestone call.</p>"
    },
    "GetProfileInput":{
      "type":"structure",
      "required":["ProfileArn"],
      "members":{
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>",
          "location":"uri",
          "locationName":"ProfileArn"
        },
        "ProfileVersion":{
          "shape":"ProfileVersion",
          "documentation":"<p>The profile version.</p>",
          "location":"querystring",
          "locationName":"ProfileVersion"
        }
      }
    },
    "GetProfileOutput":{
      "type":"structure",
      "members":{
        "Profile":{
          "shape":"Profile",
          "documentation":"<p>The profile.</p>"
        }
      }
    },
    "GetProfileTemplateInput":{
      "type":"structure",
      "members":{}
    },
    "GetProfileTemplateOutput":{
      "type":"structure",
      "members":{
        "ProfileTemplate":{
          "shape":"ProfileTemplate",
          "documentation":"<p>The profile template.</p>"
        }
      }
    },
    "GetReviewTemplateAnswerInput":{
      "type":"structure",
      "required":[
        "TemplateArn",
        "LensAlias",
        "QuestionId"
      ],
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>",
          "location":"uri",
          "locationName":"TemplateArn"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "QuestionId":{
          "shape":"QuestionId",
          "location":"uri",
          "locationName":"QuestionId"
        }
      }
    },
    "GetReviewTemplateAnswerOutput":{
      "type":"structure",
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>"
        },
        "LensAlias":{"shape":"LensAlias"},
        "Answer":{
          "shape":"ReviewTemplateAnswer",
          "documentation":"<p>An answer of the question.</p>"
        }
      }
    },
    "GetReviewTemplateInput":{
      "type":"structure",
      "required":["TemplateArn"],
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>",
          "location":"uri",
          "locationName":"TemplateArn"
        }
      }
    },
    "GetReviewTemplateLensReviewInput":{
      "type":"structure",
      "required":[
        "TemplateArn",
        "LensAlias"
      ],
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>",
          "location":"uri",
          "locationName":"TemplateArn"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        }
      }
    },
    "GetReviewTemplateLensReviewOutput":{
      "type":"structure",
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>"
        },
        "LensReview":{
          "shape":"ReviewTemplateLensReview",
          "documentation":"<p>A lens review of a question.</p>"
        }
      }
    },
    "GetReviewTemplateOutput":{
      "type":"structure",
      "members":{
        "ReviewTemplate":{
          "shape":"ReviewTemplate",
          "documentation":"<p>The review template.</p>"
        }
      }
    },
    "GetWorkloadInput":{
      "type":"structure",
      "required":["WorkloadId"],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        }
      },
      "documentation":"<p>Input to get a workload.</p>"
    },
    "GetWorkloadOutput":{
      "type":"structure",
      "members":{
        "Workload":{"shape":"Workload"}
      },
      "documentation":"<p>Output of a get workload call.</p>"
    },
    "HelpfulResourceUrl":{
      "type":"string",
      "documentation":"<p>The helpful resource URL.</p> <p>For Amazon Web Services official lenses, this is the helpful resource URL for a question or choice.</p> <p>For custom lenses, this is the helpful resource URL for a question and is only provided if <code>HelpfulResourceDisplayText</code> was specified for the question.</p>",
      "max":2048,
      "min":1
    },
    "ImportLensInput":{
      "type":"structure",
      "required":[
        "JSONString",
        "ClientRequestToken"
      ],
      "members":{
        "LensAlias":{"shape":"LensAlias"},
        "JSONString":{
          "shape":"LensJSON",
          "documentation":"<p>The JSON representation of a lens.</p>"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>Tags to associate to a lens.</p>"
        }
      }
    },
    "ImportLensOutput":{
      "type":"structure",
      "members":{
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens that was created or updated.</p>"
        },
        "Status":{
          "shape":"ImportLensStatus",
          "documentation":"<p>The status of the imported lens.</p>"
        }
      }
    },
    "ImportLensStatus":{
      "type":"string",
      "enum":[
        "IN_PROGRESS",
        "COMPLETE",
        "ERROR"
      ]
    },
    "ImprovementPlanUrl":{
      "type":"string",
      "documentation":"<p>The improvement plan URL for a question in an Amazon Web Services official lenses.</p> <p>This value is only available if the question has been answered.</p> <p>This value does not apply to custom lenses.</p>",
      "max":2048,
      "min":1
    },
    "ImprovementSummaries":{
      "type":"list",
      "member":{"shape":"ImprovementSummary"},
      "documentation":"<p>List of improvement summaries of lens review in a workload.</p>"
    },
    "ImprovementSummary":{
      "type":"structure",
      "members":{
        "QuestionId":{"shape":"QuestionId"},
        "PillarId":{"shape":"PillarId"},
        "QuestionTitle":{"shape":"QuestionTitle"},
        "Risk":{"shape":"Risk"},
        "ImprovementPlanUrl":{"shape":"ImprovementPlanUrl"},
        "ImprovementPlans":{
          "shape":"ChoiceImprovementPlans",
          "documentation":"<p>The improvement plan details.</p>"
        },
        "JiraConfiguration":{
          "shape":"JiraConfiguration",
          "documentation":"<p>Configuration of the Jira integration.</p>"
        }
      },
      "documentation":"<p>An improvement summary of a lens review in a workload.</p>"
    },
    "IncludeSharedResources":{"type":"boolean"},
    "IntegratingService":{
      "type":"string",
      "enum":["JIRA"]
    },
    "IntegrationStatus":{
      "type":"string",
      "enum":[
        "CONFIGURED",
        "NOT_CONFIGURED"
      ]
    },
    "IntegrationStatusInput":{
      "type":"string",
      "enum":["NOT_CONFIGURED"]
    },
    "InternalServerException":{
      "type":"structure",
      "required":["Message"],
      "members":{
        "Message":{"shape":"ExceptionMessage"}
      },
      "documentation":"<p>There is a problem with the Well-Architected Tool API service.</p>",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "IsApplicable":{
      "type":"boolean",
      "documentation":"<p>Defines whether this question is applicable to a lens review.</p>"
    },
    "IsMajorVersion":{"type":"boolean"},
    "IsReviewOwnerUpdateAcknowledged":{"type":"boolean"},
    "IssueManagementType":{
      "type":"string",
      "enum":[
        "AUTO",
        "MANUAL"
      ]
    },
    "JiraConfiguration":{
      "type":"structure",
      "members":{
        "JiraIssueUrl":{
          "shape":"JiraIssueUrl",
          "documentation":"<p>The URL of the associated Jira issue.</p>"
        },
        "LastSyncedTime":{"shape":"Timestamp"}
      },
      "documentation":"<p>Configuration of the Jira integration.</p>"
    },
    "JiraIssueUrl":{
      "type":"string",
      "max":2048,
      "min":1
    },
    "JiraProjectKey":{
      "type":"string",
      "max":100,
      "min":1,
      "pattern":"^[A-Z][A-Z0-9_]*$"
    },
    "JiraSelectedQuestionConfiguration":{
      "type":"structure",
      "members":{
        "SelectedPillars":{
          "shape":"SelectedPillars",
          "documentation":"<p>Selected pillars in the workload.</p>"
        }
      },
      "documentation":"<p>Selected questions in the workload.</p>"
    },
    "Lens":{
      "type":"structure",
      "members":{
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN of a lens.</p>"
        },
        "LensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The version of a lens.</p>"
        },
        "Name":{"shape":"LensName"},
        "Description":{"shape":"LensDescription"},
        "Owner":{
          "shape":"LensOwner",
          "documentation":"<p>The Amazon Web Services account ID that owns the lens.</p>"
        },
        "ShareInvitationId":{
          "shape":"ShareInvitationId",
          "documentation":"<p>The ID assigned to the share invitation.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags assigned to the lens.</p>"
        }
      },
      "documentation":"<p>A lens return object.</p>"
    },
    "LensAlias":{
      "type":"string",
      "documentation":"<p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>",
      "max":128,
      "min":1
    },
    "LensAliases":{
      "type":"list",
      "member":{"shape":"LensAlias"},
      "documentation":"<p>List of lens aliases to associate or disassociate with a workload. Up to 10 lenses can be specified.</p> <p>Identify a lens using its <a>LensSummary$LensAlias</a>.</p>",
      "min":1
    },
    "LensArn":{"type":"string"},
    "LensDescription":{
      "type":"string",
      "documentation":"<p>The description of the lens.</p>",
      "max":1024,
      "min":1
    },
    "LensJSON":{
      "type":"string",
      "max":500000,
      "min":2
    },
    "LensMetric":{
      "type":"structure",
      "members":{
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The lens ARN.</p>"
        },
        "Pillars":{
          "shape":"PillarMetrics",
          "documentation":"<p>The metrics for the pillars in a lens.</p>"
        },
        "RiskCounts":{"shape":"RiskCounts"}
      },
      "documentation":"<p>A metric for a particular lens in a workload.</p>"
    },
    "LensMetrics":{
      "type":"list",
      "member":{"shape":"LensMetric"}
    },
    "LensName":{
      "type":"string",
      "documentation":"<p>The full name of the lens.</p>",
      "max":128,
      "min":1
    },
    "LensNamePrefix":{
      "type":"string",
      "max":100
    },
    "LensOwner":{"type":"string"},
    "LensReview":{
      "type":"structure",
      "members":{
        "LensAlias":{"shape":"LensAlias"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens.</p>"
        },
        "LensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The version of the lens.</p>"
        },
        "LensName":{"shape":"LensName"},
        "LensStatus":{
          "shape":"LensStatus",
          "documentation":"<p>The status of the lens.</p>"
        },
        "PillarReviewSummaries":{"shape":"PillarReviewSummaries"},
        "JiraConfiguration":{
          "shape":"JiraSelectedQuestionConfiguration",
          "documentation":"<p>Jira configuration status of the Lens review.</p>"
        },
        "UpdatedAt":{"shape":"Timestamp"},
        "Notes":{"shape":"Notes"},
        "RiskCounts":{"shape":"RiskCounts"},
        "NextToken":{"shape":"NextToken"},
        "Profiles":{
          "shape":"WorkloadProfiles",
          "documentation":"<p>The profiles associated with the workload.</p>"
        },
        "PrioritizedRiskCounts":{"shape":"RiskCounts"}
      },
      "documentation":"<p>A lens review of a question.</p>"
    },
    "LensReviewReport":{
      "type":"structure",
      "members":{
        "LensAlias":{"shape":"LensAlias"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens.</p>"
        },
        "Base64String":{"shape":"Base64String"}
      },
      "documentation":"<p>A report of a lens review.</p>"
    },
    "LensReviewSummaries":{
      "type":"list",
      "member":{"shape":"LensReviewSummary"},
      "documentation":"<p>List of lens summaries of lens reviews of a workload.</p>"
    },
    "LensReviewSummary":{
      "type":"structure",
      "members":{
        "LensAlias":{"shape":"LensAlias"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens.</p>"
        },
        "LensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The version of the lens.</p>"
        },
        "LensName":{"shape":"LensName"},
        "LensStatus":{
          "shape":"LensStatus",
          "documentation":"<p>The status of the lens.</p>"
        },
        "UpdatedAt":{"shape":"Timestamp"},
        "RiskCounts":{"shape":"RiskCounts"},
        "Profiles":{
          "shape":"WorkloadProfiles",
          "documentation":"<p>The profiles associated with the workload.</p>"
        },
        "PrioritizedRiskCounts":{"shape":"RiskCounts"}
      },
      "documentation":"<p>A lens review summary of a workload.</p>"
    },
    "LensShareSummaries":{
      "type":"list",
      "member":{"shape":"LensShareSummary"}
    },
    "LensShareSummary":{
      "type":"structure",
      "members":{
        "ShareId":{"shape":"ShareId"},
        "SharedWith":{"shape":"SharedWith"},
        "Status":{"shape":"ShareStatus"},
        "StatusMessage":{
          "shape":"StatusMessage",
          "documentation":"<p>Optional message to compliment the Status field.</p>"
        }
      },
      "documentation":"<p>A lens share summary return object.</p>"
    },
    "LensStatus":{
      "type":"string",
      "enum":[
        "CURRENT",
        "NOT_CURRENT",
        "DEPRECATED",
        "DELETED",
        "UNSHARED"
      ]
    },
    "LensStatusType":{
      "type":"string",
      "enum":[
        "ALL",
        "DRAFT",
        "PUBLISHED"
      ]
    },
    "LensSummaries":{
      "type":"list",
      "member":{"shape":"LensSummary"},
      "documentation":"<p>List of lens summaries of available lenses.</p>"
    },
    "LensSummary":{
      "type":"structure",
      "members":{
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN of the lens.</p>"
        },
        "LensAlias":{"shape":"LensAlias"},
        "LensName":{"shape":"LensName"},
        "LensType":{
          "shape":"LensType",
          "documentation":"<p>The type of the lens.</p>"
        },
        "Description":{"shape":"LensDescription"},
        "CreatedAt":{"shape":"Timestamp"},
        "UpdatedAt":{"shape":"Timestamp"},
        "LensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The version of the lens.</p>"
        },
        "Owner":{"shape":"AwsAccountId"},
        "LensStatus":{
          "shape":"LensStatus",
          "documentation":"<p>The status of the lens.</p>"
        }
      },
      "documentation":"<p>A lens summary of a lens.</p>"
    },
    "LensType":{
      "type":"string",
      "enum":[
        "AWS_OFFICIAL",
        "CUSTOM_SHARED",
        "CUSTOM_SELF"
      ]
    },
    "LensUpgradeSummary":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "WorkloadName":{"shape":"WorkloadName"},
        "LensAlias":{"shape":"LensAlias"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens.</p>"
        },
        "CurrentLensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The current version of the lens.</p>"
        },
        "LatestLensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The latest version of the lens.</p>"
        },
        "ResourceArn":{
          "shape":"ResourceArn",
          "documentation":"<p> <code>ResourceArn</code> of the lens being upgraded</p>"
        },
        "ResourceName":{"shape":"WorkloadName"}
      },
      "documentation":"<p>Lens upgrade summary return object.</p>"
    },
    "LensVersion":{
      "type":"string",
      "max":32,
      "min":1
    },
    "LensesAppliedCount":{
      "type":"integer",
      "min":0
    },
    "ListAnswersInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "LensAlias"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "PillarId":{
          "shape":"PillarId",
          "location":"querystring",
          "locationName":"PillarId"
        },
        "MilestoneNumber":{
          "shape":"MilestoneNumber",
          "location":"querystring",
          "locationName":"MilestoneNumber"
        },
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"ListAnswersMaxResults",
          "documentation":"<p>The maximum number of results to return for this request.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        },
        "QuestionPriority":{
          "shape":"QuestionPriority",
          "documentation":"<p>The priority of the question.</p>",
          "location":"querystring",
          "locationName":"QuestionPriority"
        }
      },
      "documentation":"<p>Input to list answers.</p>"
    },
    "ListAnswersMaxResults":{
      "type":"integer",
      "max":50,
      "min":1
    },
    "ListAnswersOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "MilestoneNumber":{"shape":"MilestoneNumber"},
        "LensAlias":{"shape":"LensAlias"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens.</p>"
        },
        "AnswerSummaries":{"shape":"AnswerSummaries"},
        "NextToken":{"shape":"NextToken"}
      },
      "documentation":"<p>Output of a list answers call.</p>"
    },
    "ListCheckDetailsInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "LensArn",
        "PillarId",
        "QuestionId",
        "ChoiceId"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{"shape":"MaxResults"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>Well-Architected Lens ARN.</p>"
        },
        "PillarId":{"shape":"PillarId"},
        "QuestionId":{"shape":"QuestionId"},
        "ChoiceId":{"shape":"ChoiceId"}
      }
    },
    "ListCheckDetailsOutput":{
      "type":"structure",
      "members":{
        "CheckDetails":{
          "shape":"CheckDetails",
          "documentation":"<p>The details about the Trusted Advisor checks related to the Well-Architected best practice.</p>"
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListCheckSummariesInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "LensArn",
        "PillarId",
        "QuestionId",
        "ChoiceId"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{"shape":"MaxResults"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>Well-Architected Lens ARN.</p>"
        },
        "PillarId":{"shape":"PillarId"},
        "QuestionId":{"shape":"QuestionId"},
        "ChoiceId":{"shape":"ChoiceId"}
      }
    },
    "ListCheckSummariesOutput":{
      "type":"structure",
      "members":{
        "CheckSummaries":{
          "shape":"CheckSummaries",
          "documentation":"<p>List of Trusted Advisor summaries related to the Well-Architected best practice.</p>"
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListLensReviewImprovementsInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "LensAlias"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "PillarId":{
          "shape":"PillarId",
          "location":"querystring",
          "locationName":"PillarId"
        },
        "MilestoneNumber":{
          "shape":"MilestoneNumber",
          "location":"querystring",
          "locationName":"MilestoneNumber"
        },
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"ListLensReviewImprovementsMaxResults",
          "documentation":"<p>The maximum number of results to return for this request.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        },
        "QuestionPriority":{
          "shape":"QuestionPriority",
          "documentation":"<p>The priority of the question.</p>",
          "location":"querystring",
          "locationName":"QuestionPriority"
        }
      },
      "documentation":"<p>Input to list lens review improvements.</p>"
    },
    "ListLensReviewImprovementsMaxResults":{
      "type":"integer",
      "max":100,
      "min":1
    },
    "ListLensReviewImprovementsOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "MilestoneNumber":{"shape":"MilestoneNumber"},
        "LensAlias":{"shape":"LensAlias"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens.</p>"
        },
        "ImprovementSummaries":{"shape":"ImprovementSummaries"},
        "NextToken":{"shape":"NextToken"}
      },
      "documentation":"<p>Output of a list lens review improvements call.</p>"
    },
    "ListLensReviewsInput":{
      "type":"structure",
      "required":["WorkloadId"],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "MilestoneNumber":{
          "shape":"MilestoneNumber",
          "location":"querystring",
          "locationName":"MilestoneNumber"
        },
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"MaxResults",
          "location":"querystring",
          "locationName":"MaxResults"
        }
      },
      "documentation":"<p>Input to list lens reviews.</p>"
    },
    "ListLensReviewsOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "MilestoneNumber":{"shape":"MilestoneNumber"},
        "LensReviewSummaries":{"shape":"LensReviewSummaries"},
        "NextToken":{"shape":"NextToken"}
      },
      "documentation":"<p>Output of a list lens reviews call.</p>"
    },
    "ListLensSharesInput":{
      "type":"structure",
      "required":["LensAlias"],
      "members":{
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "SharedWithPrefix":{
          "shape":"SharedWithPrefix",
          "documentation":"<p>The Amazon Web Services account ID, organization ID, or organizational unit (OU) ID with which the lens is shared.</p>",
          "location":"querystring",
          "locationName":"SharedWithPrefix"
        },
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"ListWorkloadSharesMaxResults",
          "documentation":"<p>The maximum number of results to return for this request.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        },
        "Status":{
          "shape":"ShareStatus",
          "location":"querystring",
          "locationName":"Status"
        }
      }
    },
    "ListLensSharesOutput":{
      "type":"structure",
      "members":{
        "LensShareSummaries":{
          "shape":"LensShareSummaries",
          "documentation":"<p>A list of lens share summaries.</p>"
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListLensesInput":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"MaxResults",
          "location":"querystring",
          "locationName":"MaxResults"
        },
        "LensType":{
          "shape":"LensType",
          "documentation":"<p>The type of lenses to be returned.</p>",
          "location":"querystring",
          "locationName":"LensType"
        },
        "LensStatus":{
          "shape":"LensStatusType",
          "documentation":"<p>The status of lenses to be returned.</p>",
          "location":"querystring",
          "locationName":"LensStatus"
        },
        "LensName":{
          "shape":"LensName",
          "location":"querystring",
          "locationName":"LensName"
        }
      },
      "documentation":"<p>Input to list lenses.</p>"
    },
    "ListLensesOutput":{
      "type":"structure",
      "members":{
        "LensSummaries":{"shape":"LensSummaries"},
        "NextToken":{"shape":"NextToken"}
      },
      "documentation":"<p>Output of a list lenses call.</p>"
    },
    "ListMilestonesInput":{
      "type":"structure",
      "required":["WorkloadId"],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{"shape":"MaxResults"}
      },
      "documentation":"<p>Input to list all milestones for a workload.</p>"
    },
    "ListMilestonesOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "MilestoneSummaries":{"shape":"MilestoneSummaries"},
        "NextToken":{"shape":"NextToken"}
      },
      "documentation":"<p>Output of a list milestones call.</p>"
    },
    "ListNotificationsInput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{
          "shape":"ListNotificationsMaxResults",
          "documentation":"<p>The maximum number of results to return for this request.</p>"
        },
        "ResourceArn":{
          "shape":"ResourceArn",
          "documentation":"<p>The ARN for the related resource for the notification.</p> <note> <p>Only one of <code>WorkloadID</code> or <code>ResourceARN</code> should be specified.</p> </note>"
        }
      }
    },
    "ListNotificationsMaxResults":{
      "type":"integer",
      "max":50,
      "min":1
    },
    "ListNotificationsOutput":{
      "type":"structure",
      "members":{
        "NotificationSummaries":{
          "shape":"NotificationSummaries",
          "documentation":"<p>List of lens notification summaries in a workload.</p>"
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListProfileNotificationsInput":{
      "type":"structure",
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"querystring",
          "locationName":"WorkloadId"
        },
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"MaxResults",
          "location":"querystring",
          "locationName":"MaxResults"
        }
      }
    },
    "ListProfileNotificationsOutput":{
      "type":"structure",
      "members":{
        "NotificationSummaries":{
          "shape":"ProfileNotificationSummaries",
          "documentation":"<p>Notification summaries.</p>"
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListProfileSharesInput":{
      "type":"structure",
      "required":["ProfileArn"],
      "members":{
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>",
          "location":"uri",
          "locationName":"ProfileArn"
        },
        "SharedWithPrefix":{
          "shape":"SharedWithPrefix",
          "documentation":"<p>The Amazon Web Services account ID, organization ID, or organizational unit (OU) ID with which the profile is shared.</p>",
          "location":"querystring",
          "locationName":"SharedWithPrefix"
        },
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"ListProfileSharesMaxResults",
          "documentation":"<p>The maximum number of results to return for this request.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        },
        "Status":{
          "shape":"ShareStatus",
          "location":"querystring",
          "locationName":"Status"
        }
      }
    },
    "ListProfileSharesMaxResults":{
      "type":"integer",
      "max":50,
      "min":1
    },
    "ListProfileSharesOutput":{
      "type":"structure",
      "members":{
        "ProfileShareSummaries":{
          "shape":"ProfileShareSummaries",
          "documentation":"<p>Profile share summaries.</p>"
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListProfilesInput":{
      "type":"structure",
      "members":{
        "ProfileNamePrefix":{
          "shape":"ProfileNamePrefix",
          "documentation":"<p>An optional string added to the beginning of each profile name returned in the results.</p>",
          "location":"querystring",
          "locationName":"ProfileNamePrefix"
        },
        "ProfileOwnerType":{
          "shape":"ProfileOwnerType",
          "documentation":"<p>Profile owner type.</p>",
          "location":"querystring",
          "locationName":"ProfileOwnerType"
        },
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"MaxResults",
          "location":"querystring",
          "locationName":"MaxResults"
        }
      }
    },
    "ListProfilesOutput":{
      "type":"structure",
      "members":{
        "ProfileSummaries":{
          "shape":"ProfileSummaries",
          "documentation":"<p>Profile summaries.</p>"
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListReviewTemplateAnswersInput":{
      "type":"structure",
      "required":[
        "TemplateArn",
        "LensAlias"
      ],
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The ARN of the review template.</p>",
          "location":"uri",
          "locationName":"TemplateArn"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "PillarId":{
          "shape":"PillarId",
          "location":"querystring",
          "locationName":"PillarId"
        },
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"ListReviewTemplateAnswersMaxResults",
          "documentation":"<p>The maximum number of results to return for this request.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        }
      }
    },
    "ListReviewTemplateAnswersMaxResults":{
      "type":"integer",
      "max":50,
      "min":1
    },
    "ListReviewTemplateAnswersOutput":{
      "type":"structure",
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The ARN of the review template.</p>"
        },
        "LensAlias":{"shape":"LensAlias"},
        "AnswerSummaries":{
          "shape":"ReviewTemplateAnswerSummaries",
          "documentation":"<p>List of answer summaries of a lens review in a review template.</p>"
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListReviewTemplatesInput":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"MaxResults",
          "location":"querystring",
          "locationName":"MaxResults"
        }
      }
    },
    "ListReviewTemplatesOutput":{
      "type":"structure",
      "members":{
        "ReviewTemplates":{
          "shape":"ReviewTemplates",
          "documentation":"<p>List of review templates.</p>"
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListShareInvitationsInput":{
      "type":"structure",
      "members":{
        "WorkloadNamePrefix":{
          "shape":"WorkloadNamePrefix",
          "location":"querystring",
          "locationName":"WorkloadNamePrefix"
        },
        "LensNamePrefix":{
          "shape":"LensNamePrefix",
          "documentation":"<p>An optional string added to the beginning of each lens name returned in the results.</p>",
          "location":"querystring",
          "locationName":"LensNamePrefix"
        },
        "ShareResourceType":{
          "shape":"ShareResourceType",
          "documentation":"<p>The type of share invitations to be returned.</p>",
          "location":"querystring",
          "locationName":"ShareResourceType"
        },
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"ListShareInvitationsMaxResults",
          "documentation":"<p>The maximum number of results to return for this request.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        },
        "ProfileNamePrefix":{
          "shape":"ProfileNamePrefix",
          "documentation":"<p>An optional string added to the beginning of each profile name returned in the results.</p>",
          "location":"querystring",
          "locationName":"ProfileNamePrefix"
        },
        "TemplateNamePrefix":{
          "shape":"TemplateNamePrefix",
          "documentation":"<p>An optional string added to the beginning of each review template name returned in the results.</p>",
          "location":"querystring",
          "locationName":"TemplateNamePrefix"
        }
      },
      "documentation":"<p>Input for List Share Invitations</p>"
    },
    "ListShareInvitationsMaxResults":{
      "type":"integer",
      "max":50,
      "min":1
    },
    "ListShareInvitationsOutput":{
      "type":"structure",
      "members":{
        "ShareInvitationSummaries":{
          "shape":"ShareInvitationSummaries",
          "documentation":"<p>List of share invitation summaries in a workload.</p>"
        },
        "NextToken":{"shape":"NextToken"}
      },
      "documentation":"<p>Input for List Share Invitations</p>"
    },
    "ListTagsForResourceInput":{
      "type":"structure",
      "required":["WorkloadArn"],
      "members":{
        "WorkloadArn":{
          "shape":"WorkloadArn",
          "location":"uri",
          "locationName":"WorkloadArn"
        }
      }
    },
    "ListTagsForResourceOutput":{
      "type":"structure",
      "members":{
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags for the resource.</p>"
        }
      }
    },
    "ListTemplateSharesInput":{
      "type":"structure",
      "required":["TemplateArn"],
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>",
          "location":"uri",
          "locationName":"TemplateArn"
        },
        "SharedWithPrefix":{
          "shape":"SharedWithPrefix",
          "documentation":"<p>The Amazon Web Services account ID, organization ID, or organizational unit (OU) ID with which the profile is shared.</p>",
          "location":"querystring",
          "locationName":"SharedWithPrefix"
        },
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"ListTemplateSharesMaxResults",
          "documentation":"<p>The maximum number of results to return for this request.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        },
        "Status":{
          "shape":"ShareStatus",
          "location":"querystring",
          "locationName":"Status"
        }
      }
    },
    "ListTemplateSharesMaxResults":{
      "type":"integer",
      "max":50,
      "min":1
    },
    "ListTemplateSharesOutput":{
      "type":"structure",
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>"
        },
        "TemplateShareSummaries":{
          "shape":"TemplateShareSummaries",
          "documentation":"<p>A review template share summary return object.</p>"
        },
        "NextToken":{"shape":"NextToken"}
      }
    },
    "ListWorkloadSharesInput":{
      "type":"structure",
      "required":["WorkloadId"],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "SharedWithPrefix":{
          "shape":"SharedWithPrefix",
          "documentation":"<p>The Amazon Web Services account ID, organization ID, or organizational unit (OU) ID with which the workload is shared.</p>",
          "location":"querystring",
          "locationName":"SharedWithPrefix"
        },
        "NextToken":{
          "shape":"NextToken",
          "location":"querystring",
          "locationName":"NextToken"
        },
        "MaxResults":{
          "shape":"ListWorkloadSharesMaxResults",
          "documentation":"<p>The maximum number of results to return for this request.</p>",
          "location":"querystring",
          "locationName":"MaxResults"
        },
        "Status":{
          "shape":"ShareStatus",
          "location":"querystring",
          "locationName":"Status"
        }
      },
      "documentation":"<p>Input for List Workload Share</p>"
    },
    "ListWorkloadSharesMaxResults":{
      "type":"integer",
      "max":50,
      "min":1
    },
    "ListWorkloadSharesOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "WorkloadShareSummaries":{"shape":"WorkloadShareSummaries"},
        "NextToken":{"shape":"NextToken"}
      },
      "documentation":"<p>Input for List Workload Share</p>"
    },
    "ListWorkloadsInput":{
      "type":"structure",
      "members":{
        "WorkloadNamePrefix":{"shape":"WorkloadNamePrefix"},
        "NextToken":{"shape":"NextToken"},
        "MaxResults":{
          "shape":"ListWorkloadsMaxResults",
          "documentation":"<p>The maximum number of results to return for this request.</p>"
        }
      },
      "documentation":"<p>Input to list all workloads.</p>"
    },
    "ListWorkloadsMaxResults":{
      "type":"integer",
      "max":50,
      "min":1
    },
    "ListWorkloadsOutput":{
      "type":"structure",
      "members":{
        "WorkloadSummaries":{"shape":"WorkloadSummaries"},
        "NextToken":{"shape":"NextToken"}
      },
      "documentation":"<p>Output of a list workloads call.</p>"
    },
    "MaxResults":{
      "type":"integer",
      "documentation":"<p>The maximum number of results to return for this request.</p>",
      "max":50,
      "min":1
    },
    "MaxSelectedProfileChoices":{
      "type":"integer",
      "min":0
    },
    "MetricType":{
      "type":"string",
      "enum":["WORKLOAD"]
    },
    "Milestone":{
      "type":"structure",
      "members":{
        "MilestoneNumber":{"shape":"MilestoneNumber"},
        "MilestoneName":{"shape":"MilestoneName"},
        "RecordedAt":{"shape":"Timestamp"},
        "Workload":{"shape":"Workload"}
      },
      "documentation":"<p>A milestone return object.</p>"
    },
    "MilestoneName":{
      "type":"string",
      "documentation":"<p>The name of the milestone in a workload.</p> <p>Milestone names must be unique within a workload.</p>",
      "max":100,
      "min":3
    },
    "MilestoneNumber":{
      "type":"integer",
      "documentation":"<p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>",
      "max":100,
      "min":1
    },
    "MilestoneSummaries":{
      "type":"list",
      "member":{"shape":"MilestoneSummary"},
      "documentation":"<p>A list of milestone summaries.</p>"
    },
    "MilestoneSummary":{
      "type":"structure",
      "members":{
        "MilestoneNumber":{"shape":"MilestoneNumber"},
        "MilestoneName":{"shape":"MilestoneName"},
        "RecordedAt":{"shape":"Timestamp"},
        "WorkloadSummary":{"shape":"WorkloadSummary"}
      },
      "documentation":"<p>A milestone summary return object.</p>"
    },
    "MinSelectedProfileChoices":{
      "type":"integer",
      "min":0
    },
    "NextToken":{
      "type":"string",
      "documentation":"<p>The token to use to retrieve the next set of results.</p>"
    },
    "Notes":{
      "type":"string",
      "documentation":"<p>The notes associated with the workload.</p> <p>For a review template, these are the notes that will be associated with the workload when the template is applied.</p>",
      "max":2084
    },
    "NotificationSummaries":{
      "type":"list",
      "member":{"shape":"NotificationSummary"}
    },
    "NotificationSummary":{
      "type":"structure",
      "members":{
        "Type":{
          "shape":"NotificationType",
          "documentation":"<p>The type of notification.</p>"
        },
        "LensUpgradeSummary":{
          "shape":"LensUpgradeSummary",
          "documentation":"<p>Summary of lens upgrade.</p>"
        }
      },
      "documentation":"<p>A notification summary return object.</p>"
    },
    "NotificationType":{
      "type":"string",
      "enum":[
        "LENS_VERSION_UPGRADED",
        "LENS_VERSION_DEPRECATED"
      ]
    },
    "OrganizationSharingStatus":{
      "type":"string",
      "enum":[
        "ENABLED",
        "DISABLED"
      ]
    },
    "PermissionType":{
      "type":"string",
      "documentation":"<p>Permission granted on a share request.</p>",
      "enum":[
        "READONLY",
        "CONTRIBUTOR"
      ]
    },
    "PillarDifference":{
      "type":"structure",
      "members":{
        "PillarId":{"shape":"PillarId"},
        "PillarName":{"shape":"PillarName"},
        "DifferenceStatus":{
          "shape":"DifferenceStatus",
          "documentation":"<p>Indicates the type of change to the pillar.</p>"
        },
        "QuestionDifferences":{
          "shape":"QuestionDifferences",
          "documentation":"<p>List of question differences.</p>"
        }
      },
      "documentation":"<p>A pillar difference return object.</p>"
    },
    "PillarDifferences":{
      "type":"list",
      "member":{"shape":"PillarDifference"}
    },
    "PillarId":{
      "type":"string",
      "documentation":"<p>The ID used to identify a pillar, for example, <code>security</code>.</p> <p>A pillar is identified by its <a>PillarReviewSummary$PillarId</a>.</p>",
      "max":64,
      "min":1
    },
    "PillarMetric":{
      "type":"structure",
      "members":{
        "PillarId":{"shape":"PillarId"},
        "RiskCounts":{"shape":"RiskCounts"},
        "Questions":{
          "shape":"QuestionMetrics",
          "documentation":"<p>The questions that have been identified as risks in the pillar.</p>"
        }
      },
      "documentation":"<p>A metric for a particular pillar in a lens.</p>"
    },
    "PillarMetrics":{
      "type":"list",
      "member":{"shape":"PillarMetric"}
    },
    "PillarName":{
      "type":"string",
      "documentation":"<p>The name of the pillar.</p>",
      "max":128,
      "min":1
    },
    "PillarNotes":{
      "type":"map",
      "key":{"shape":"PillarId"},
      "value":{"shape":"Notes"},
      "documentation":"<p>List of pillar notes of a lens review in a workload.</p> <p>For a review template, these are the notes that will be associated with the workload when the template is applied.</p>"
    },
    "PillarReviewSummaries":{
      "type":"list",
      "member":{"shape":"PillarReviewSummary"},
      "documentation":"<p>List of pillar review summaries of lens review in a workload.</p>"
    },
    "PillarReviewSummary":{
      "type":"structure",
      "members":{
        "PillarId":{"shape":"PillarId"},
        "PillarName":{"shape":"PillarName"},
        "Notes":{"shape":"Notes"},
        "RiskCounts":{"shape":"RiskCounts"},
        "PrioritizedRiskCounts":{"shape":"RiskCounts"}
      },
      "documentation":"<p>A pillar review summary of a lens review.</p>"
    },
    "Profile":{
      "type":"structure",
      "members":{
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>"
        },
        "ProfileVersion":{
          "shape":"ProfileVersion",
          "documentation":"<p>The profile version.</p>"
        },
        "ProfileName":{
          "shape":"ProfileName",
          "documentation":"<p>The profile name.</p>"
        },
        "ProfileDescription":{
          "shape":"ProfileDescription",
          "documentation":"<p>The profile description.</p>"
        },
        "ProfileQuestions":{
          "shape":"ProfileQuestions",
          "documentation":"<p>Profile questions.</p>"
        },
        "Owner":{"shape":"AwsAccountId"},
        "CreatedAt":{"shape":"Timestamp"},
        "UpdatedAt":{"shape":"Timestamp"},
        "ShareInvitationId":{
          "shape":"ShareInvitationId",
          "documentation":"<p>The ID assigned to the share invitation.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags assigned to the profile.</p>"
        }
      },
      "documentation":"<p>A profile.</p>"
    },
    "ProfileArn":{
      "type":"string",
      "max":2084,
      "pattern":"arn:aws[-a-z]*:wellarchitected:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:profile/[a-z0-9]+"
    },
    "ProfileArns":{
      "type":"list",
      "member":{"shape":"ProfileArn"},
      "min":1
    },
    "ProfileChoice":{
      "type":"structure",
      "members":{
        "ChoiceId":{"shape":"ChoiceId"},
        "ChoiceTitle":{"shape":"ChoiceTitle"},
        "ChoiceDescription":{"shape":"ChoiceDescription"}
      },
      "documentation":"<p>The profile choice.</p>"
    },
    "ProfileDescription":{
      "type":"string",
      "max":100,
      "min":3
    },
    "ProfileName":{
      "type":"string",
      "max":100,
      "min":3
    },
    "ProfileNamePrefix":{
      "type":"string",
      "max":100
    },
    "ProfileNotificationSummaries":{
      "type":"list",
      "member":{"shape":"ProfileNotificationSummary"}
    },
    "ProfileNotificationSummary":{
      "type":"structure",
      "members":{
        "CurrentProfileVersion":{
          "shape":"ProfileVersion",
          "documentation":"<p>The current profile version.</p>"
        },
        "LatestProfileVersion":{
          "shape":"ProfileVersion",
          "documentation":"<p>The latest profile version.</p>"
        },
        "Type":{
          "shape":"ProfileNotificationType",
          "documentation":"<p>Type of notification.</p>"
        },
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>"
        },
        "ProfileName":{
          "shape":"ProfileName",
          "documentation":"<p>The profile name.</p>"
        },
        "WorkloadId":{"shape":"WorkloadId"},
        "WorkloadName":{"shape":"WorkloadName"}
      },
      "documentation":"<p>The profile notification summary.</p>"
    },
    "ProfileNotificationType":{
      "type":"string",
      "enum":[
        "PROFILE_ANSWERS_UPDATED",
        "PROFILE_DELETED"
      ]
    },
    "ProfileOwnerType":{
      "type":"string",
      "enum":[
        "SELF",
        "SHARED"
      ]
    },
    "ProfileQuestion":{
      "type":"structure",
      "members":{
        "QuestionId":{"shape":"QuestionId"},
        "QuestionTitle":{"shape":"QuestionTitle"},
        "QuestionDescription":{"shape":"QuestionDescription"},
        "QuestionChoices":{
          "shape":"ProfileQuestionChoices",
          "documentation":"<p>The question choices.</p>"
        },
        "SelectedChoiceIds":{
          "shape":"SelectedChoiceIds",
          "documentation":"<p>The selected choices.</p>"
        },
        "MinSelectedChoices":{
          "shape":"MinSelectedProfileChoices",
          "documentation":"<p>The minimum number of selected choices.</p>"
        },
        "MaxSelectedChoices":{
          "shape":"MaxSelectedProfileChoices",
          "documentation":"<p>The maximum number of selected choices.</p>"
        }
      },
      "documentation":"<p>A profile question.</p>"
    },
    "ProfileQuestionChoices":{
      "type":"list",
      "member":{"shape":"ProfileChoice"}
    },
    "ProfileQuestionUpdate":{
      "type":"structure",
      "members":{
        "QuestionId":{"shape":"QuestionId"},
        "SelectedChoiceIds":{
          "shape":"SelectedProfileChoiceIds",
          "documentation":"<p>The selected choices.</p>"
        }
      },
      "documentation":"<p>An update to a profile question.</p>"
    },
    "ProfileQuestionUpdates":{
      "type":"list",
      "member":{"shape":"ProfileQuestionUpdate"}
    },
    "ProfileQuestions":{
      "type":"list",
      "member":{"shape":"ProfileQuestion"}
    },
    "ProfileShareSummaries":{
      "type":"list",
      "member":{"shape":"ProfileShareSummary"}
    },
    "ProfileShareSummary":{
      "type":"structure",
      "members":{
        "ShareId":{"shape":"ShareId"},
        "SharedWith":{"shape":"SharedWith"},
        "Status":{"shape":"ShareStatus"},
        "StatusMessage":{
          "shape":"StatusMessage",
          "documentation":"<p>Profile share invitation status message.</p>"
        }
      },
      "documentation":"<p>Summary of a profile share.</p>"
    },
    "ProfileSummaries":{
      "type":"list",
      "member":{"shape":"ProfileSummary"}
    },
    "ProfileSummary":{
      "type":"structure",
      "members":{
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>"
        },
        "ProfileVersion":{
          "shape":"ProfileVersion",
          "documentation":"<p>The profile version.</p>"
        },
        "ProfileName":{
          "shape":"ProfileName",
          "documentation":"<p>The profile name.</p>"
        },
        "ProfileDescription":{
          "shape":"ProfileDescription",
          "documentation":"<p>The profile description.</p>"
        },
        "Owner":{"shape":"AwsAccountId"},
        "CreatedAt":{"shape":"Timestamp"},
        "UpdatedAt":{"shape":"Timestamp"}
      },
      "documentation":"<p>Summary of a profile.</p>"
    },
    "ProfileTemplate":{
      "type":"structure",
      "members":{
        "TemplateName":{
          "shape":"ProfileName",
          "documentation":"<p>The name of the profile template.</p>"
        },
        "TemplateQuestions":{
          "shape":"TemplateQuestions",
          "documentation":"<p>Profile template questions.</p>"
        },
        "CreatedAt":{"shape":"Timestamp"},
        "UpdatedAt":{"shape":"Timestamp"}
      },
      "documentation":"<p>The profile template.</p>"
    },
    "ProfileTemplateChoice":{
      "type":"structure",
      "members":{
        "ChoiceId":{"shape":"ChoiceId"},
        "ChoiceTitle":{"shape":"ChoiceTitle"},
        "ChoiceDescription":{"shape":"ChoiceDescription"}
      },
      "documentation":"<p>A profile template choice.</p>"
    },
    "ProfileTemplateQuestion":{
      "type":"structure",
      "members":{
        "QuestionId":{"shape":"QuestionId"},
        "QuestionTitle":{"shape":"QuestionTitle"},
        "QuestionDescription":{"shape":"QuestionDescription"},
        "QuestionChoices":{
          "shape":"ProfileTemplateQuestionChoices",
          "documentation":"<p>The question choices.</p>"
        },
        "MinSelectedChoices":{
          "shape":"MinSelectedProfileChoices",
          "documentation":"<p>The minimum number of choices selected.</p>"
        },
        "MaxSelectedChoices":{
          "shape":"MaxSelectedProfileChoices",
          "documentation":"<p>The maximum number of choices selected.</p>"
        }
      },
      "documentation":"<p>A profile template question.</p>"
    },
    "ProfileTemplateQuestionChoices":{
      "type":"list",
      "member":{"shape":"ProfileTemplateChoice"}
    },
    "ProfileVersion":{
      "type":"string",
      "max":32,
      "min":1,
      "pattern":"^[A-Za-z0-9-]+$"
    },
    "Question":{
      "type":"string",
      "enum":[
        "UNANSWERED",
        "ANSWERED"
      ]
    },
    "QuestionCounts":{
      "type":"map",
      "key":{"shape":"Question"},
      "value":{"shape":"Count"}
    },
    "QuestionDescription":{
      "type":"string",
      "documentation":"<p>The description of the question.</p>",
      "max":1024,
      "min":1
    },
    "QuestionDifference":{
      "type":"structure",
      "members":{
        "QuestionId":{"shape":"QuestionId"},
        "QuestionTitle":{"shape":"QuestionTitle"},
        "DifferenceStatus":{
          "shape":"DifferenceStatus",
          "documentation":"<p>Indicates the type of change to the question.</p>"
        }
      },
      "documentation":"<p>A question difference return object.</p>"
    },
    "QuestionDifferences":{
      "type":"list",
      "member":{"shape":"QuestionDifference"}
    },
    "QuestionId":{
      "type":"string",
      "documentation":"<p>The ID of the question.</p>",
      "max":128,
      "min":1
    },
    "QuestionMetric":{
      "type":"structure",
      "members":{
        "QuestionId":{"shape":"QuestionId"},
        "Risk":{"shape":"Risk"},
        "BestPractices":{
          "shape":"BestPractices",
          "documentation":"<p>The best practices, or choices, that have been identified as contributing to risk in a question.</p>"
        }
      },
      "documentation":"<p>A metric for a particular question in the pillar. </p>"
    },
    "QuestionMetrics":{
      "type":"list",
      "member":{"shape":"QuestionMetric"}
    },
    "QuestionPriority":{
      "type":"string",
      "enum":[
        "PRIORITIZED",
        "NONE"
      ]
    },
    "QuestionTitle":{
      "type":"string",
      "documentation":"<p>The title of the question.</p>",
      "max":512,
      "min":1
    },
    "QuestionType":{
      "type":"string",
      "enum":[
        "PRIORITIZED",
        "NON_PRIORITIZED"
      ]
    },
    "QuotaCode":{
      "type":"string",
      "documentation":"<p>Service Quotas requirement to identify originating quota.</p>"
    },
    "ReportFormat":{
      "type":"string",
      "enum":[
        "PDF",
        "JSON"
      ]
    },
    "ResourceArn":{
      "type":"string",
      "max":250,
      "min":50,
      "pattern":"arn:aws(-us-gov|-iso(-[a-z])?|-cn)?:wellarchitected:[a-z]{2}(-gov|-iso([a-z])?)?-[a-z]+-\\d:\\d{12}:(review-template)/[a-f0-9]{32}"
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "required":[
        "Message",
        "ResourceId",
        "ResourceType"
      ],
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "ResourceId":{"shape":"ExceptionResourceId"},
        "ResourceType":{"shape":"ExceptionResourceType"}
      },
      "documentation":"<p>The requested resource was not found.</p>",
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "ReviewTemplate":{
      "type":"structure",
      "members":{
        "Description":{
          "shape":"TemplateDescription",
          "documentation":"<p>The review template description.</p>"
        },
        "Lenses":{
          "shape":"ReviewTemplateLenses",
          "documentation":"<p>The lenses applied to the review template.</p>"
        },
        "Notes":{"shape":"Notes"},
        "QuestionCounts":{
          "shape":"QuestionCounts",
          "documentation":"<p>A count of how many total questions are answered and unanswered in the review template.</p>"
        },
        "Owner":{"shape":"AwsAccountId"},
        "UpdatedAt":{"shape":"Timestamp"},
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>"
        },
        "TemplateName":{
          "shape":"TemplateName",
          "documentation":"<p>The name of the review template.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags assigned to the review template.</p>"
        },
        "UpdateStatus":{
          "shape":"ReviewTemplateUpdateStatus",
          "documentation":"<p>The latest status of a review template.</p>"
        },
        "ShareInvitationId":{
          "shape":"ShareInvitationId",
          "documentation":"<p>The ID assigned to the template share invitation.</p>"
        }
      },
      "documentation":"<p>A review template.</p>"
    },
    "ReviewTemplateAnswer":{
      "type":"structure",
      "members":{
        "QuestionId":{"shape":"QuestionId"},
        "PillarId":{"shape":"PillarId"},
        "QuestionTitle":{"shape":"QuestionTitle"},
        "QuestionDescription":{"shape":"QuestionDescription"},
        "ImprovementPlanUrl":{"shape":"ImprovementPlanUrl"},
        "HelpfulResourceUrl":{"shape":"HelpfulResourceUrl"},
        "HelpfulResourceDisplayText":{
          "shape":"DisplayText",
          "documentation":"<p>The helpful resource text to be displayed for a custom lens.</p> <note> <p>This field does not apply to Amazon Web Services official lenses.</p> </note>"
        },
        "Choices":{"shape":"Choices"},
        "SelectedChoices":{"shape":"SelectedChoices"},
        "ChoiceAnswers":{
          "shape":"ChoiceAnswers",
          "documentation":"<p>A list of selected choices to a question in your review template.</p>"
        },
        "IsApplicable":{"shape":"IsApplicable"},
        "AnswerStatus":{
          "shape":"ReviewTemplateAnswerStatus",
          "documentation":"<p>The status of whether or not this question has been answered.</p>"
        },
        "Notes":{"shape":"Notes"},
        "Reason":{
          "shape":"AnswerReason",
          "documentation":"<p>The reason why the question is not applicable to your review template.</p>"
        }
      },
      "documentation":"<p>An answer of the question.</p>"
    },
    "ReviewTemplateAnswerStatus":{
      "type":"string",
      "enum":[
        "UNANSWERED",
        "ANSWERED"
      ]
    },
    "ReviewTemplateAnswerSummaries":{
      "type":"list",
      "member":{"shape":"ReviewTemplateAnswerSummary"}
    },
    "ReviewTemplateAnswerSummary":{
      "type":"structure",
      "members":{
        "QuestionId":{"shape":"QuestionId"},
        "PillarId":{"shape":"PillarId"},
        "QuestionTitle":{"shape":"QuestionTitle"},
        "Choices":{"shape":"Choices"},
        "SelectedChoices":{"shape":"SelectedChoices"},
        "ChoiceAnswerSummaries":{
          "shape":"ChoiceAnswerSummaries",
          "documentation":"<p>A list of selected choices to a question in the review template.</p>"
        },
        "IsApplicable":{"shape":"IsApplicable"},
        "AnswerStatus":{
          "shape":"ReviewTemplateAnswerStatus",
          "documentation":"<p>The status of whether or not this question has been answered.</p>"
        },
        "Reason":{
          "shape":"AnswerReason",
          "documentation":"<p>The reason why a choice is not-applicable to a question in the review template.</p>"
        },
        "QuestionType":{
          "shape":"QuestionType",
          "documentation":"<p>The type of question.</p>"
        }
      },
      "documentation":"<p>The summary of review template answers.</p>"
    },
    "ReviewTemplateArns":{
      "type":"list",
      "member":{"shape":"TemplateArn"},
      "max":1
    },
    "ReviewTemplateLensAliases":{
      "type":"list",
      "member":{"shape":"LensAlias"},
      "max":10,
      "min":1
    },
    "ReviewTemplateLensReview":{
      "type":"structure",
      "members":{
        "LensAlias":{"shape":"LensAlias"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The lens ARN.</p>"
        },
        "LensVersion":{
          "shape":"LensVersion",
          "documentation":"<p>The version of the lens.</p>"
        },
        "LensName":{"shape":"LensName"},
        "LensStatus":{
          "shape":"LensStatus",
          "documentation":"<p>The status of the lens.</p>"
        },
        "PillarReviewSummaries":{
          "shape":"ReviewTemplatePillarReviewSummaries",
          "documentation":"<p>Pillar review summaries of a lens review.</p>"
        },
        "UpdatedAt":{"shape":"Timestamp"},
        "Notes":{"shape":"Notes"},
        "QuestionCounts":{
          "shape":"QuestionCounts",
          "documentation":"<p>A count of how many questions are answered and unanswered in the lens review.</p>"
        },
        "NextToken":{"shape":"NextToken"}
      },
      "documentation":"<p>The lens review of a review template.</p>"
    },
    "ReviewTemplateLenses":{
      "type":"list",
      "member":{"shape":"LensAlias"}
    },
    "ReviewTemplatePillarReviewSummaries":{
      "type":"list",
      "member":{"shape":"ReviewTemplatePillarReviewSummary"}
    },
    "ReviewTemplatePillarReviewSummary":{
      "type":"structure",
      "members":{
        "PillarId":{"shape":"PillarId"},
        "PillarName":{"shape":"PillarName"},
        "Notes":{"shape":"Notes"},
        "QuestionCounts":{
          "shape":"QuestionCounts",
          "documentation":"<p>A count of how many questions are answered and unanswered in the requested pillar of the lens review.</p>"
        }
      },
      "documentation":"<p>Summary of a review template.</p>"
    },
    "ReviewTemplateSummary":{
      "type":"structure",
      "members":{
        "Description":{
          "shape":"TemplateDescription",
          "documentation":"<p>Description of the review template.</p>"
        },
        "Lenses":{
          "shape":"ReviewTemplateLenses",
          "documentation":"<p>Lenses associated with the review template.</p>"
        },
        "Owner":{"shape":"AwsAccountId"},
        "UpdatedAt":{"shape":"Timestamp"},
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>"
        },
        "TemplateName":{
          "shape":"TemplateName",
          "documentation":"<p>The name of the review template.</p>"
        },
        "UpdateStatus":{
          "shape":"ReviewTemplateUpdateStatus",
          "documentation":"<p>The latest status of a review template.</p>"
        }
      },
      "documentation":"<p>Summary of a review template.</p>"
    },
    "ReviewTemplateUpdateStatus":{
      "type":"string",
      "enum":[
        "CURRENT",
        "LENS_NOT_CURRENT"
      ]
    },
    "ReviewTemplates":{
      "type":"list",
      "member":{"shape":"ReviewTemplateSummary"}
    },
    "Risk":{
      "type":"string",
      "documentation":"<p>The risk for a given workload, lens review, pillar, or question.</p>",
      "enum":[
        "UNANSWERED",
        "HIGH",
        "MEDIUM",
        "NONE",
        "NOT_APPLICABLE"
      ]
    },
    "RiskCounts":{
      "type":"map",
      "key":{"shape":"Risk"},
      "value":{"shape":"Count"},
      "documentation":"<p>A map from risk names to the count of how many questions have that rating.</p>"
    },
    "SelectedChoiceIds":{
      "type":"list",
      "member":{"shape":"ChoiceId"}
    },
    "SelectedChoices":{
      "type":"list",
      "member":{"shape":"ChoiceId"},
      "documentation":"<p>List of selected choice IDs in a question answer.</p> <p>The values entered replace the previously selected choices.</p>"
    },
    "SelectedPillar":{
      "type":"structure",
      "members":{
        "PillarId":{"shape":"PillarId"},
        "SelectedQuestionIds":{
          "shape":"SelectedQuestionIds",
          "documentation":"<p>Selected question IDs in the selected pillar.</p>"
        }
      },
      "documentation":"<p>The selected pillar.</p>"
    },
    "SelectedPillars":{
      "type":"list",
      "member":{"shape":"SelectedPillar"}
    },
    "SelectedProfileChoiceIds":{
      "type":"list",
      "member":{"shape":"ChoiceId"}
    },
    "SelectedQuestionId":{"type":"string"},
    "SelectedQuestionIds":{
      "type":"list",
      "member":{"shape":"SelectedQuestionId"}
    },
    "ServiceCode":{
      "type":"string",
      "documentation":"<p>Service Quotas requirement to identify originating service.</p>"
    },
    "ServiceQuotaExceededException":{
      "type":"structure",
      "required":[
        "Message",
        "QuotaCode",
        "ServiceCode"
      ],
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "ResourceId":{"shape":"ExceptionResourceId"},
        "ResourceType":{"shape":"ExceptionResourceType"},
        "QuotaCode":{"shape":"QuotaCode"},
        "ServiceCode":{"shape":"ServiceCode"}
      },
      "documentation":"<p>The user has reached their resource quota.</p>",
      "error":{"httpStatusCode":402},
      "exception":true
    },
    "ShareId":{
      "type":"string",
      "documentation":"<p>The ID associated with the share.</p>",
      "pattern":"[0-9a-f]{32}"
    },
    "ShareInvitation":{
      "type":"structure",
      "members":{
        "ShareInvitationId":{
          "shape":"ShareInvitationId",
          "documentation":"<p>The ID assigned to the share invitation.</p>"
        },
        "ShareResourceType":{
          "shape":"ShareResourceType",
          "documentation":"<p>The resource type of the share invitation.</p>"
        },
        "WorkloadId":{"shape":"WorkloadId"},
        "LensAlias":{"shape":"LensAlias"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens.</p>"
        },
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>"
        },
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>"
        }
      },
      "documentation":"<p>The share invitation.</p>"
    },
    "ShareInvitationAction":{
      "type":"string",
      "documentation":"<p>Share invitation action taken by contributor.</p>",
      "enum":[
        "ACCEPT",
        "REJECT"
      ]
    },
    "ShareInvitationId":{
      "type":"string",
      "pattern":"[0-9a-f]{32}"
    },
    "ShareInvitationSummaries":{
      "type":"list",
      "member":{"shape":"ShareInvitationSummary"}
    },
    "ShareInvitationSummary":{
      "type":"structure",
      "members":{
        "ShareInvitationId":{
          "shape":"ShareInvitationId",
          "documentation":"<p>The ID assigned to the share invitation.</p>"
        },
        "SharedBy":{"shape":"AwsAccountId"},
        "SharedWith":{"shape":"SharedWith"},
        "PermissionType":{"shape":"PermissionType"},
        "ShareResourceType":{
          "shape":"ShareResourceType",
          "documentation":"<p>The resource type of the share invitation.</p>"
        },
        "WorkloadName":{"shape":"WorkloadName"},
        "WorkloadId":{"shape":"WorkloadId"},
        "LensName":{"shape":"LensName"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens.</p>"
        },
        "ProfileName":{
          "shape":"ProfileName",
          "documentation":"<p>The profile name.</p>"
        },
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>"
        },
        "TemplateName":{
          "shape":"TemplateName",
          "documentation":"<p>The name of the review template.</p>"
        },
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>"
        }
      },
      "documentation":"<p>A share invitation summary return object.</p>"
    },
    "ShareResourceType":{
      "type":"string",
      "enum":[
        "WORKLOAD",
        "LENS",
        "PROFILE",
        "TEMPLATE"
      ]
    },
    "ShareStatus":{
      "type":"string",
      "documentation":"<p>The status of the share request.</p>",
      "enum":[
        "ACCEPTED",
        "REJECTED",
        "PENDING",
        "REVOKED",
        "EXPIRED",
        "ASSOCIATING",
        "ASSOCIATED",
        "FAILED"
      ]
    },
    "SharedWith":{
      "type":"string",
      "documentation":"<p>The Amazon Web Services account ID, organization ID, or organizational unit (OU) ID with which the workload, lens, profile, or review template is shared.</p>",
      "max":2048,
      "min":12
    },
    "SharedWithPrefix":{
      "type":"string",
      "max":100
    },
    "StatusMessage":{
      "type":"string",
      "max":512,
      "min":1
    },
    "Subdomain":{
      "type":"string",
      "max":100,
      "min":1
    },
    "TagKey":{
      "type":"string",
      "max":128,
      "min":1
    },
    "TagKeyList":{
      "type":"list",
      "member":{"shape":"TagKey"},
      "max":50,
      "min":1
    },
    "TagMap":{
      "type":"map",
      "key":{"shape":"TagKey"},
      "value":{"shape":"TagValue"},
      "max":50,
      "min":1
    },
    "TagResourceInput":{
      "type":"structure",
      "required":[
        "WorkloadArn",
        "Tags"
      ],
      "members":{
        "WorkloadArn":{
          "shape":"WorkloadArn",
          "location":"uri",
          "locationName":"WorkloadArn"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags for the resource.</p>"
        }
      }
    },
    "TagResourceOutput":{
      "type":"structure",
      "members":{}
    },
    "TagValue":{
      "type":"string",
      "max":256,
      "min":0
    },
    "TemplateArn":{
      "type":"string",
      "max":250,
      "min":50,
      "pattern":"arn:aws(-us-gov|-iso(-[a-z])?|-cn)?:wellarchitected:[a-z]{2}(-gov|-iso([a-z])?)?-[a-z]+-\\d:\\d{12}:(review-template)/[a-f0-9]{32}"
    },
    "TemplateDescription":{
      "type":"string",
      "max":250,
      "min":3,
      "pattern":"^[A-Za-z0-9-_.,:/()@!&?#+'’\\s]+$"
    },
    "TemplateName":{
      "type":"string",
      "max":100,
      "min":3,
      "pattern":"^[A-Za-z0-9-_.,:/()@!&?#+'’\\s]+$"
    },
    "TemplateNamePrefix":{
      "type":"string",
      "max":100,
      "pattern":"^[A-Za-z0-9-_.,:/()@!&?#+'’\\s]+$"
    },
    "TemplateQuestions":{
      "type":"list",
      "member":{"shape":"ProfileTemplateQuestion"}
    },
    "TemplateShareSummaries":{
      "type":"list",
      "member":{"shape":"TemplateShareSummary"}
    },
    "TemplateShareSummary":{
      "type":"structure",
      "members":{
        "ShareId":{"shape":"ShareId"},
        "SharedWith":{"shape":"SharedWith"},
        "Status":{"shape":"ShareStatus"},
        "StatusMessage":{
          "shape":"StatusMessage",
          "documentation":"<p>Review template share invitation status message. </p>"
        }
      },
      "documentation":"<p>Summary of a review template share.</p>"
    },
    "ThrottlingException":{
      "type":"structure",
      "required":["Message"],
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "QuotaCode":{"shape":"QuotaCode"},
        "ServiceCode":{"shape":"ServiceCode"}
      },
      "documentation":"<p>Request was denied due to request throttling.</p>",
      "error":{"httpStatusCode":429},
      "exception":true
    },
    "Timestamp":{
      "type":"timestamp",
      "documentation":"<p>The date and time recorded.</p>"
    },
    "TrustedAdvisorIntegrationStatus":{
      "type":"string",
      "enum":[
        "ENABLED",
        "DISABLED"
      ]
    },
    "UntagResourceInput":{
      "type":"structure",
      "required":[
        "WorkloadArn",
        "TagKeys"
      ],
      "members":{
        "WorkloadArn":{
          "shape":"WorkloadArn",
          "location":"uri",
          "locationName":"WorkloadArn"
        },
        "TagKeys":{
          "shape":"TagKeyList",
          "documentation":"<p>A list of tag keys. Existing tags of the resource whose keys are members of this list are removed from the resource.</p>",
          "location":"querystring",
          "locationName":"tagKeys"
        }
      }
    },
    "UntagResourceOutput":{
      "type":"structure",
      "members":{}
    },
    "UpdateAnswerInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "LensAlias",
        "QuestionId"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "QuestionId":{
          "shape":"QuestionId",
          "location":"uri",
          "locationName":"QuestionId"
        },
        "SelectedChoices":{"shape":"SelectedChoices"},
        "ChoiceUpdates":{
          "shape":"ChoiceUpdates",
          "documentation":"<p>A list of choices to update on a question in your workload. The String key corresponds to the choice ID to be updated.</p>"
        },
        "Notes":{"shape":"Notes"},
        "IsApplicable":{"shape":"IsApplicable"},
        "Reason":{
          "shape":"AnswerReason",
          "documentation":"<p>The reason why a question is not applicable to your workload.</p>"
        }
      },
      "documentation":"<p>Input to update answer.</p>"
    },
    "UpdateAnswerOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "LensAlias":{"shape":"LensAlias"},
        "LensArn":{
          "shape":"LensArn",
          "documentation":"<p>The ARN for the lens.</p>"
        },
        "Answer":{"shape":"Answer"}
      },
      "documentation":"<p>Output of a update answer call.</p>"
    },
    "UpdateGlobalSettingsInput":{
      "type":"structure",
      "members":{
        "OrganizationSharingStatus":{
          "shape":"OrganizationSharingStatus",
          "documentation":"<p>The status of organization sharing settings.</p>"
        },
        "DiscoveryIntegrationStatus":{
          "shape":"DiscoveryIntegrationStatus",
          "documentation":"<p>The status of discovery support settings.</p>"
        },
        "JiraConfiguration":{
          "shape":"AccountJiraConfigurationInput",
          "documentation":"<p>The status of Jira integration settings.</p>"
        }
      }
    },
    "UpdateIntegrationInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "ClientRequestToken",
        "IntegratingService"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true
        },
        "IntegratingService":{
          "shape":"IntegratingService",
          "documentation":"<p>Which integrated service to update.</p>"
        }
      }
    },
    "UpdateLensReviewInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "LensAlias"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "LensNotes":{"shape":"Notes"},
        "PillarNotes":{"shape":"PillarNotes"},
        "JiraConfiguration":{
          "shape":"JiraSelectedQuestionConfiguration",
          "documentation":"<p>Configuration of the Jira integration.</p>"
        }
      },
      "documentation":"<p>Input for update lens review.</p>"
    },
    "UpdateLensReviewOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "LensReview":{"shape":"LensReview"}
      },
      "documentation":"<p>Output of a update lens review call.</p>"
    },
    "UpdateProfileInput":{
      "type":"structure",
      "required":["ProfileArn"],
      "members":{
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>",
          "location":"uri",
          "locationName":"ProfileArn"
        },
        "ProfileDescription":{
          "shape":"ProfileDescription",
          "documentation":"<p>The profile description.</p>"
        },
        "ProfileQuestions":{
          "shape":"ProfileQuestionUpdates",
          "documentation":"<p>Profile questions.</p>"
        }
      }
    },
    "UpdateProfileOutput":{
      "type":"structure",
      "members":{
        "Profile":{
          "shape":"Profile",
          "documentation":"<p>The profile.</p>"
        }
      }
    },
    "UpdateReviewTemplateAnswerInput":{
      "type":"structure",
      "required":[
        "TemplateArn",
        "LensAlias",
        "QuestionId"
      ],
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>",
          "location":"uri",
          "locationName":"TemplateArn"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "QuestionId":{
          "shape":"QuestionId",
          "location":"uri",
          "locationName":"QuestionId"
        },
        "SelectedChoices":{"shape":"SelectedChoices"},
        "ChoiceUpdates":{
          "shape":"ChoiceUpdates",
          "documentation":"<p>A list of choices to be updated.</p>"
        },
        "Notes":{"shape":"Notes"},
        "IsApplicable":{"shape":"IsApplicable"},
        "Reason":{
          "shape":"AnswerReason",
          "documentation":"<p>The update reason.</p>"
        }
      }
    },
    "UpdateReviewTemplateAnswerOutput":{
      "type":"structure",
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>"
        },
        "LensAlias":{"shape":"LensAlias"},
        "Answer":{
          "shape":"ReviewTemplateAnswer",
          "documentation":"<p>An answer of the question.</p>"
        }
      }
    },
    "UpdateReviewTemplateInput":{
      "type":"structure",
      "required":["TemplateArn"],
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>",
          "location":"uri",
          "locationName":"TemplateArn"
        },
        "TemplateName":{
          "shape":"TemplateName",
          "documentation":"<p>The review template name.</p>"
        },
        "Description":{
          "shape":"TemplateDescription",
          "documentation":"<p>The review template description.</p>"
        },
        "Notes":{"shape":"Notes"},
        "LensesToAssociate":{
          "shape":"ReviewTemplateLensAliases",
          "documentation":"<p>A list of lens aliases or ARNs to apply to the review template.</p>"
        },
        "LensesToDisassociate":{
          "shape":"ReviewTemplateLensAliases",
          "documentation":"<p>A list of lens aliases or ARNs to unapply to the review template. The <code>wellarchitected</code> lens cannot be unapplied.</p>"
        }
      }
    },
    "UpdateReviewTemplateLensReviewInput":{
      "type":"structure",
      "required":[
        "TemplateArn",
        "LensAlias"
      ],
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>",
          "location":"uri",
          "locationName":"TemplateArn"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "LensNotes":{"shape":"Notes"},
        "PillarNotes":{"shape":"PillarNotes"}
      }
    },
    "UpdateReviewTemplateLensReviewOutput":{
      "type":"structure",
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The review template ARN.</p>"
        },
        "LensReview":{
          "shape":"ReviewTemplateLensReview",
          "documentation":"<p>A lens review of a question.</p>"
        }
      }
    },
    "UpdateReviewTemplateOutput":{
      "type":"structure",
      "members":{
        "ReviewTemplate":{
          "shape":"ReviewTemplate",
          "documentation":"<p>A review template.</p>"
        }
      }
    },
    "UpdateShareInvitationInput":{
      "type":"structure",
      "required":[
        "ShareInvitationId",
        "ShareInvitationAction"
      ],
      "members":{
        "ShareInvitationId":{
          "shape":"ShareInvitationId",
          "documentation":"<p>The ID assigned to the share invitation.</p>",
          "location":"uri",
          "locationName":"ShareInvitationId"
        },
        "ShareInvitationAction":{"shape":"ShareInvitationAction"}
      },
      "documentation":"<p>Input for Update Share Invitation</p>"
    },
    "UpdateShareInvitationOutput":{
      "type":"structure",
      "members":{
        "ShareInvitation":{
          "shape":"ShareInvitation",
          "documentation":"<p>The updated workload or custom lens share invitation.</p>"
        }
      }
    },
    "UpdateWorkloadInput":{
      "type":"structure",
      "required":["WorkloadId"],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "WorkloadName":{"shape":"WorkloadName"},
        "Description":{"shape":"WorkloadDescription"},
        "Environment":{"shape":"WorkloadEnvironment"},
        "AccountIds":{"shape":"WorkloadAccountIds"},
        "AwsRegions":{"shape":"WorkloadAwsRegions"},
        "NonAwsRegions":{"shape":"WorkloadNonAwsRegions"},
        "PillarPriorities":{"shape":"WorkloadPillarPriorities"},
        "ArchitecturalDesign":{"shape":"WorkloadArchitecturalDesign"},
        "ReviewOwner":{"shape":"WorkloadReviewOwner"},
        "IsReviewOwnerUpdateAcknowledged":{
          "shape":"IsReviewOwnerUpdateAcknowledged",
          "documentation":"<p>Flag indicating whether the workload owner has acknowledged that the <i>Review owner</i> field is required.</p> <p>If a <b>Review owner</b> is not added to the workload within 60 days of acknowledgement, access to the workload is restricted until an owner is added.</p>"
        },
        "IndustryType":{"shape":"WorkloadIndustryType"},
        "Industry":{"shape":"WorkloadIndustry"},
        "Notes":{"shape":"Notes"},
        "ImprovementStatus":{"shape":"WorkloadImprovementStatus"},
        "DiscoveryConfig":{
          "shape":"WorkloadDiscoveryConfig",
          "documentation":"<p>Well-Architected discovery configuration settings to associate to the workload.</p>"
        },
        "Applications":{
          "shape":"WorkloadApplications",
          "documentation":"<p>List of AppRegistry application ARNs to associate to the workload.</p>"
        },
        "JiraConfiguration":{
          "shape":"WorkloadJiraConfigurationInput",
          "documentation":"<p>Configuration of the Jira integration.</p>"
        }
      },
      "documentation":"<p>Input to update a workload.</p>"
    },
    "UpdateWorkloadOutput":{
      "type":"structure",
      "members":{
        "Workload":{"shape":"Workload"}
      },
      "documentation":"<p>Output of an update workload call.</p>"
    },
    "UpdateWorkloadShareInput":{
      "type":"structure",
      "required":[
        "ShareId",
        "WorkloadId",
        "PermissionType"
      ],
      "members":{
        "ShareId":{
          "shape":"ShareId",
          "location":"uri",
          "locationName":"ShareId"
        },
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "PermissionType":{"shape":"PermissionType"}
      },
      "documentation":"<p>Input for Update Workload Share</p>"
    },
    "UpdateWorkloadShareOutput":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "WorkloadShare":{"shape":"WorkloadShare"}
      },
      "documentation":"<p>Input for Update Workload Share</p>"
    },
    "UpgradeLensReviewInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "LensAlias",
        "MilestoneName"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "MilestoneName":{"shape":"MilestoneName"},
        "ClientRequestToken":{"shape":"ClientRequestToken"}
      }
    },
    "UpgradeProfileVersionInput":{
      "type":"structure",
      "required":[
        "WorkloadId",
        "ProfileArn"
      ],
      "members":{
        "WorkloadId":{
          "shape":"WorkloadId",
          "location":"uri",
          "locationName":"WorkloadId"
        },
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>",
          "location":"uri",
          "locationName":"ProfileArn"
        },
        "MilestoneName":{"shape":"MilestoneName"},
        "ClientRequestToken":{
          "shape":"ClientRequestToken",
          "idempotencyToken":true
        }
      }
    },
    "UpgradeReviewTemplateLensReviewInput":{
      "type":"structure",
      "required":[
        "TemplateArn",
        "LensAlias"
      ],
      "members":{
        "TemplateArn":{
          "shape":"TemplateArn",
          "documentation":"<p>The ARN of the review template.</p>",
          "location":"uri",
          "locationName":"TemplateArn"
        },
        "LensAlias":{
          "shape":"LensAlias",
          "location":"uri",
          "locationName":"LensAlias"
        },
        "ClientRequestToken":{"shape":"ClientRequestToken"}
      }
    },
    "Urls":{
      "type":"list",
      "member":{"shape":"ChoiceContent"}
    },
    "ValidationException":{
      "type":"structure",
      "required":["Message"],
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "Reason":{"shape":"ValidationExceptionReason"},
        "Fields":{"shape":"ValidationExceptionFieldList"}
      },
      "documentation":"<p>The user input is not valid.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "ValidationExceptionField":{
      "type":"structure",
      "required":[
        "Name",
        "Message"
      ],
      "members":{
        "Name":{"shape":"ValidationExceptionFieldName"},
        "Message":{"shape":"ExceptionMessage"}
      },
      "documentation":"<p>Stores information about a field passed inside a request that resulted in an exception.</p>"
    },
    "ValidationExceptionFieldList":{
      "type":"list",
      "member":{"shape":"ValidationExceptionField"},
      "documentation":"<p>The fields that caused the error, if applicable.</p>"
    },
    "ValidationExceptionFieldName":{
      "type":"string",
      "documentation":"<p>The field name for which validation failed.</p>"
    },
    "ValidationExceptionReason":{
      "type":"string",
      "documentation":"<p>The reason why the request failed validation.</p>",
      "enum":[
        "UNKNOWN_OPERATION",
        "CANNOT_PARSE",
        "FIELD_VALIDATION_FAILED",
        "OTHER"
      ]
    },
    "VersionDifferences":{
      "type":"structure",
      "members":{
        "PillarDifferences":{
          "shape":"PillarDifferences",
          "documentation":"<p>The differences between the base and latest versions of the lens.</p>"
        }
      },
      "documentation":"<p>The differences between the base and latest versions of the lens.</p>"
    },
    "Workload":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "WorkloadArn":{"shape":"WorkloadArn"},
        "WorkloadName":{"shape":"WorkloadName"},
        "Description":{"shape":"WorkloadDescription"},
        "Environment":{"shape":"WorkloadEnvironment"},
        "UpdatedAt":{"shape":"Timestamp"},
        "AccountIds":{"shape":"WorkloadAccountIds"},
        "AwsRegions":{"shape":"WorkloadAwsRegions"},
        "NonAwsRegions":{"shape":"WorkloadNonAwsRegions"},
        "ArchitecturalDesign":{"shape":"WorkloadArchitecturalDesign"},
        "ReviewOwner":{"shape":"WorkloadReviewOwner"},
        "ReviewRestrictionDate":{"shape":"Timestamp"},
        "IsReviewOwnerUpdateAcknowledged":{
          "shape":"IsReviewOwnerUpdateAcknowledged",
          "documentation":"<p>Flag indicating whether the workload owner has acknowledged that the <i>Review owner</i> field is required.</p> <p>If a <b>Review owner</b> is not added to the workload within 60 days of acknowledgement, access to the workload is restricted until an owner is added.</p>"
        },
        "IndustryType":{"shape":"WorkloadIndustryType"},
        "Industry":{"shape":"WorkloadIndustry"},
        "Notes":{"shape":"Notes"},
        "ImprovementStatus":{"shape":"WorkloadImprovementStatus"},
        "RiskCounts":{"shape":"RiskCounts"},
        "PillarPriorities":{"shape":"WorkloadPillarPriorities"},
        "Lenses":{"shape":"WorkloadLenses"},
        "Owner":{"shape":"AwsAccountId"},
        "ShareInvitationId":{
          "shape":"ShareInvitationId",
          "documentation":"<p>The ID assigned to the share invitation.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags associated with the workload.</p>"
        },
        "DiscoveryConfig":{
          "shape":"WorkloadDiscoveryConfig",
          "documentation":"<p>Discovery configuration associated to the workload.</p>"
        },
        "Applications":{
          "shape":"WorkloadApplications",
          "documentation":"<p>List of AppRegistry application ARNs associated to the workload.</p>"
        },
        "Profiles":{
          "shape":"WorkloadProfiles",
          "documentation":"<p>Profile associated with a workload.</p>"
        },
        "PrioritizedRiskCounts":{"shape":"RiskCounts"},
        "JiraConfiguration":{
          "shape":"WorkloadJiraConfigurationOutput",
          "documentation":"<p>Jira configuration for a specific workload.</p>"
        }
      },
      "documentation":"<p>A workload return object.</p>"
    },
    "WorkloadAccountIds":{
      "type":"list",
      "member":{"shape":"AwsAccountId"},
      "documentation":"<p>The list of Amazon Web Services account IDs associated with the workload.</p>",
      "max":100
    },
    "WorkloadApplications":{
      "type":"list",
      "member":{"shape":"ApplicationArn"},
      "max":1
    },
    "WorkloadArchitecturalDesign":{
      "type":"string",
      "documentation":"<p>The URL of the architectural design for the workload.</p>",
      "max":2048,
      "pattern":"^(|(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*)$"
    },
    "WorkloadArn":{
      "type":"string",
      "documentation":"<p>The ARN for the workload.</p>"
    },
    "WorkloadAwsRegions":{
      "type":"list",
      "member":{"shape":"AwsRegion"},
      "documentation":"<p>The list of Amazon Web Services Regions associated with the workload, for example, <code>us-east-2</code>, or <code>ca-central-1</code>.</p>",
      "max":50
    },
    "WorkloadDescription":{
      "type":"string",
      "documentation":"<p>The description for the workload.</p>",
      "max":250,
      "min":3
    },
    "WorkloadDiscoveryConfig":{
      "type":"structure",
      "members":{
        "TrustedAdvisorIntegrationStatus":{
          "shape":"TrustedAdvisorIntegrationStatus",
          "documentation":"<p>Discovery integration status in respect to Trusted Advisor for the workload.</p>"
        },
        "WorkloadResourceDefinition":{
          "shape":"WorkloadResourceDefinition",
          "documentation":"<p>The mode to use for identifying resources associated with the workload.</p> <p>You can specify <code>WORKLOAD_METADATA</code>, <code>APP_REGISTRY</code>, or both.</p>"
        }
      },
      "documentation":"<p>Discovery configuration associated to the workload.</p>"
    },
    "WorkloadEnvironment":{
      "type":"string",
      "documentation":"<p>The environment for the workload.</p>",
      "enum":[
        "PRODUCTION",
        "PREPRODUCTION"
      ]
    },
    "WorkloadId":{
      "type":"string",
      "documentation":"<p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>",
      "max":32,
      "min":32,
      "pattern":"[0-9a-f]{32}"
    },
    "WorkloadImprovementStatus":{
      "type":"string",
      "documentation":"<p>The improvement status for a workload.</p>",
      "enum":[
        "NOT_APPLICABLE",
        "NOT_STARTED",
        "IN_PROGRESS",
        "COMPLETE",
        "RISK_ACKNOWLEDGED"
      ]
    },
    "WorkloadIndustry":{
      "type":"string",
      "documentation":"<p>The industry for the workload.</p>",
      "max":100
    },
    "WorkloadIndustryType":{
      "type":"string",
      "documentation":"<p>The industry type for the workload.</p> <p>If specified, must be one of the following:</p> <ul> <li> <p> <code>Agriculture</code> </p> </li> <li> <p> <code>Automobile</code> </p> </li> <li> <p> <code>Defense</code> </p> </li> <li> <p> <code>Design and Engineering</code> </p> </li> <li> <p> <code>Digital Advertising</code> </p> </li> <li> <p> <code>Education</code> </p> </li> <li> <p> <code>Environmental Protection</code> </p> </li> <li> <p> <code>Financial Services</code> </p> </li> <li> <p> <code>Gaming</code> </p> </li> <li> <p> <code>General Public Services</code> </p> </li> <li> <p> <code>Healthcare</code> </p> </li> <li> <p> <code>Hospitality</code> </p> </li> <li> <p> <code>InfoTech</code> </p> </li> <li> <p> <code>Justice and Public Safety</code> </p> </li> <li> <p> <code>Life Sciences</code> </p> </li> <li> <p> <code>Manufacturing</code> </p> </li> <li> <p> <code>Media &amp; Entertainment</code> </p> </li> <li> <p> <code>Mining &amp; Resources</code> </p> </li> <li> <p> <code>Oil &amp; Gas</code> </p> </li> <li> <p> <code>Power &amp; Utilities</code> </p> </li> <li> <p> <code>Professional Services</code> </p> </li> <li> <p> <code>Real Estate &amp; Construction</code> </p> </li> <li> <p> <code>Retail &amp; Wholesale</code> </p> </li> <li> <p> <code>Social Protection</code> </p> </li> <li> <p> <code>Telecommunications</code> </p> </li> <li> <p> <code>Travel, Transportation &amp; Logistics</code> </p> </li> <li> <p> <code>Other</code> </p> </li> </ul>",
      "max":100
    },
    "WorkloadIssueManagementStatus":{
      "type":"string",
      "enum":[
        "ENABLED",
        "DISABLED",
        "INHERIT"
      ]
    },
    "WorkloadJiraConfigurationInput":{
      "type":"structure",
      "members":{
        "IssueManagementStatus":{
          "shape":"WorkloadIssueManagementStatus",
          "documentation":"<p>Workload-level: Jira issue management status.</p>"
        },
        "IssueManagementType":{
          "shape":"IssueManagementType",
          "documentation":"<p>Workload-level: Jira issue management type.</p>"
        },
        "JiraProjectKey":{
          "shape":"JiraProjectKey",
          "documentation":"<p>Workload-level: Jira project key to sync workloads to.</p>"
        }
      },
      "documentation":"<p>Workload-level: Input for the Jira configuration.</p>"
    },
    "WorkloadJiraConfigurationOutput":{
      "type":"structure",
      "members":{
        "IssueManagementStatus":{
          "shape":"WorkloadIssueManagementStatus",
          "documentation":"<p>Workload-level: Jira issue management status.</p>"
        },
        "IssueManagementType":{
          "shape":"IssueManagementType",
          "documentation":"<p>Workload-level: Jira issue management type.</p>"
        },
        "JiraProjectKey":{
          "shape":"JiraProjectKey",
          "documentation":"<p>Workload-level: Jira project key to sync workloads to.</p>"
        },
        "StatusMessage":{
          "shape":"StatusMessage",
          "documentation":"<p>Workload-level: Status message on configuration of the Jira integration.</p>"
        }
      },
      "documentation":"<p>Workload-level: Output configuration of the Jira integration.</p>"
    },
    "WorkloadLenses":{
      "type":"list",
      "member":{"shape":"LensAlias"},
      "documentation":"<p>The list of lenses associated with the workload. Each lens is identified by its <a>LensSummary$LensAlias</a>.</p> <p>If a review template that specifies lenses is applied to the workload, those lenses are applied to the workload in addition to these lenses.</p>"
    },
    "WorkloadName":{
      "type":"string",
      "documentation":"<p>The name of the workload.</p> <p>The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.</p>",
      "max":100,
      "min":3
    },
    "WorkloadNamePrefix":{
      "type":"string",
      "documentation":"<p>An optional string added to the beginning of each workload name returned in the results.</p>",
      "max":100
    },
    "WorkloadNonAwsRegion":{
      "type":"string",
      "max":25,
      "min":3
    },
    "WorkloadNonAwsRegions":{
      "type":"list",
      "member":{"shape":"WorkloadNonAwsRegion"},
      "documentation":"<p> The list of non-Amazon Web Services Regions associated with the workload.</p>",
      "max":5
    },
    "WorkloadPillarPriorities":{
      "type":"list",
      "member":{"shape":"PillarId"},
      "documentation":"<p>The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its <a>PillarReviewSummary$PillarId</a>.</p>"
    },
    "WorkloadProfile":{
      "type":"structure",
      "members":{
        "ProfileArn":{
          "shape":"ProfileArn",
          "documentation":"<p>The profile ARN.</p>"
        },
        "ProfileVersion":{
          "shape":"ProfileVersion",
          "documentation":"<p>The profile version.</p>"
        }
      },
      "documentation":"<p>The profile associated with a workload.</p>"
    },
    "WorkloadProfileArns":{
      "type":"list",
      "member":{"shape":"ProfileArn"},
      "max":1
    },
    "WorkloadProfiles":{
      "type":"list",
      "member":{"shape":"WorkloadProfile"},
      "max":1
    },
    "WorkloadResourceDefinition":{
      "type":"list",
      "member":{"shape":"DefinitionType"}
    },
    "WorkloadReviewOwner":{
      "type":"string",
      "documentation":"<p>The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.</p>",
      "max":255,
      "min":3
    },
    "WorkloadShare":{
      "type":"structure",
      "members":{
        "ShareId":{"shape":"ShareId"},
        "SharedBy":{"shape":"AwsAccountId"},
        "SharedWith":{"shape":"SharedWith"},
        "PermissionType":{"shape":"PermissionType"},
        "Status":{"shape":"ShareStatus"},
        "WorkloadName":{"shape":"WorkloadName"},
        "WorkloadId":{"shape":"WorkloadId"}
      },
      "documentation":"<p>A workload share return object.</p>"
    },
    "WorkloadShareSummaries":{
      "type":"list",
      "member":{"shape":"WorkloadShareSummary"},
      "documentation":"<p>A list of workload share summaries.</p>"
    },
    "WorkloadShareSummary":{
      "type":"structure",
      "members":{
        "ShareId":{"shape":"ShareId"},
        "SharedWith":{"shape":"SharedWith"},
        "PermissionType":{"shape":"PermissionType"},
        "Status":{"shape":"ShareStatus"},
        "StatusMessage":{
          "shape":"StatusMessage",
          "documentation":"<p>Optional message to compliment the Status field.</p>"
        }
      },
      "documentation":"<p>A workload share summary return object.</p>"
    },
    "WorkloadSummaries":{
      "type":"list",
      "member":{"shape":"WorkloadSummary"},
      "documentation":"<p>A list of workload summaries.</p>"
    },
    "WorkloadSummary":{
      "type":"structure",
      "members":{
        "WorkloadId":{"shape":"WorkloadId"},
        "WorkloadArn":{"shape":"WorkloadArn"},
        "WorkloadName":{"shape":"WorkloadName"},
        "Owner":{"shape":"AwsAccountId"},
        "UpdatedAt":{"shape":"Timestamp"},
        "Lenses":{"shape":"WorkloadLenses"},
        "RiskCounts":{"shape":"RiskCounts"},
        "ImprovementStatus":{"shape":"WorkloadImprovementStatus"},
        "Profiles":{
          "shape":"WorkloadProfiles",
          "documentation":"<p>Profile associated with a workload.</p>"
        },
        "PrioritizedRiskCounts":{"shape":"RiskCounts"}
      },
      "documentation":"<p>A workload summary return object.</p>"
    }
  },
  "documentation":"<fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href=\"http://aws.amazon.com/well-architected-tool\">Well-Architected Tool</a> in the <a href=\"https://console.aws.amazon.com/wellarchitected\">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html\">Well-Architected Tool User Guide</a>.</p>"
}
