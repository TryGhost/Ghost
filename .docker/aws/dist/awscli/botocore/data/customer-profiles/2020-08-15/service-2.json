{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2020-08-15",
    "endpointPrefix":"profile",
    "jsonVersion":"1.1",
    "protocol":"rest-json",
    "protocols":["rest-json"],
    "serviceAbbreviation":"Customer Profiles",
    "serviceFullName":"Amazon Connect Customer Profiles",
    "serviceId":"Customer Profiles",
    "signatureVersion":"v4",
    "signingName":"profile",
    "uid":"customer-profiles-2020-08-15",
    "auth":["aws.auth#sigv4"]
  },
  "operations":{
    "AddProfileKey":{
      "name":"AddProfileKey",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/profiles/keys"
      },
      "input":{"shape":"AddProfileKeyRequest"},
      "output":{"shape":"AddProfileKeyResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Associates a new key value with a specific profile, such as a Contact Record ContactId.</p> <p>A profile object can have a single unique key and any number of additional keys that can be used to identify the profile that it belongs to.</p>"
    },
    "BatchGetCalculatedAttributeForProfile":{
      "name":"BatchGetCalculatedAttributeForProfile",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/calculated-attributes/{CalculatedAttributeName}/batch-get-for-profiles"
      },
      "input":{"shape":"BatchGetCalculatedAttributeForProfileRequest"},
      "output":{"shape":"BatchGetCalculatedAttributeForProfileResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Fetch the possible attribute values given the attribute name.</p>"
    },
    "BatchGetProfile":{
      "name":"BatchGetProfile",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/batch-get-profiles"
      },
      "input":{"shape":"BatchGetProfileRequest"},
      "output":{"shape":"BatchGetProfileResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Get a batch of profiles.</p>"
    },
    "CreateCalculatedAttributeDefinition":{
      "name":"CreateCalculatedAttributeDefinition",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/calculated-attributes/{CalculatedAttributeName}"
      },
      "input":{"shape":"CreateCalculatedAttributeDefinitionRequest"},
      "output":{"shape":"CreateCalculatedAttributeDefinitionResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Creates a new calculated attribute definition. After creation, new object data ingested into Customer Profiles will be included in the calculated attribute, which can be retrieved for a profile using the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetCalculatedAttributeForProfile.html\">GetCalculatedAttributeForProfile</a> API. Defining a calculated attribute makes it available for all profiles within a domain. Each calculated attribute can only reference one <code>ObjectType</code> and at most, two fields from that <code>ObjectType</code>.</p>"
    },
    "CreateDomain":{
      "name":"CreateDomain",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}"
      },
      "input":{"shape":"CreateDomainRequest"},
      "output":{"shape":"CreateDomainResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Creates a domain, which is a container for all customer data, such as customer profile attributes, object types, profile keys, and encryption keys. You can create multiple domains, and each domain can have multiple third-party integrations.</p> <p>Each Amazon Connect instance can be associated with only one domain. Multiple Amazon Connect instances can be associated with one domain.</p> <p>Use this API or <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UpdateDomain.html\">UpdateDomain</a> to enable <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">identity resolution</a>: set <code>Matching</code> to true.</p> <p>To prevent cross-service impersonation when you call this API, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/cross-service-confused-deputy-prevention.html\">Cross-service confused deputy prevention</a> for sample policies that you should apply. </p> <note> <p>It is not possible to associate a Customer Profiles domain with an Amazon Connect Instance directly from the API. If you would like to create a domain and associate a Customer Profiles domain, use the Amazon Connect admin website. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/enable-customer-profiles.html#enable-customer-profiles-step1\">Enable Customer Profiles</a>.</p> <p>Each Amazon Connect instance can be associated with only one domain. Multiple Amazon Connect instances can be associated with one domain.</p> </note>"
    },
    "CreateDomainLayout":{
      "name":"CreateDomainLayout",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/layouts/{LayoutDefinitionName}"
      },
      "input":{"shape":"CreateDomainLayoutRequest"},
      "output":{"shape":"CreateDomainLayoutResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Creates the layout to view data for a specific domain. This API can only be invoked from the Amazon Connect admin website.</p>"
    },
    "CreateEventStream":{
      "name":"CreateEventStream",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/event-streams/{EventStreamName}"
      },
      "input":{"shape":"CreateEventStreamRequest"},
      "output":{"shape":"CreateEventStreamResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Creates an event stream, which is a subscription to real-time events, such as when profiles are created and updated through Amazon Connect Customer Profiles.</p> <p>Each event stream can be associated with only one Kinesis Data Stream destination in the same region and Amazon Web Services account as the customer profiles domain</p>"
    },
    "CreateEventTrigger":{
      "name":"CreateEventTrigger",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/event-triggers/{EventTriggerName}"
      },
      "input":{"shape":"CreateEventTriggerRequest"},
      "output":{"shape":"CreateEventTriggerResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Creates an event trigger, which specifies the rules when to perform action based on customer's ingested data.</p> <p>Each event stream can be associated with only one integration in the same region and AWS account as the event stream. </p>"
    },
    "CreateIntegrationWorkflow":{
      "name":"CreateIntegrationWorkflow",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/workflows/integrations"
      },
      "input":{"shape":"CreateIntegrationWorkflowRequest"},
      "output":{"shape":"CreateIntegrationWorkflowResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p> Creates an integration workflow. An integration workflow is an async process which ingests historic data and sets up an integration for ongoing updates. The supported Amazon AppFlow sources are Salesforce, ServiceNow, and Marketo. </p>"
    },
    "CreateProfile":{
      "name":"CreateProfile",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/profiles"
      },
      "input":{"shape":"CreateProfileRequest"},
      "output":{"shape":"CreateProfileResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Creates a standard profile.</p> <p>A standard profile represents the following attributes for a customer profile in a domain.</p>"
    },
    "CreateSegmentDefinition":{
      "name":"CreateSegmentDefinition",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/segment-definitions/{SegmentDefinitionName}",
        "responseCode":200
      },
      "input":{"shape":"CreateSegmentDefinitionRequest"},
      "output":{"shape":"CreateSegmentDefinitionResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>Creates a segment definition associated to the given domain.</p>",
      "idempotent":true
    },
    "CreateSegmentEstimate":{
      "name":"CreateSegmentEstimate",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/segment-estimates"
      },
      "input":{"shape":"CreateSegmentEstimateRequest"},
      "output":{"shape":"CreateSegmentEstimateResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Creates a segment estimate query.</p>"
    },
    "CreateSegmentSnapshot":{
      "name":"CreateSegmentSnapshot",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/segments/{SegmentDefinitionName}/snapshots"
      },
      "input":{"shape":"CreateSegmentSnapshotRequest"},
      "output":{"shape":"CreateSegmentSnapshotResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Triggers a job to export a segment to a specified destination.</p>"
    },
    "CreateUploadJob":{
      "name":"CreateUploadJob",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/upload-jobs",
        "responseCode":200
      },
      "input":{"shape":"CreateUploadJobRequest"},
      "output":{"shape":"CreateUploadJobResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>Creates an Upload job to ingest data for segment imports. The metadata is created for the job with the provided field mapping and unique key. </p>"
    },
    "DeleteCalculatedAttributeDefinition":{
      "name":"DeleteCalculatedAttributeDefinition",
      "http":{
        "method":"DELETE",
        "requestUri":"/domains/{DomainName}/calculated-attributes/{CalculatedAttributeName}"
      },
      "input":{"shape":"DeleteCalculatedAttributeDefinitionRequest"},
      "output":{"shape":"DeleteCalculatedAttributeDefinitionResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Deletes an existing calculated attribute definition. Note that deleting a default calculated attribute is possible, however once deleted, you will be unable to undo that action and will need to recreate it on your own using the CreateCalculatedAttributeDefinition API if you want it back.</p>"
    },
    "DeleteDomain":{
      "name":"DeleteDomain",
      "http":{
        "method":"DELETE",
        "requestUri":"/domains/{DomainName}"
      },
      "input":{"shape":"DeleteDomainRequest"},
      "output":{"shape":"DeleteDomainResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Deletes a specific domain and all of its customer data, such as customer profile attributes and their related objects.</p>"
    },
    "DeleteDomainLayout":{
      "name":"DeleteDomainLayout",
      "http":{
        "method":"DELETE",
        "requestUri":"/domains/{DomainName}/layouts/{LayoutDefinitionName}"
      },
      "input":{"shape":"DeleteDomainLayoutRequest"},
      "output":{"shape":"DeleteDomainLayoutResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Deletes the layout used to view data for a specific domain. This API can only be invoked from the Amazon Connect admin website.</p>"
    },
    "DeleteEventStream":{
      "name":"DeleteEventStream",
      "http":{
        "method":"DELETE",
        "requestUri":"/domains/{DomainName}/event-streams/{EventStreamName}"
      },
      "input":{"shape":"DeleteEventStreamRequest"},
      "output":{"shape":"DeleteEventStreamResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Disables and deletes the specified event stream.</p>",
      "idempotent":true
    },
    "DeleteEventTrigger":{
      "name":"DeleteEventTrigger",
      "http":{
        "method":"DELETE",
        "requestUri":"/domains/{DomainName}/event-triggers/{EventTriggerName}"
      },
      "input":{"shape":"DeleteEventTriggerRequest"},
      "output":{"shape":"DeleteEventTriggerResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Disable and deletes the Event Trigger.</p> <note> <p>You cannot delete an Event Trigger with an active Integration associated.</p> </note>"
    },
    "DeleteIntegration":{
      "name":"DeleteIntegration",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/integrations/delete"
      },
      "input":{"shape":"DeleteIntegrationRequest"},
      "output":{"shape":"DeleteIntegrationResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Removes an integration from a specific domain.</p>"
    },
    "DeleteProfile":{
      "name":"DeleteProfile",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/profiles/delete"
      },
      "input":{"shape":"DeleteProfileRequest"},
      "output":{"shape":"DeleteProfileResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Deletes the standard customer profile and all data pertaining to the profile.</p>"
    },
    "DeleteProfileKey":{
      "name":"DeleteProfileKey",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/profiles/keys/delete"
      },
      "input":{"shape":"DeleteProfileKeyRequest"},
      "output":{"shape":"DeleteProfileKeyResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Removes a searchable key from a customer profile.</p>"
    },
    "DeleteProfileObject":{
      "name":"DeleteProfileObject",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/profiles/objects/delete"
      },
      "input":{"shape":"DeleteProfileObjectRequest"},
      "output":{"shape":"DeleteProfileObjectResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Removes an object associated with a profile of a given ProfileObjectType.</p>"
    },
    "DeleteProfileObjectType":{
      "name":"DeleteProfileObjectType",
      "http":{
        "method":"DELETE",
        "requestUri":"/domains/{DomainName}/object-types/{ObjectTypeName}"
      },
      "input":{"shape":"DeleteProfileObjectTypeRequest"},
      "output":{"shape":"DeleteProfileObjectTypeResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Removes a ProfileObjectType from a specific domain as well as removes all the ProfileObjects of that type. It also disables integrations from this specific ProfileObjectType. In addition, it scrubs all of the fields of the standard profile that were populated from this ProfileObjectType.</p>"
    },
    "DeleteSegmentDefinition":{
      "name":"DeleteSegmentDefinition",
      "http":{
        "method":"DELETE",
        "requestUri":"/domains/{DomainName}/segment-definitions/{SegmentDefinitionName}",
        "responseCode":200
      },
      "input":{"shape":"DeleteSegmentDefinitionRequest"},
      "output":{"shape":"DeleteSegmentDefinitionResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>Deletes a segment definition from the domain.</p>",
      "idempotent":true
    },
    "DeleteWorkflow":{
      "name":"DeleteWorkflow",
      "http":{
        "method":"DELETE",
        "requestUri":"/domains/{DomainName}/workflows/{WorkflowId}"
      },
      "input":{"shape":"DeleteWorkflowRequest"},
      "output":{"shape":"DeleteWorkflowResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Deletes the specified workflow and all its corresponding resources. This is an async process.</p>"
    },
    "DetectProfileObjectType":{
      "name":"DetectProfileObjectType",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/detect/object-types"
      },
      "input":{"shape":"DetectProfileObjectTypeRequest"},
      "output":{"shape":"DetectProfileObjectTypeResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>The process of detecting profile object type mapping by using given objects.</p>"
    },
    "GetAutoMergingPreview":{
      "name":"GetAutoMergingPreview",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/identity-resolution-jobs/auto-merging-preview"
      },
      "input":{"shape":"GetAutoMergingPreviewRequest"},
      "output":{"shape":"GetAutoMergingPreviewResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Tests the auto-merging settings of your Identity Resolution Job without merging your data. It randomly selects a sample of matching groups from the existing matching results, and applies the automerging settings that you provided. You can then view the number of profiles in the sample, the number of matches, and the number of profiles identified to be merged. This enables you to evaluate the accuracy of the attributes in your matching list. </p> <p>You can't view which profiles are matched and would be merged.</p> <important> <p>We strongly recommend you use this API to do a dry run of the automerging process before running the Identity Resolution Job. Include <b>at least</b> two matching attributes. If your matching list includes too few attributes (such as only <code>FirstName</code> or only <code>LastName</code>), there may be a large number of matches. This increases the chances of erroneous merges.</p> </important>"
    },
    "GetCalculatedAttributeDefinition":{
      "name":"GetCalculatedAttributeDefinition",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/calculated-attributes/{CalculatedAttributeName}"
      },
      "input":{"shape":"GetCalculatedAttributeDefinitionRequest"},
      "output":{"shape":"GetCalculatedAttributeDefinitionResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Provides more information on a calculated attribute definition for Customer Profiles.</p>"
    },
    "GetCalculatedAttributeForProfile":{
      "name":"GetCalculatedAttributeForProfile",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/profile/{ProfileId}/calculated-attributes/{CalculatedAttributeName}"
      },
      "input":{"shape":"GetCalculatedAttributeForProfileRequest"},
      "output":{"shape":"GetCalculatedAttributeForProfileResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Retrieve a calculated attribute for a customer profile.</p>"
    },
    "GetDomain":{
      "name":"GetDomain",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}"
      },
      "input":{"shape":"GetDomainRequest"},
      "output":{"shape":"GetDomainResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns information about a specific domain.</p>"
    },
    "GetDomainLayout":{
      "name":"GetDomainLayout",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/layouts/{LayoutDefinitionName}"
      },
      "input":{"shape":"GetDomainLayoutRequest"},
      "output":{"shape":"GetDomainLayoutResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Gets the layout to view data for a specific domain. This API can only be invoked from the Amazon Connect admin website.</p>"
    },
    "GetEventStream":{
      "name":"GetEventStream",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/event-streams/{EventStreamName}"
      },
      "input":{"shape":"GetEventStreamRequest"},
      "output":{"shape":"GetEventStreamResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns information about the specified event stream in a specific domain.</p>"
    },
    "GetEventTrigger":{
      "name":"GetEventTrigger",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/event-triggers/{EventTriggerName}"
      },
      "input":{"shape":"GetEventTriggerRequest"},
      "output":{"shape":"GetEventTriggerResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Get a specific Event Trigger from the domain.</p>"
    },
    "GetIdentityResolutionJob":{
      "name":"GetIdentityResolutionJob",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/identity-resolution-jobs/{JobId}"
      },
      "input":{"shape":"GetIdentityResolutionJobRequest"},
      "output":{"shape":"GetIdentityResolutionJobResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns information about an Identity Resolution Job in a specific domain. </p> <p>Identity Resolution Jobs are set up using the Amazon Connect admin console. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/use-identity-resolution.html\">Use Identity Resolution to consolidate similar profiles</a>.</p>"
    },
    "GetIntegration":{
      "name":"GetIntegration",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/integrations"
      },
      "input":{"shape":"GetIntegrationRequest"},
      "output":{"shape":"GetIntegrationResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns an integration for a domain.</p>"
    },
    "GetMatches":{
      "name":"GetMatches",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/matches"
      },
      "input":{"shape":"GetMatchesRequest"},
      "output":{"shape":"GetMatchesResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Before calling this API, use <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_CreateDomain.html\">CreateDomain</a> or <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UpdateDomain.html\">UpdateDomain</a> to enable identity resolution: set <code>Matching</code> to true.</p> <p>GetMatches returns potentially matching profiles, based on the results of the latest run of a machine learning process. </p> <important> <p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p> </important> <p>Amazon Connect uses the following profile attributes to identify matches:</p> <ul> <li> <p>PhoneNumber</p> </li> <li> <p>HomePhoneNumber</p> </li> <li> <p>BusinessPhoneNumber</p> </li> <li> <p>MobilePhoneNumber</p> </li> <li> <p>EmailAddress</p> </li> <li> <p>PersonalEmailAddress</p> </li> <li> <p>BusinessEmailAddress</p> </li> <li> <p>FullName</p> </li> </ul> <p>For example, two or more profiles—with spelling mistakes such as <b>John Doe</b> and <b>Jhn Doe</b>, or different casing email addresses such as <b>JOHN_DOE@ANYCOMPANY.COM</b> and <b>johndoe@anycompany.com</b>, or different phone number formats such as <b>555-010-0000</b> and <b>+1-555-010-0000</b>—can be detected as belonging to the same customer <b>John Doe</b> and merged into a unified profile.</p>"
    },
    "GetProfileObjectType":{
      "name":"GetProfileObjectType",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/object-types/{ObjectTypeName}"
      },
      "input":{"shape":"GetProfileObjectTypeRequest"},
      "output":{"shape":"GetProfileObjectTypeResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns the object types for a specific domain.</p>"
    },
    "GetProfileObjectTypeTemplate":{
      "name":"GetProfileObjectTypeTemplate",
      "http":{
        "method":"GET",
        "requestUri":"/templates/{TemplateId}"
      },
      "input":{"shape":"GetProfileObjectTypeTemplateRequest"},
      "output":{"shape":"GetProfileObjectTypeTemplateResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns the template information for a specific object type.</p> <p>A template is a predefined ProfileObjectType, such as “Salesforce-Account” or “Salesforce-Contact.” When a user sends a ProfileObject, using the PutProfileObject API, with an ObjectTypeName that matches one of the TemplateIds, it uses the mappings from the template.</p>"
    },
    "GetSegmentDefinition":{
      "name":"GetSegmentDefinition",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/segment-definitions/{SegmentDefinitionName}",
        "responseCode":200
      },
      "input":{"shape":"GetSegmentDefinitionRequest"},
      "output":{"shape":"GetSegmentDefinitionResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>Gets a segment definition from the domain.</p>"
    },
    "GetSegmentEstimate":{
      "name":"GetSegmentEstimate",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/segment-estimates/{EstimateId}"
      },
      "input":{"shape":"GetSegmentEstimateRequest"},
      "output":{"shape":"GetSegmentEstimateResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Gets the result of a segment estimate query.</p>"
    },
    "GetSegmentMembership":{
      "name":"GetSegmentMembership",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/segments/{SegmentDefinitionName}/membership",
        "responseCode":200
      },
      "input":{"shape":"GetSegmentMembershipRequest"},
      "output":{"shape":"GetSegmentMembershipResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>Determines if the given profiles are within a segment.</p>",
      "idempotent":true
    },
    "GetSegmentSnapshot":{
      "name":"GetSegmentSnapshot",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/segments/{SegmentDefinitionName}/snapshots/{SnapshotId}"
      },
      "input":{"shape":"GetSegmentSnapshotRequest"},
      "output":{"shape":"GetSegmentSnapshotResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Retrieve the latest status of a segment snapshot.</p>"
    },
    "GetSimilarProfiles":{
      "name":"GetSimilarProfiles",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/matches"
      },
      "input":{"shape":"GetSimilarProfilesRequest"},
      "output":{"shape":"GetSimilarProfilesResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns a set of profiles that belong to the same matching group using the <code>matchId</code> or <code>profileId</code>. You can also specify the type of matching that you want for finding similar profiles using either <code>RULE_BASED_MATCHING</code> or <code>ML_BASED_MATCHING</code>.</p>"
    },
    "GetUploadJob":{
      "name":"GetUploadJob",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/upload-jobs/{JobId}",
        "responseCode":200
      },
      "input":{"shape":"GetUploadJobRequest"},
      "output":{"shape":"GetUploadJobResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>This API retrieves the details of a specific upload job. </p>"
    },
    "GetUploadJobPath":{
      "name":"GetUploadJobPath",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/upload-jobs/{JobId}/path",
        "responseCode":200
      },
      "input":{"shape":"GetUploadJobPathRequest"},
      "output":{"shape":"GetUploadJobPathResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>This API retrieves the pre-signed URL and client token for uploading the file associated with the upload job. </p>"
    },
    "GetWorkflow":{
      "name":"GetWorkflow",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/workflows/{WorkflowId}"
      },
      "input":{"shape":"GetWorkflowRequest"},
      "output":{"shape":"GetWorkflowResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Get details of specified workflow.</p>"
    },
    "GetWorkflowSteps":{
      "name":"GetWorkflowSteps",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/workflows/{WorkflowId}/steps"
      },
      "input":{"shape":"GetWorkflowStepsRequest"},
      "output":{"shape":"GetWorkflowStepsResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Get granular list of steps in workflow.</p>"
    },
    "ListAccountIntegrations":{
      "name":"ListAccountIntegrations",
      "http":{
        "method":"POST",
        "requestUri":"/integrations"
      },
      "input":{"shape":"ListAccountIntegrationsRequest"},
      "output":{"shape":"ListAccountIntegrationsResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Lists all of the integrations associated to a specific URI in the AWS account.</p>"
    },
    "ListCalculatedAttributeDefinitions":{
      "name":"ListCalculatedAttributeDefinitions",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/calculated-attributes"
      },
      "input":{"shape":"ListCalculatedAttributeDefinitionsRequest"},
      "output":{"shape":"ListCalculatedAttributeDefinitionsResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Lists calculated attribute definitions for Customer Profiles</p>"
    },
    "ListCalculatedAttributesForProfile":{
      "name":"ListCalculatedAttributesForProfile",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/profile/{ProfileId}/calculated-attributes"
      },
      "input":{"shape":"ListCalculatedAttributesForProfileRequest"},
      "output":{"shape":"ListCalculatedAttributesForProfileResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Retrieve a list of calculated attributes for a customer profile.</p>"
    },
    "ListDomainLayouts":{
      "name":"ListDomainLayouts",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/layouts"
      },
      "input":{"shape":"ListDomainLayoutsRequest"},
      "output":{"shape":"ListDomainLayoutsResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Lists the existing layouts that can be used to view data for a specific domain. This API can only be invoked from the Amazon Connect admin website.</p>"
    },
    "ListDomains":{
      "name":"ListDomains",
      "http":{
        "method":"GET",
        "requestUri":"/domains"
      },
      "input":{"shape":"ListDomainsRequest"},
      "output":{"shape":"ListDomainsResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns a list of all the domains for an AWS account that have been created.</p>"
    },
    "ListEventStreams":{
      "name":"ListEventStreams",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/event-streams"
      },
      "input":{"shape":"ListEventStreamsRequest"},
      "output":{"shape":"ListEventStreamsResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns a list of all the event streams in a specific domain.</p>"
    },
    "ListEventTriggers":{
      "name":"ListEventTriggers",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/event-triggers"
      },
      "input":{"shape":"ListEventTriggersRequest"},
      "output":{"shape":"ListEventTriggersResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>List all Event Triggers under a domain.</p>"
    },
    "ListIdentityResolutionJobs":{
      "name":"ListIdentityResolutionJobs",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/identity-resolution-jobs"
      },
      "input":{"shape":"ListIdentityResolutionJobsRequest"},
      "output":{"shape":"ListIdentityResolutionJobsResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Lists all of the Identity Resolution Jobs in your domain. The response sorts the list by <code>JobStartTime</code>.</p>"
    },
    "ListIntegrations":{
      "name":"ListIntegrations",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/integrations"
      },
      "input":{"shape":"ListIntegrationsRequest"},
      "output":{"shape":"ListIntegrationsResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Lists all of the integrations in your domain.</p>"
    },
    "ListObjectTypeAttributes":{
      "name":"ListObjectTypeAttributes",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/object-types/{ObjectTypeName}/attributes"
      },
      "input":{"shape":"ListObjectTypeAttributesRequest"},
      "output":{"shape":"ListObjectTypeAttributesResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Fetch the possible attribute values given the attribute name.</p>"
    },
    "ListProfileAttributeValues":{
      "name":"ListProfileAttributeValues",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/profile-attributes/{AttributeName}/values"
      },
      "input":{"shape":"ProfileAttributeValuesRequest"},
      "output":{"shape":"ProfileAttributeValuesResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Fetch the possible attribute values given the attribute name.</p>"
    },
    "ListProfileObjectTypeTemplates":{
      "name":"ListProfileObjectTypeTemplates",
      "http":{
        "method":"GET",
        "requestUri":"/templates"
      },
      "input":{"shape":"ListProfileObjectTypeTemplatesRequest"},
      "output":{"shape":"ListProfileObjectTypeTemplatesResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Lists all of the template information for object types.</p>"
    },
    "ListProfileObjectTypes":{
      "name":"ListProfileObjectTypes",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/object-types"
      },
      "input":{"shape":"ListProfileObjectTypesRequest"},
      "output":{"shape":"ListProfileObjectTypesResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Lists all of the templates available within the service.</p>"
    },
    "ListProfileObjects":{
      "name":"ListProfileObjects",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/profiles/objects"
      },
      "input":{"shape":"ListProfileObjectsRequest"},
      "output":{"shape":"ListProfileObjectsResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns a list of objects associated with a profile of a given ProfileObjectType.</p>"
    },
    "ListRuleBasedMatches":{
      "name":"ListRuleBasedMatches",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/profiles/ruleBasedMatches"
      },
      "input":{"shape":"ListRuleBasedMatchesRequest"},
      "output":{"shape":"ListRuleBasedMatchesResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Returns a set of <code>MatchIds</code> that belong to the given domain.</p>"
    },
    "ListSegmentDefinitions":{
      "name":"ListSegmentDefinitions",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/segment-definitions",
        "responseCode":200
      },
      "input":{"shape":"ListSegmentDefinitionsRequest"},
      "output":{"shape":"ListSegmentDefinitionsResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>Lists all segment definitions under a domain.</p>"
    },
    "ListTagsForResource":{
      "name":"ListTagsForResource",
      "http":{
        "method":"GET",
        "requestUri":"/tags/{resourceArn}"
      },
      "input":{"shape":"ListTagsForResourceRequest"},
      "output":{"shape":"ListTagsForResourceResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Displays the tags associated with an Amazon Connect Customer Profiles resource. In Connect Customer Profiles, domains, profile object types, and integrations can be tagged.</p>"
    },
    "ListUploadJobs":{
      "name":"ListUploadJobs",
      "http":{
        "method":"GET",
        "requestUri":"/domains/{DomainName}/upload-jobs",
        "responseCode":200
      },
      "input":{"shape":"ListUploadJobsRequest"},
      "output":{"shape":"ListUploadJobsResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>This API retrieves a list of upload jobs for the specified domain. </p>"
    },
    "ListWorkflows":{
      "name":"ListWorkflows",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/workflows"
      },
      "input":{"shape":"ListWorkflowsRequest"},
      "output":{"shape":"ListWorkflowsResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Query to list all workflows.</p>"
    },
    "MergeProfiles":{
      "name":"MergeProfiles",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/profiles/objects/merge"
      },
      "input":{"shape":"MergeProfilesRequest"},
      "output":{"shape":"MergeProfilesResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Runs an AWS Lambda job that does the following:</p> <ol> <li> <p>All the profileKeys in the <code>ProfileToBeMerged</code> will be moved to the main profile.</p> </li> <li> <p>All the objects in the <code>ProfileToBeMerged</code> will be moved to the main profile.</p> </li> <li> <p>All the <code>ProfileToBeMerged</code> will be deleted at the end.</p> </li> <li> <p>All the profileKeys in the <code>ProfileIdsToBeMerged</code> will be moved to the main profile.</p> </li> <li> <p>Standard fields are merged as follows:</p> <ol> <li> <p>Fields are always \"union\"-ed if there are no conflicts in standard fields or attributeKeys.</p> </li> <li> <p>When there are conflicting fields:</p> <ol> <li> <p>If no <code>SourceProfileIds</code> entry is specified, the main Profile value is always taken. </p> </li> <li> <p>If a <code>SourceProfileIds</code> entry is specified, the specified profileId is always taken, even if it is a NULL value.</p> </li> </ol> </li> </ol> </li> </ol> <p>You can use MergeProfiles together with <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a>, which returns potentially matching profiles, or use it with the results of another matching system. After profiles have been merged, they cannot be separated (unmerged).</p>"
    },
    "PutIntegration":{
      "name":"PutIntegration",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{DomainName}/integrations"
      },
      "input":{"shape":"PutIntegrationRequest"},
      "output":{"shape":"PutIntegrationResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Adds an integration between the service and a third-party service, which includes Amazon AppFlow and Amazon Connect.</p> <p>An integration can belong to only one domain.</p> <p>To add or remove tags on an existing Integration, see <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_TagResource.html\"> TagResource </a>/<a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UntagResource.html\"> UntagResource</a>.</p>"
    },
    "PutProfileObject":{
      "name":"PutProfileObject",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{DomainName}/profiles/objects"
      },
      "input":{"shape":"PutProfileObjectRequest"},
      "output":{"shape":"PutProfileObjectResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Adds additional objects to customer profiles of a given ObjectType.</p> <p>When adding a specific profile object, like a Contact Record, an inferred profile can get created if it is not mapped to an existing profile. The resulting profile will only have a phone number populated in the standard ProfileObject. Any additional Contact Records with the same phone number will be mapped to the same inferred profile.</p> <p>When a ProfileObject is created and if a ProfileObjectType already exists for the ProfileObject, it will provide data to a standard profile depending on the ProfileObjectType definition.</p> <p>PutProfileObject needs an ObjectType, which can be created using PutProfileObjectType.</p>"
    },
    "PutProfileObjectType":{
      "name":"PutProfileObjectType",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{DomainName}/object-types/{ObjectTypeName}"
      },
      "input":{"shape":"PutProfileObjectTypeRequest"},
      "output":{"shape":"PutProfileObjectTypeResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Defines a ProfileObjectType.</p> <p>To add or remove tags on an existing ObjectType, see <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_TagResource.html\"> TagResource</a>/<a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UntagResource.html\">UntagResource</a>.</p>"
    },
    "SearchProfiles":{
      "name":"SearchProfiles",
      "http":{
        "method":"POST",
        "requestUri":"/domains/{DomainName}/profiles/search"
      },
      "input":{"shape":"SearchProfilesRequest"},
      "output":{"shape":"SearchProfilesResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Searches for profiles within a specific domain using one or more predefined search keys (e.g., _fullName, _phone, _email, _account, etc.) and/or custom-defined search keys. A search key is a data type pair that consists of a <code>KeyName</code> and <code>Values</code> list.</p> <p>This operation supports searching for profiles with a minimum of 1 key-value(s) pair and up to 5 key-value(s) pairs using either <code>AND</code> or <code>OR</code> logic.</p>"
    },
    "StartUploadJob":{
      "name":"StartUploadJob",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{DomainName}/upload-jobs/{JobId}",
        "responseCode":200
      },
      "input":{"shape":"StartUploadJobRequest"},
      "output":{"shape":"StartUploadJobResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>This API starts the processing of an upload job to ingest profile data. </p>"
    },
    "StopUploadJob":{
      "name":"StopUploadJob",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{DomainName}/upload-jobs/{JobId}/stop",
        "responseCode":200
      },
      "input":{"shape":"StopUploadJobRequest"},
      "output":{"shape":"StopUploadJobResponse"},
      "errors":[
        {"shape":"ResourceNotFoundException"},
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ThrottlingException"},
        {"shape":"AccessDeniedException"}
      ],
      "documentation":"<p>This API stops the processing of an upload job. </p>"
    },
    "TagResource":{
      "name":"TagResource",
      "http":{
        "method":"POST",
        "requestUri":"/tags/{resourceArn}"
      },
      "input":{"shape":"TagResourceRequest"},
      "output":{"shape":"TagResourceResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Assigns one or more tags (key-value pairs) to the specified Amazon Connect Customer Profiles resource. Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values. In Connect Customer Profiles, domains, profile object types, and integrations can be tagged.</p> <p>Tags don't have any semantic meaning to AWS and are interpreted strictly as strings of characters.</p> <p>You can use the TagResource action with a resource that already has tags. If you specify a new tag key, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource.</p>"
    },
    "UntagResource":{
      "name":"UntagResource",
      "http":{
        "method":"DELETE",
        "requestUri":"/tags/{resourceArn}"
      },
      "input":{"shape":"UntagResourceRequest"},
      "output":{"shape":"UntagResourceResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"}
      ],
      "documentation":"<p>Removes one or more tags from the specified Amazon Connect Customer Profiles resource. In Connect Customer Profiles, domains, profile object types, and integrations can be tagged.</p>"
    },
    "UpdateCalculatedAttributeDefinition":{
      "name":"UpdateCalculatedAttributeDefinition",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{DomainName}/calculated-attributes/{CalculatedAttributeName}"
      },
      "input":{"shape":"UpdateCalculatedAttributeDefinitionRequest"},
      "output":{"shape":"UpdateCalculatedAttributeDefinitionResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Updates an existing calculated attribute definition. When updating the Conditions, note that increasing the date range of a calculated attribute will not trigger inclusion of historical data greater than the current date range.</p>"
    },
    "UpdateDomain":{
      "name":"UpdateDomain",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{DomainName}"
      },
      "input":{"shape":"UpdateDomainRequest"},
      "output":{"shape":"UpdateDomainResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Updates the properties of a domain, including creating or selecting a dead letter queue or an encryption key.</p> <p>After a domain is created, the name can’t be changed.</p> <p>Use this API or <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_CreateDomain.html\">CreateDomain</a> to enable <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">identity resolution</a>: set <code>Matching</code> to true.</p> <p>To prevent cross-service impersonation when you call this API, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/cross-service-confused-deputy-prevention.html\">Cross-service confused deputy prevention</a> for sample policies that you should apply. </p> <p>To add or remove tags on an existing Domain, see <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_TagResource.html\">TagResource</a>/<a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UntagResource.html\">UntagResource</a>.</p>"
    },
    "UpdateDomainLayout":{
      "name":"UpdateDomainLayout",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{DomainName}/layouts/{LayoutDefinitionName}"
      },
      "input":{"shape":"UpdateDomainLayoutRequest"},
      "output":{"shape":"UpdateDomainLayoutResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Updates the layout used to view data for a specific domain. This API can only be invoked from the Amazon Connect admin website.</p>"
    },
    "UpdateEventTrigger":{
      "name":"UpdateEventTrigger",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{DomainName}/event-triggers/{EventTriggerName}"
      },
      "input":{"shape":"UpdateEventTriggerRequest"},
      "output":{"shape":"UpdateEventTriggerResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Update the properties of an Event Trigger.</p>"
    },
    "UpdateProfile":{
      "name":"UpdateProfile",
      "http":{
        "method":"PUT",
        "requestUri":"/domains/{DomainName}/profiles"
      },
      "input":{"shape":"UpdateProfileRequest"},
      "output":{"shape":"UpdateProfileResponse"},
      "errors":[
        {"shape":"BadRequestException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"}
      ],
      "documentation":"<p>Updates the properties of a profile. The ProfileId is required for updating a customer profile.</p> <p>When calling the UpdateProfile API, specifying an empty string value means that any existing value will be removed. Not specifying a string value means that any value already there will be kept.</p>"
    }
  },
  "shapes":{
    "name":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[a-zA-Z0-9_-]+$"
    },
    "AccessDeniedException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"message"}
      },
      "documentation":"<p>You do not have sufficient access to perform this action.</p>",
      "error":{"httpStatusCode":403},
      "exception":true
    },
    "AddProfileKeyRequest":{
      "type":"structure",
      "required":[
        "ProfileId",
        "KeyName",
        "Values",
        "DomainName"
      ],
      "members":{
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of a customer profile.</p>"
        },
        "KeyName":{
          "shape":"name",
          "documentation":"<p>A searchable identifier of a customer profile. The predefined keys you can use include: _account, _profileId, _assetId, _caseId, _orderId, _fullName, _phone, _email, _ctrContactId, _marketoLeadId, _salesforceAccountId, _salesforceContactId, _salesforceAssetId, _zendeskUserId, _zendeskExternalId, _zendeskTicketId, _serviceNowSystemId, _serviceNowIncidentId, _segmentUserId, _shopifyCustomerId, _shopifyOrderId.</p>"
        },
        "Values":{
          "shape":"requestValueList",
          "documentation":"<p>A list of key values.</p>"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        }
      }
    },
    "AddProfileKeyResponse":{
      "type":"structure",
      "members":{
        "KeyName":{
          "shape":"name",
          "documentation":"<p>A searchable identifier of a customer profile.</p>"
        },
        "Values":{
          "shape":"requestValueList",
          "documentation":"<p>A list of key values.</p>"
        }
      }
    },
    "AdditionalSearchKey":{
      "type":"structure",
      "required":[
        "KeyName",
        "Values"
      ],
      "members":{
        "KeyName":{
          "shape":"name",
          "documentation":"<p>A searchable identifier of a customer profile.</p>"
        },
        "Values":{
          "shape":"requestValueList",
          "documentation":"<p>A list of key values.</p>"
        }
      },
      "documentation":"<p>A data type pair that consists of a <code>KeyName</code> and <code>Values</code> list that is used in conjunction with the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html#customerprofiles-SearchProfiles-request-KeyName\">KeyName</a> and <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html#customerprofiles-SearchProfiles-request-Values\">Values</a> parameters to search for profiles using the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html\">SearchProfiles</a> API.</p>"
    },
    "Address":{
      "type":"structure",
      "members":{
        "Address1":{
          "shape":"string1To255",
          "documentation":"<p>The first line of a customer address.</p>"
        },
        "Address2":{
          "shape":"string1To255",
          "documentation":"<p>The second line of a customer address.</p>"
        },
        "Address3":{
          "shape":"string1To255",
          "documentation":"<p>The third line of a customer address.</p>"
        },
        "Address4":{
          "shape":"string1To255",
          "documentation":"<p>The fourth line of a customer address.</p>"
        },
        "City":{
          "shape":"string1To255",
          "documentation":"<p>The city in which a customer lives.</p>"
        },
        "County":{
          "shape":"string1To255",
          "documentation":"<p>The county in which a customer lives.</p>"
        },
        "State":{
          "shape":"string1To255",
          "documentation":"<p>The state in which a customer lives.</p>"
        },
        "Province":{
          "shape":"string1To255",
          "documentation":"<p>The province in which a customer lives.</p>"
        },
        "Country":{
          "shape":"string1To255",
          "documentation":"<p>The country in which a customer lives.</p>"
        },
        "PostalCode":{
          "shape":"string1To255",
          "documentation":"<p>The postal code of a customer address.</p>"
        }
      },
      "documentation":"<p>A generic address associated with the customer that is not mailing, shipping, or billing.</p>",
      "sensitive":true
    },
    "AddressDimension":{
      "type":"structure",
      "members":{
        "City":{
          "shape":"ProfileDimension",
          "documentation":"<p>The city belonging to the address.</p>",
          "locationName":"City"
        },
        "Country":{
          "shape":"ProfileDimension",
          "documentation":"<p>The country belonging to the address.</p>",
          "locationName":"Country"
        },
        "County":{
          "shape":"ProfileDimension",
          "documentation":"<p>The county belonging to the address.</p>",
          "locationName":"County"
        },
        "PostalCode":{
          "shape":"ProfileDimension",
          "documentation":"<p>The postal code belonging to the address.</p>",
          "locationName":"PostalCode"
        },
        "Province":{
          "shape":"ProfileDimension",
          "documentation":"<p>The province belonging to the address.</p>",
          "locationName":"Province"
        },
        "State":{
          "shape":"ProfileDimension",
          "documentation":"<p>The state belonging to the address.</p>",
          "locationName":"State"
        }
      },
      "documentation":"<p>Object that segments on Customer Profile's address object.</p>"
    },
    "AddressList":{
      "type":"list",
      "member":{"shape":"string1To255"},
      "max":4,
      "min":1
    },
    "AppflowIntegration":{
      "type":"structure",
      "required":["FlowDefinition"],
      "members":{
        "FlowDefinition":{"shape":"FlowDefinition"},
        "Batches":{
          "shape":"Batches",
          "documentation":"<p>Batches in workflow of type <code>APPFLOW_INTEGRATION</code>.</p>"
        }
      },
      "documentation":"<p>Details for workflow of type <code>APPFLOW_INTEGRATION</code>.</p>"
    },
    "AppflowIntegrationWorkflowAttributes":{
      "type":"structure",
      "required":[
        "SourceConnectorType",
        "ConnectorProfileName"
      ],
      "members":{
        "SourceConnectorType":{
          "shape":"SourceConnectorType",
          "documentation":"<p>Specifies the source connector type, such as Salesforce, ServiceNow, and Marketo. Indicates source of ingestion.</p>"
        },
        "ConnectorProfileName":{
          "shape":"ConnectorProfileName",
          "documentation":"<p>The name of the AppFlow connector profile used for ingestion.</p>"
        },
        "RoleArn":{
          "shape":"string1To255",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role. Customer Profiles assumes this role to create resources on your behalf as part of workflow execution.</p>"
        }
      },
      "documentation":"<p>Structure holding all <code>APPFLOW_INTEGRATION</code> specific workflow attributes.</p>"
    },
    "AppflowIntegrationWorkflowMetrics":{
      "type":"structure",
      "required":[
        "RecordsProcessed",
        "StepsCompleted",
        "TotalSteps"
      ],
      "members":{
        "RecordsProcessed":{
          "shape":"long",
          "documentation":"<p>Number of records processed in <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        },
        "StepsCompleted":{
          "shape":"long",
          "documentation":"<p>Total steps completed in <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        },
        "TotalSteps":{
          "shape":"long",
          "documentation":"<p>Total steps in <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        }
      },
      "documentation":"<p>Workflow specific execution metrics for <code>APPFLOW_INTEGRATION</code> workflow.</p>"
    },
    "AppflowIntegrationWorkflowStep":{
      "type":"structure",
      "required":[
        "FlowName",
        "Status",
        "ExecutionMessage",
        "RecordsProcessed",
        "BatchRecordsStartTime",
        "BatchRecordsEndTime",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "members":{
        "FlowName":{
          "shape":"FlowName",
          "documentation":"<p>Name of the flow created during execution of workflow step. <code>APPFLOW_INTEGRATION</code> workflow type creates an appflow flow during workflow step execution on the customers behalf.</p>"
        },
        "Status":{
          "shape":"Status",
          "documentation":"<p>Workflow step status for <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        },
        "ExecutionMessage":{
          "shape":"string1To255",
          "documentation":"<p>Message indicating execution of workflow step for <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        },
        "RecordsProcessed":{
          "shape":"long",
          "documentation":"<p>Total number of records processed during execution of workflow step for <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        },
        "BatchRecordsStartTime":{
          "shape":"string1To255",
          "documentation":"<p>Start datetime of records pulled in batch during execution of workflow step for <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        },
        "BatchRecordsEndTime":{
          "shape":"string1To255",
          "documentation":"<p>End datetime of records pulled in batch during execution of workflow step for <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>Creation timestamp of workflow step for <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>Last updated timestamp for workflow step for <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        }
      },
      "documentation":"<p>Workflow step details for <code>APPFLOW_INTEGRATION</code> workflow.</p>"
    },
    "AttributeDetails":{
      "type":"structure",
      "required":[
        "Attributes",
        "Expression"
      ],
      "members":{
        "Attributes":{
          "shape":"AttributeList",
          "documentation":"<p>A list of attribute items specified in the mathematical expression.</p>"
        },
        "Expression":{
          "shape":"string1To255",
          "documentation":"<p>Mathematical expression that is performed on attribute items provided in the attribute list. Each element in the expression should follow the structure of \\\"{ObjectTypeName.AttributeName}\\\".</p>"
        }
      },
      "documentation":"<p>Mathematical expression and a list of attribute items specified in that expression.</p>",
      "sensitive":true
    },
    "AttributeDimension":{
      "type":"structure",
      "required":[
        "DimensionType",
        "Values"
      ],
      "members":{
        "DimensionType":{
          "shape":"AttributeDimensionType",
          "documentation":"<p>The action to segment with.</p>",
          "locationName":"DimensionType"
        },
        "Values":{
          "shape":"Values",
          "documentation":"<p>The values to apply the DimensionType on.</p>",
          "locationName":"Values"
        }
      },
      "documentation":"<p>Object that segments on various Customer Profile's fields.</p>"
    },
    "AttributeDimensionType":{
      "type":"string",
      "enum":[
        "INCLUSIVE",
        "EXCLUSIVE",
        "CONTAINS",
        "BEGINS_WITH",
        "ENDS_WITH",
        "BEFORE",
        "AFTER",
        "BETWEEN",
        "NOT_BETWEEN",
        "ON",
        "GREATER_THAN",
        "LESS_THAN",
        "GREATER_THAN_OR_EQUAL",
        "LESS_THAN_OR_EQUAL",
        "EQUAL"
      ]
    },
    "AttributeItem":{
      "type":"structure",
      "required":["Name"],
      "members":{
        "Name":{
          "shape":"attributeName",
          "documentation":"<p>The name of an attribute defined in a profile object type.</p>"
        }
      },
      "documentation":"<p>The details of a single attribute item specified in the mathematical expression.</p>"
    },
    "AttributeList":{
      "type":"list",
      "member":{"shape":"AttributeItem"},
      "max":50,
      "min":1
    },
    "AttributeMap":{
      "type":"map",
      "key":{"shape":"attributeName"},
      "value":{"shape":"FilterAttributeDimension"}
    },
    "AttributeMatchingModel":{
      "type":"string",
      "enum":[
        "ONE_TO_ONE",
        "MANY_TO_MANY"
      ]
    },
    "AttributeSourceIdMap":{
      "type":"map",
      "key":{"shape":"string1To255"},
      "value":{"shape":"uuid"}
    },
    "AttributeTypesSelector":{
      "type":"structure",
      "required":["AttributeMatchingModel"],
      "members":{
        "AttributeMatchingModel":{
          "shape":"AttributeMatchingModel",
          "documentation":"<p>Configures the <code>AttributeMatchingModel</code>, you can either choose <code>ONE_TO_ONE</code> or <code>MANY_TO_MANY</code>.</p>"
        },
        "Address":{
          "shape":"AddressList",
          "documentation":"<p>The <code>Address</code> type. You can choose from <code>Address</code>, <code>BusinessAddress</code>, <code>MaillingAddress</code>, and <code>ShippingAddress</code>.</p> <p>You only can use the Address type in the <code>MatchingRule</code>. For example, if you want to match profile based on <code>BusinessAddress.City</code> or <code>MaillingAddress.City</code>, you need to choose the <code>BusinessAddress</code> and the <code>MaillingAddress</code> to represent the Address type and specify the <code>Address.City</code> on the matching rule.</p>"
        },
        "PhoneNumber":{
          "shape":"PhoneNumberList",
          "documentation":"<p>The <code>PhoneNumber</code> type. You can choose from <code>PhoneNumber</code>, <code>HomePhoneNumber</code>, and <code>MobilePhoneNumber</code>.</p> <p>You only can use the <code>PhoneNumber</code> type in the <code>MatchingRule</code>. For example, if you want to match a profile based on <code>Phone</code> or <code>HomePhone</code>, you need to choose the <code>Phone</code> and the <code>HomePhone</code> to represent the <code>PhoneNumber</code> type and only specify the <code>PhoneNumber</code> on the matching rule.</p>"
        },
        "EmailAddress":{
          "shape":"EmailList",
          "documentation":"<p>The <code>Email</code> type. You can choose from <code>EmailAddress</code>, <code>BusinessEmailAddress</code> and <code>PersonalEmailAddress</code>.</p> <p>You only can use the <code>EmailAddress</code> type in the <code>MatchingRule</code>. For example, if you want to match profile based on <code>PersonalEmailAddress</code> or <code>BusinessEmailAddress</code>, you need to choose the <code>PersonalEmailAddress</code> and the <code>BusinessEmailAddress</code> to represent the <code>EmailAddress</code> type and only specify the <code>EmailAddress</code> on the matching rule.</p>"
        }
      },
      "documentation":"<p>Configuration information about the <code>AttributeTypesSelector </code>where the rule-based identity resolution uses to match profiles. You can choose how profiles are compared across attribute types and which attribute to use for matching from each type. There are three attribute types you can configure:</p> <ul> <li> <p>Email type</p> <ul> <li> <p>You can choose from <code>Email</code>, <code>BusinessEmail</code>, and <code>PersonalEmail</code> </p> </li> </ul> </li> <li> <p>Phone number type</p> <ul> <li> <p>You can choose from <code>Phone</code>, <code>HomePhone</code>, and <code>MobilePhone</code> </p> </li> </ul> </li> <li> <p>Address type</p> <ul> <li> <p>You can choose from <code>Address</code>, <code>BusinessAddress</code>, <code>MaillingAddress</code>, and <code>ShippingAddress</code> </p> </li> </ul> </li> </ul> <p>You can either choose <code>ONE_TO_ONE</code> or <code>MANY_TO_MANY</code> as the <code>AttributeMatchingModel</code>. When choosing <code>MANY_TO_MANY</code>, the system can match attribute across the sub-types of an attribute type. For example, if the value of the <code>Email</code> field of Profile A and the value of <code>BusinessEmail</code> field of Profile B matches, the two profiles are matched on the Email type. When choosing <code>ONE_TO_ONE</code> the system can only match if the sub-types are exact matches. For example, only when the value of the <code>Email</code> field of Profile A and the value of the <code>Email</code> field of Profile B matches, the two profiles are matched on the Email type.</p>"
    },
    "AttributeValueItem":{
      "type":"structure",
      "members":{
        "Value":{
          "shape":"string1To255",
          "documentation":"<p>An individual value belonging to the given attribute.</p>"
        }
      },
      "documentation":"<p>List containing the values for the given attribute.</p>"
    },
    "AttributeValueItemList":{
      "type":"list",
      "member":{"shape":"AttributeValueItem"}
    },
    "Attributes":{
      "type":"map",
      "key":{"shape":"string1To255"},
      "value":{"shape":"string1To255"},
      "sensitive":true
    },
    "AutoMerging":{
      "type":"structure",
      "required":["Enabled"],
      "members":{
        "Enabled":{
          "shape":"optionalBoolean",
          "documentation":"<p>The flag that enables the auto-merging of duplicate profiles.</p>"
        },
        "Consolidation":{
          "shape":"Consolidation",
          "documentation":"<p>A list of matching attributes that represent matching criteria. If two profiles meet at least one of the requirements in the matching attributes list, they will be merged.</p>"
        },
        "ConflictResolution":{
          "shape":"ConflictResolution",
          "documentation":"<p>How the auto-merging process should resolve conflicts between different profiles. For example, if Profile A and Profile B have the same <code>FirstName</code> and <code>LastName</code> (and that is the matching criteria), which <code>EmailAddress</code> should be used? </p>"
        },
        "MinAllowedConfidenceScoreForMerging":{
          "shape":"Double0To1",
          "documentation":"<p>A number between 0 and 1 that represents the minimum confidence score required for profiles within a matching group to be merged during the auto-merge process. A higher score means higher similarity required to merge profiles. </p>"
        }
      },
      "documentation":"<p>Configuration settings for how to perform the auto-merging of profiles.</p>"
    },
    "BadRequestException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"message"}
      },
      "documentation":"<p>The input you provided is invalid.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "Batch":{
      "type":"structure",
      "required":[
        "StartTime",
        "EndTime"
      ],
      "members":{
        "StartTime":{
          "shape":"timestamp",
          "documentation":"<p>Start time of batch to split ingestion.</p>"
        },
        "EndTime":{
          "shape":"timestamp",
          "documentation":"<p>End time of batch to split ingestion.</p>"
        }
      },
      "documentation":"<p>Batch defines the boundaries for ingestion for each step in <code>APPFLOW_INTEGRATION</code> workflow. <code>APPFLOW_INTEGRATION</code> workflow splits ingestion based on these boundaries.</p>"
    },
    "BatchGetCalculatedAttributeForProfileError":{
      "type":"structure",
      "required":[
        "Code",
        "Message",
        "ProfileId"
      ],
      "members":{
        "Code":{
          "shape":"string1To255",
          "documentation":"<p>Status code for why a specific profile and calculated attribute failed.</p>"
        },
        "Message":{
          "shape":"string1To1000",
          "documentation":"<p>Message describing why a specific profile and calculated attribute failed.</p>"
        },
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The profile id that failed.</p>"
        }
      },
      "documentation":"<p>Error object describing why a specific profile and calculated attribute failed.</p>"
    },
    "BatchGetCalculatedAttributeForProfileErrorList":{
      "type":"list",
      "member":{"shape":"BatchGetCalculatedAttributeForProfileError"}
    },
    "BatchGetCalculatedAttributeForProfileIdList":{
      "type":"list",
      "member":{"shape":"uuid"},
      "max":100,
      "min":1
    },
    "BatchGetCalculatedAttributeForProfileRequest":{
      "type":"structure",
      "required":[
        "CalculatedAttributeName",
        "DomainName",
        "ProfileIds"
      ],
      "members":{
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>",
          "location":"uri",
          "locationName":"CalculatedAttributeName"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "ProfileIds":{
          "shape":"BatchGetCalculatedAttributeForProfileIdList",
          "documentation":"<p>List of unique identifiers for customer profiles to retrieve.</p>"
        },
        "ConditionOverrides":{
          "shape":"ConditionOverrides",
          "documentation":"<p>Overrides the condition block within the original calculated attribute definition.</p>"
        }
      }
    },
    "BatchGetCalculatedAttributeForProfileResponse":{
      "type":"structure",
      "members":{
        "Errors":{
          "shape":"BatchGetCalculatedAttributeForProfileErrorList",
          "documentation":"<p>List of errors for calculated attribute values that could not be retrieved.</p>"
        },
        "CalculatedAttributeValues":{
          "shape":"CalculatedAttributeValueList",
          "documentation":"<p>List of calculated attribute values retrieved.</p>"
        },
        "ConditionOverrides":{
          "shape":"ConditionOverrides",
          "documentation":"<p>Overrides the condition block within the original calculated attribute definition.</p>"
        }
      }
    },
    "BatchGetProfileError":{
      "type":"structure",
      "required":[
        "Code",
        "Message",
        "ProfileId"
      ],
      "members":{
        "Code":{
          "shape":"string1To255",
          "documentation":"<p>Status code for why a specific profile failed.</p>"
        },
        "Message":{
          "shape":"string1To1000",
          "documentation":"<p>Message describing why a specific profile failed.</p>"
        },
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The profile id that failed.</p>"
        }
      },
      "documentation":"<p>Error object describing why a specific profile failed.</p>"
    },
    "BatchGetProfileErrorList":{
      "type":"list",
      "member":{"shape":"BatchGetProfileError"}
    },
    "BatchGetProfileIdList":{
      "type":"list",
      "member":{"shape":"uuid"},
      "max":20,
      "min":1
    },
    "BatchGetProfileRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "ProfileIds"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "ProfileIds":{
          "shape":"BatchGetProfileIdList",
          "documentation":"<p>List of unique identifiers for customer profiles to retrieve.</p>"
        }
      }
    },
    "BatchGetProfileResponse":{
      "type":"structure",
      "members":{
        "Errors":{
          "shape":"BatchGetProfileErrorList",
          "documentation":"<p>For information about the errors that are common to all actions, see <a href=\"https://docs.aws.amazon.com/connect/latest/APIReference/CommonErrors.html\">Common Errors</a>.</p>"
        },
        "Profiles":{
          "shape":"ProfileList",
          "documentation":"<p>Array of Profile Objects.</p>"
        }
      }
    },
    "Batches":{
      "type":"list",
      "member":{"shape":"Batch"}
    },
    "BucketName":{
      "type":"string",
      "max":63,
      "min":3,
      "pattern":"\\S+"
    },
    "BucketPrefix":{
      "type":"string",
      "max":512,
      "pattern":".*"
    },
    "CalculatedAttributeDefinitionsList":{
      "type":"list",
      "member":{"shape":"ListCalculatedAttributeDefinitionItem"},
      "sensitive":true
    },
    "CalculatedAttributeDimension":{
      "type":"structure",
      "required":[
        "DimensionType",
        "Values"
      ],
      "members":{
        "DimensionType":{
          "shape":"AttributeDimensionType",
          "documentation":"<p>The action to segment with.</p>",
          "locationName":"DimensionType"
        },
        "Values":{
          "shape":"Values",
          "documentation":"<p>The values to apply the DimensionType with.</p>",
          "locationName":"Values"
        },
        "ConditionOverrides":{
          "shape":"ConditionOverrides",
          "documentation":"<p>Applies the given condition over the initial Calculated Attribute's definition.</p>",
          "locationName":"ConditionOverrides"
        }
      },
      "documentation":"<p>Object that segments on Customer Profile's Calculated Attributes.</p>"
    },
    "CalculatedAttributeValue":{
      "type":"structure",
      "members":{
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the calculated attribute.</p>"
        },
        "IsDataPartial":{
          "shape":"string1To255",
          "documentation":"<p>Indicates whether the calculated attribute's value is based on partial data. If the data is partial, it is set to true.</p>"
        },
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The profile id belonging to this calculated attribute value.</p>"
        },
        "Value":{
          "shape":"string1To255",
          "documentation":"<p>The value of the calculated attribute.</p>"
        },
        "LastObjectTimestamp":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of the newest object included in the calculated attribute calculation.</p>"
        }
      },
      "documentation":"<p>The object containing the values of a single calculated attribute value.</p>"
    },
    "CalculatedAttributeValueList":{
      "type":"list",
      "member":{"shape":"CalculatedAttributeValue"}
    },
    "CalculatedAttributesForProfileList":{
      "type":"list",
      "member":{"shape":"ListCalculatedAttributeForProfileItem"}
    },
    "CalculatedCustomAttributes":{
      "type":"map",
      "key":{"shape":"typeName"},
      "value":{"shape":"CalculatedAttributeDimension"}
    },
    "ComparisonOperator":{
      "type":"string",
      "enum":[
        "INCLUSIVE",
        "EXCLUSIVE",
        "CONTAINS",
        "BEGINS_WITH",
        "ENDS_WITH",
        "GREATER_THAN",
        "LESS_THAN",
        "GREATER_THAN_OR_EQUAL",
        "LESS_THAN_OR_EQUAL",
        "EQUAL",
        "BEFORE",
        "AFTER",
        "ON",
        "BETWEEN",
        "NOT_BETWEEN"
      ]
    },
    "ConditionOverrides":{
      "type":"structure",
      "members":{
        "Range":{
          "shape":"RangeOverride",
          "documentation":"<p>The relative time period over which data is included in the aggregation for this override.</p>"
        }
      },
      "documentation":"<p>An object to override the original condition block of a calculated attribute.</p>",
      "sensitive":true
    },
    "Conditions":{
      "type":"structure",
      "members":{
        "Range":{
          "shape":"Range",
          "documentation":"<p>The relative time period over which data is included in the aggregation.</p>"
        },
        "ObjectCount":{
          "shape":"ObjectCount",
          "documentation":"<p>The number of profile objects used for the calculated attribute.</p>"
        },
        "Threshold":{
          "shape":"Threshold",
          "documentation":"<p>The threshold for the calculated attribute.</p>"
        }
      },
      "documentation":"<p>The conditions including range, object count, and threshold for the calculated attribute.</p>",
      "sensitive":true
    },
    "ConflictResolution":{
      "type":"structure",
      "required":["ConflictResolvingModel"],
      "members":{
        "ConflictResolvingModel":{
          "shape":"ConflictResolvingModel",
          "documentation":"<p>How the auto-merging process should resolve conflicts between different profiles.</p> <ul> <li> <p> <code>RECENCY</code>: Uses the data that was most recently updated.</p> </li> <li> <p> <code>SOURCE</code>: Uses the data from a specific source. For example, if a company has been aquired or two departments have merged, data from the specified source is used. If two duplicate profiles are from the same source, then <code>RECENCY</code> is used again.</p> </li> </ul>"
        },
        "SourceName":{
          "shape":"string1To255",
          "documentation":"<p>The <code>ObjectType</code> name that is used to resolve profile merging conflicts when choosing <code>SOURCE</code> as the <code>ConflictResolvingModel</code>.</p>"
        }
      },
      "documentation":"<p>How the auto-merging process should resolve conflicts between different profiles.</p>"
    },
    "ConflictResolvingModel":{
      "type":"string",
      "enum":[
        "RECENCY",
        "SOURCE"
      ]
    },
    "ConnectorOperator":{
      "type":"structure",
      "members":{
        "Marketo":{
          "shape":"MarketoConnectorOperator",
          "documentation":"<p>The operation to be performed on the provided Marketo source fields.</p>"
        },
        "S3":{
          "shape":"S3ConnectorOperator",
          "documentation":"<p>The operation to be performed on the provided Amazon S3 source fields.</p>"
        },
        "Salesforce":{
          "shape":"SalesforceConnectorOperator",
          "documentation":"<p>The operation to be performed on the provided Salesforce source fields.</p>"
        },
        "ServiceNow":{
          "shape":"ServiceNowConnectorOperator",
          "documentation":"<p>The operation to be performed on the provided ServiceNow source fields.</p>"
        },
        "Zendesk":{
          "shape":"ZendeskConnectorOperator",
          "documentation":"<p>The operation to be performed on the provided Zendesk source fields.</p>"
        }
      },
      "documentation":"<p>The operation to be performed on the provided source fields.</p>"
    },
    "ConnectorProfileName":{
      "type":"string",
      "max":256,
      "pattern":"[\\w/!@#+=.-]+"
    },
    "Consolidation":{
      "type":"structure",
      "required":["MatchingAttributesList"],
      "members":{
        "MatchingAttributesList":{
          "shape":"MatchingAttributesList",
          "documentation":"<p>A list of matching criteria.</p>"
        }
      },
      "documentation":"<p>The matching criteria to be used during the auto-merging process. </p>"
    },
    "ContactPreference":{
      "type":"structure",
      "members":{
        "KeyName":{
          "shape":"name",
          "documentation":"<p>A searchable, unique identifier of a customer profile.</p>"
        },
        "KeyValue":{
          "shape":"string1To255",
          "documentation":"<p>The key value used to look up profile based off the keyName.</p>"
        },
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of a customer profile.</p>"
        },
        "ContactType":{
          "shape":"ContactType",
          "documentation":"<p>The contact type used for engagement. For example: HomePhoneNumber, PersonalEmailAddress.</p>"
        }
      },
      "documentation":"<p>Object that defines users contact preference.</p>"
    },
    "ContactType":{
      "type":"string",
      "enum":[
        "PhoneNumber",
        "MobilePhoneNumber",
        "HomePhoneNumber",
        "BusinessPhoneNumber",
        "EmailAddress",
        "PersonalEmailAddress",
        "BusinessEmailAddress"
      ]
    },
    "CreateCalculatedAttributeDefinitionRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "CalculatedAttributeName",
        "AttributeDetails",
        "Statistic"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>",
          "location":"uri",
          "locationName":"CalculatedAttributeName"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the calculated attribute.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the calculated attribute.</p>"
        },
        "AttributeDetails":{
          "shape":"AttributeDetails",
          "documentation":"<p>Mathematical expression and a list of attribute items specified in that expression.</p>"
        },
        "Conditions":{
          "shape":"Conditions",
          "documentation":"<p>The conditions including range, object count, and threshold for the calculated attribute.</p>"
        },
        "Filter":{
          "shape":"Filter",
          "documentation":"<p>Defines how to filter incoming objects to include part of the Calculated Attribute.</p>"
        },
        "Statistic":{
          "shape":"Statistic",
          "documentation":"<p>The aggregation operation to perform for the calculated attribute.</p>"
        },
        "UseHistoricalData":{
          "shape":"optionalBoolean",
          "documentation":"<p>Whether historical data ingested before the Calculated Attribute was created should be included in calculations.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "CreateCalculatedAttributeDefinitionResponse":{
      "type":"structure",
      "members":{
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the calculated attribute.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the calculated attribute.</p>"
        },
        "AttributeDetails":{
          "shape":"AttributeDetails",
          "documentation":"<p>Mathematical expression and a list of attribute items specified in that expression.</p>"
        },
        "Conditions":{
          "shape":"Conditions",
          "documentation":"<p>The conditions including range, object count, and threshold for the calculated attribute.</p>"
        },
        "Filter":{
          "shape":"Filter",
          "documentation":"<p>The filter that was used as part of the request.</p>"
        },
        "Statistic":{
          "shape":"Statistic",
          "documentation":"<p>The aggregation operation to perform for the calculated attribute.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the calculated attribute definition was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the calculated attribute definition was most recently edited.</p>"
        },
        "UseHistoricalData":{
          "shape":"optionalBoolean",
          "documentation":"<p>Whether historical data ingested before the Calculated Attribute was created should be included in calculations.</p>"
        },
        "Status":{
          "shape":"ReadinessStatus",
          "documentation":"<p>Status of the Calculated Attribute creation (whether all historical data has been indexed.)</p>"
        },
        "Readiness":{
          "shape":"Readiness",
          "documentation":"<p>Information indicating if the Calculated Attribute is ready for use by confirming all historical data has been processed and reflected.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "CreateDomainLayoutRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "LayoutDefinitionName",
        "Description",
        "DisplayName",
        "LayoutType",
        "Layout"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "LayoutDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the layout.</p>",
          "location":"uri",
          "locationName":"LayoutDefinitionName"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the layout</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the layout</p>"
        },
        "IsDefault":{
          "shape":"boolean",
          "documentation":"<p>If set to true for a layout, this layout will be used by default to view data. If set to false, then the layout will not be used by default, but it can be used to view data by explicitly selecting it in the console.</p>"
        },
        "LayoutType":{
          "shape":"LayoutType",
          "documentation":"<p>The type of layout that can be used to view data under a Customer Profiles domain.</p>"
        },
        "Layout":{
          "shape":"sensitiveString1To2000000",
          "documentation":"<p>A customizable layout that can be used to view data under a Customer Profiles domain.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "CreateDomainLayoutResponse":{
      "type":"structure",
      "required":[
        "LayoutDefinitionName",
        "Description",
        "DisplayName",
        "LayoutType",
        "Layout",
        "Version",
        "CreatedAt"
      ],
      "members":{
        "LayoutDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the layout.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the layout</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the layout</p>"
        },
        "IsDefault":{
          "shape":"boolean",
          "documentation":"<p>If set to true for a layout, this layout will be used by default to view data. If set to false, then the layout will not be used by default, but it can be used to view data by explicitly selecting it in the console.</p>"
        },
        "LayoutType":{
          "shape":"LayoutType",
          "documentation":"<p>The type of layout that can be used to view data under customer profiles domain.</p>"
        },
        "Layout":{
          "shape":"sensitiveString1To2000000",
          "documentation":"<p>A customizable layout that can be used to view data under Customer Profiles domain.</p>"
        },
        "Version":{
          "shape":"string1To255",
          "documentation":"<p>The version used to create layout.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the layout was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the layout was most recently updated.</p>"
        }
      }
    },
    "CreateDomainRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "DefaultExpirationDays"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "DefaultExpirationDays":{
          "shape":"expirationDaysInteger",
          "documentation":"<p>The default number of days until the data within the domain expires.</p>"
        },
        "DefaultEncryptionKey":{
          "shape":"encryptionKey",
          "documentation":"<p>The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.</p>"
        },
        "DeadLetterQueueUrl":{
          "shape":"sqsQueueUrl",
          "documentation":"<p>The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications. You must set up a policy on the DeadLetterQueue for the SendMessage operation to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue.</p>"
        },
        "Matching":{
          "shape":"MatchingRequest",
          "documentation":"<p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p>"
        },
        "RuleBasedMatching":{
          "shape":"RuleBasedMatchingRequest",
          "documentation":"<p>The process of matching duplicate profiles using the Rule-Based matching. If <code>RuleBasedMatching</code> = true, Amazon Connect Customer Profiles will start to match and merge your profiles according to your configuration in the <code>RuleBasedMatchingRequest</code>. You can use the <code>ListRuleBasedMatches</code> and <code>GetSimilarProfiles</code> API to return and review the results. Also, if you have configured <code>ExportingConfig</code> in the <code>RuleBasedMatchingRequest</code>, you can download the results from S3.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "CreateDomainResponse":{
      "type":"structure",
      "required":[
        "DomainName",
        "DefaultExpirationDays",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "DefaultExpirationDays":{
          "shape":"expirationDaysInteger",
          "documentation":"<p>The default number of days until the data within the domain expires.</p>"
        },
        "DefaultEncryptionKey":{
          "shape":"encryptionKey",
          "documentation":"<p>The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.</p>"
        },
        "DeadLetterQueueUrl":{
          "shape":"sqsQueueUrl",
          "documentation":"<p>The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications.</p>"
        },
        "Matching":{
          "shape":"MatchingResponse",
          "documentation":"<p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p>"
        },
        "RuleBasedMatching":{
          "shape":"RuleBasedMatchingResponse",
          "documentation":"<p>The process of matching duplicate profiles using the Rule-Based matching. If <code>RuleBasedMatching</code> = true, Amazon Connect Customer Profiles will start to match and merge your profiles according to your configuration in the <code>RuleBasedMatchingRequest</code>. You can use the <code>ListRuleBasedMatches</code> and <code>GetSimilarProfiles</code> API to return and review the results. Also, if you have configured <code>ExportingConfig</code> in the <code>RuleBasedMatchingRequest</code>, you can download the results from S3.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was most recently edited.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "CreateEventStreamRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "Uri",
        "EventStreamName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "Uri":{
          "shape":"string1To255",
          "documentation":"<p>The StreamARN of the destination to deliver profile events to. For example, arn:aws:kinesis:region:account-id:stream/stream-name</p>"
        },
        "EventStreamName":{
          "shape":"name",
          "documentation":"<p>The name of the event stream.</p>",
          "location":"uri",
          "locationName":"EventStreamName"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "CreateEventStreamResponse":{
      "type":"structure",
      "required":["EventStreamArn"],
      "members":{
        "EventStreamArn":{
          "shape":"string1To255",
          "documentation":"<p>A unique identifier for the event stream.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "CreateEventTriggerRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "EventTriggerName",
        "ObjectTypeName",
        "EventTriggerConditions"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "EventTriggerName":{
          "shape":"name",
          "documentation":"<p>The unique name of the event trigger.</p>",
          "location":"uri",
          "locationName":"EventTriggerName"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the object type.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the event trigger.</p>"
        },
        "EventTriggerConditions":{
          "shape":"EventTriggerConditions",
          "documentation":"<p>A list of conditions that determine when an event should trigger the destination.</p>"
        },
        "SegmentFilter":{
          "shape":"name",
          "documentation":"<p>The destination is triggered only for profiles that meet the criteria of a segment definition.</p>"
        },
        "EventTriggerLimits":{
          "shape":"EventTriggerLimits",
          "documentation":"<p>Defines limits controlling whether an event triggers the destination, based on ingestion latency and the number of invocations per profile over specific time periods.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>An array of key-value pairs to apply to this resource.</p>"
        }
      }
    },
    "CreateEventTriggerResponse":{
      "type":"structure",
      "members":{
        "EventTriggerName":{
          "shape":"name",
          "documentation":"<p>The unique name of the event trigger.</p>"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the object type.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the event trigger.</p>"
        },
        "EventTriggerConditions":{
          "shape":"EventTriggerConditions",
          "documentation":"<p>A list of conditions that determine when an event should trigger the destination.</p>"
        },
        "SegmentFilter":{
          "shape":"name",
          "documentation":"<p>The destination is triggered only for profiles that meet the criteria of a segment definition.</p>"
        },
        "EventTriggerLimits":{
          "shape":"EventTriggerLimits",
          "documentation":"<p>Defines limits controlling whether an event triggers the destination, based on ingestion latency and the number of invocations per profile over specific time periods.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the event trigger was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the event trigger was most recently updated.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>An array of key-value pairs to apply to this resource.</p>"
        }
      }
    },
    "CreateIntegrationWorkflowRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "WorkflowType",
        "IntegrationConfig",
        "ObjectTypeName",
        "RoleArn"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "WorkflowType":{
          "shape":"WorkflowType",
          "documentation":"<p>The type of workflow. The only supported value is APPFLOW_INTEGRATION.</p>"
        },
        "IntegrationConfig":{
          "shape":"IntegrationConfig",
          "documentation":"<p>Configuration data for integration workflow.</p>"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>"
        },
        "RoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role. Customer Profiles assumes this role to create resources on your behalf as part of workflow execution.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "CreateIntegrationWorkflowResponse":{
      "type":"structure",
      "required":[
        "WorkflowId",
        "Message"
      ],
      "members":{
        "WorkflowId":{
          "shape":"uuid",
          "documentation":"<p>Unique identifier for the workflow.</p>"
        },
        "Message":{
          "shape":"string1To255",
          "documentation":"<p>A message indicating create request was received.</p>"
        }
      }
    },
    "CreateProfileRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "AccountNumber":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>An account number that you have assigned to the customer.</p>"
        },
        "AdditionalInformation":{
          "shape":"sensitiveString1To1000",
          "documentation":"<p>Any additional information relevant to the customer’s profile.</p>"
        },
        "PartyType":{
          "shape":"PartyType",
          "documentation":"<p>The type of profile used to describe the customer.</p>"
        },
        "BusinessName":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The name of the customer’s business.</p>"
        },
        "FirstName":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s first name.</p>"
        },
        "MiddleName":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s middle name.</p>"
        },
        "LastName":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s last name.</p>"
        },
        "BirthDate":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s birth date. </p>"
        },
        "Gender":{
          "shape":"Gender",
          "documentation":"<p>The gender with which the customer identifies. </p>"
        },
        "PhoneNumber":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s phone number, which has not been specified as a mobile, home, or business number. </p>"
        },
        "MobilePhoneNumber":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s mobile phone number.</p>"
        },
        "HomePhoneNumber":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s home phone number.</p>"
        },
        "BusinessPhoneNumber":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s business phone number.</p>"
        },
        "EmailAddress":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s email address, which has not been specified as a personal or business address. </p>"
        },
        "PersonalEmailAddress":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s personal email address.</p>"
        },
        "BusinessEmailAddress":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s business email address.</p>"
        },
        "Address":{
          "shape":"Address",
          "documentation":"<p>A generic address associated with the customer that is not mailing, shipping, or billing.</p>"
        },
        "ShippingAddress":{
          "shape":"Address",
          "documentation":"<p>The customer’s shipping address.</p>"
        },
        "MailingAddress":{
          "shape":"Address",
          "documentation":"<p>The customer’s mailing address.</p>"
        },
        "BillingAddress":{
          "shape":"Address",
          "documentation":"<p>The customer’s billing address.</p>"
        },
        "Attributes":{
          "shape":"Attributes",
          "documentation":"<p>A key value pair of attributes of a customer profile.</p>"
        },
        "PartyTypeString":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>An alternative to <code>PartyType</code> which accepts any string as input.</p>"
        },
        "GenderString":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>An alternative to <code>Gender</code> which accepts any string as input.</p>"
        },
        "ProfileType":{
          "shape":"ProfileType",
          "documentation":"<p>The type of the profile.</p>"
        },
        "EngagementPreferences":{
          "shape":"EngagementPreferences",
          "documentation":"<p>Object that defines the preferred methods of engagement, per channel.</p>"
        }
      }
    },
    "CreateProfileResponse":{
      "type":"structure",
      "required":["ProfileId"],
      "members":{
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of a customer profile.</p>"
        }
      }
    },
    "CreateSegmentDefinitionRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "SegmentDefinitionName",
        "DisplayName",
        "SegmentGroups"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "SegmentDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the segment definition.</p>",
          "location":"uri",
          "locationName":"SegmentDefinitionName"
        },
        "DisplayName":{
          "shape":"string1To255",
          "documentation":"<p>The display name of the segment definition.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the segment definition.</p>"
        },
        "SegmentGroups":{
          "shape":"SegmentGroup",
          "documentation":"<p>Specifies the base segments and dimensions for a segment definition along with their respective relationship.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "CreateSegmentDefinitionResponse":{
      "type":"structure",
      "required":["SegmentDefinitionName"],
      "members":{
        "SegmentDefinitionName":{
          "shape":"name",
          "documentation":"<p>The name of the segment definition.</p>",
          "locationName":"SegmentDefinitionName"
        },
        "DisplayName":{
          "shape":"string1To255",
          "documentation":"<p>The display name of the segment definition.</p>",
          "locationName":"DisplayName"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the segment definition.</p>",
          "locationName":"Description"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the segment definition was created.</p>",
          "locationName":"CreatedAt"
        },
        "SegmentDefinitionArn":{
          "shape":"SegmentDefinitionArn",
          "documentation":"<p>The arn of the segment definition.</p>",
          "locationName":"SegmentDefinitionArn"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>",
          "locationName":"Tags"
        }
      }
    },
    "CreateSegmentEstimateRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "SegmentQuery"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "SegmentQuery":{
          "shape":"SegmentGroupStructure",
          "documentation":"<p>The segment query for calculating a segment estimate.</p>"
        }
      }
    },
    "CreateSegmentEstimateResponse":{
      "type":"structure",
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "EstimateId":{
          "shape":"string1To255",
          "documentation":"<p>A unique identifier for the resource. The value can be passed to <code>GetSegmentEstimate</code> to retrieve the result of segment estimate status.</p>"
        },
        "StatusCode":{
          "shape":"StatusCode",
          "documentation":"<p>The status code for the response.</p>",
          "location":"statusCode"
        }
      }
    },
    "CreateSegmentSnapshotRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "SegmentDefinitionName",
        "DataFormat"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "SegmentDefinitionName":{
          "shape":"name",
          "documentation":"<p>The name of the segment definition used in this snapshot request.</p>",
          "location":"uri",
          "locationName":"SegmentDefinitionName"
        },
        "DataFormat":{
          "shape":"DataFormat",
          "documentation":"<p>The format in which the segment will be exported.</p>"
        },
        "EncryptionKey":{
          "shape":"encryptionKey",
          "documentation":"<p>The Amazon Resource Name (ARN) of the KMS key used to encrypt the exported segment.</p>"
        },
        "RoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role that allows Customer Profiles service principal to assume the role for conducting KMS and S3 operations.</p>"
        },
        "DestinationUri":{
          "shape":"string1To255",
          "documentation":"<p>The destination to which the segment will be exported. This field must be provided if the request is not submitted from the Amazon Connect Admin Website.</p>"
        }
      }
    },
    "CreateSegmentSnapshotResponse":{
      "type":"structure",
      "required":["SnapshotId"],
      "members":{
        "SnapshotId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of the segment snapshot.</p>"
        }
      }
    },
    "CreateUploadJobRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "DisplayName",
        "Fields",
        "UniqueKey"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain. Domain should be exists for the upload job to be created. </p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "DisplayName":{
          "shape":"string1To255",
          "documentation":"<p>The unique name of the upload job. Could be a file name to identify the upload job.</p>"
        },
        "Fields":{
          "shape":"FieldMap",
          "documentation":"<p>The mapping between CSV Columns and Profile Object attributes. A map of the name and ObjectType field.</p>"
        },
        "UniqueKey":{
          "shape":"text",
          "documentation":"<p>The unique key columns for de-duping the profiles used to map data to the profile. </p>"
        },
        "DataExpiry":{
          "shape":"expirationDaysInteger",
          "documentation":"<p>The expiry duration for the profiles ingested with the job. If not provided, the system default of 2 weeks is used. </p>"
        }
      }
    },
    "CreateUploadJobResponse":{
      "type":"structure",
      "required":["JobId"],
      "members":{
        "JobId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier for the created upload job. </p>",
          "locationName":"JobId"
        }
      }
    },
    "CustomAttributes":{
      "type":"map",
      "key":{"shape":"typeName"},
      "value":{"shape":"AttributeDimension"}
    },
    "DataFormat":{
      "type":"string",
      "enum":[
        "CSV",
        "JSONL",
        "ORC"
      ]
    },
    "DataPullMode":{
      "type":"string",
      "enum":[
        "Incremental",
        "Complete"
      ]
    },
    "Date":{"type":"timestamp"},
    "DateDimension":{
      "type":"structure",
      "required":[
        "DimensionType",
        "Values"
      ],
      "members":{
        "DimensionType":{
          "shape":"DateDimensionType",
          "documentation":"<p>The action to segment with.</p>",
          "locationName":"DimensionType"
        },
        "Values":{
          "shape":"DateValues",
          "documentation":"<p>The values to apply the DimensionType on.</p>",
          "locationName":"Values"
        }
      },
      "documentation":"<p>Object that segments on various Customer Profile's date fields.</p>"
    },
    "DateDimensionType":{
      "type":"string",
      "enum":[
        "BEFORE",
        "AFTER",
        "BETWEEN",
        "NOT_BETWEEN",
        "ON"
      ]
    },
    "DateValues":{
      "type":"list",
      "member":{"shape":"String"},
      "max":50,
      "min":1
    },
    "DatetimeTypeFieldName":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "DeleteCalculatedAttributeDefinitionRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "CalculatedAttributeName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>",
          "location":"uri",
          "locationName":"CalculatedAttributeName"
        }
      }
    },
    "DeleteCalculatedAttributeDefinitionResponse":{
      "type":"structure",
      "members":{}
    },
    "DeleteDomainLayoutRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "LayoutDefinitionName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "LayoutDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the layout.</p>",
          "location":"uri",
          "locationName":"LayoutDefinitionName"
        }
      }
    },
    "DeleteDomainLayoutResponse":{
      "type":"structure",
      "required":["Message"],
      "members":{
        "Message":{
          "shape":"message",
          "documentation":"<p>A message that indicates the delete request is done.</p>"
        }
      }
    },
    "DeleteDomainRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        }
      }
    },
    "DeleteDomainResponse":{
      "type":"structure",
      "required":["Message"],
      "members":{
        "Message":{
          "shape":"message",
          "documentation":"<p>A message that indicates the delete request is done.</p>"
        }
      }
    },
    "DeleteEventStreamRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "EventStreamName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "EventStreamName":{
          "shape":"name",
          "documentation":"<p>The name of the event stream</p>",
          "location":"uri",
          "locationName":"EventStreamName"
        }
      }
    },
    "DeleteEventStreamResponse":{
      "type":"structure",
      "members":{}
    },
    "DeleteEventTriggerRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "EventTriggerName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "EventTriggerName":{
          "shape":"name",
          "documentation":"<p>The unique name of the event trigger.</p>",
          "location":"uri",
          "locationName":"EventTriggerName"
        }
      }
    },
    "DeleteEventTriggerResponse":{
      "type":"structure",
      "required":["Message"],
      "members":{
        "Message":{
          "shape":"message",
          "documentation":"<p>A message that indicates the delete request is done.</p>"
        }
      }
    },
    "DeleteIntegrationRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "Uri"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "Uri":{
          "shape":"string1To255",
          "documentation":"<p>The URI of the S3 bucket or any other type of data source.</p>"
        }
      }
    },
    "DeleteIntegrationResponse":{
      "type":"structure",
      "required":["Message"],
      "members":{
        "Message":{
          "shape":"message",
          "documentation":"<p>A message that indicates the delete request is done.</p>"
        }
      }
    },
    "DeleteProfileKeyRequest":{
      "type":"structure",
      "required":[
        "ProfileId",
        "KeyName",
        "Values",
        "DomainName"
      ],
      "members":{
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of a customer profile.</p>"
        },
        "KeyName":{
          "shape":"name",
          "documentation":"<p>A searchable identifier of a customer profile.</p>"
        },
        "Values":{
          "shape":"requestValueList",
          "documentation":"<p>A list of key values.</p>"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        }
      }
    },
    "DeleteProfileKeyResponse":{
      "type":"structure",
      "members":{
        "Message":{
          "shape":"message",
          "documentation":"<p>A message that indicates the delete request is done.</p>"
        }
      }
    },
    "DeleteProfileObjectRequest":{
      "type":"structure",
      "required":[
        "ProfileId",
        "ProfileObjectUniqueKey",
        "ObjectTypeName",
        "DomainName"
      ],
      "members":{
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of a customer profile.</p>"
        },
        "ProfileObjectUniqueKey":{
          "shape":"string1To255",
          "documentation":"<p>The unique identifier of the profile object generated by the service.</p>"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        }
      }
    },
    "DeleteProfileObjectResponse":{
      "type":"structure",
      "members":{
        "Message":{
          "shape":"message",
          "documentation":"<p>A message that indicates the delete request is done.</p>"
        }
      }
    },
    "DeleteProfileObjectTypeRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "ObjectTypeName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>",
          "location":"uri",
          "locationName":"ObjectTypeName"
        }
      }
    },
    "DeleteProfileObjectTypeResponse":{
      "type":"structure",
      "required":["Message"],
      "members":{
        "Message":{
          "shape":"message",
          "documentation":"<p>A message that indicates the delete request is done.</p>"
        }
      }
    },
    "DeleteProfileRequest":{
      "type":"structure",
      "required":[
        "ProfileId",
        "DomainName"
      ],
      "members":{
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of a customer profile.</p>"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        }
      }
    },
    "DeleteProfileResponse":{
      "type":"structure",
      "members":{
        "Message":{
          "shape":"message",
          "documentation":"<p>A message that indicates the delete request is done.</p>"
        }
      }
    },
    "DeleteSegmentDefinitionRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "SegmentDefinitionName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "SegmentDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the segment definition.</p>",
          "location":"uri",
          "locationName":"SegmentDefinitionName"
        }
      }
    },
    "DeleteSegmentDefinitionResponse":{
      "type":"structure",
      "members":{
        "Message":{
          "shape":"string1To1000",
          "documentation":"<p>A message that indicates the delete request is done.</p>",
          "locationName":"Message"
        }
      }
    },
    "DeleteWorkflowRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "WorkflowId"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "WorkflowId":{
          "shape":"string1To255",
          "documentation":"<p>Unique identifier for the workflow.</p>",
          "location":"uri",
          "locationName":"WorkflowId"
        }
      }
    },
    "DeleteWorkflowResponse":{
      "type":"structure",
      "members":{}
    },
    "DestinationField":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "DestinationSummary":{
      "type":"structure",
      "required":[
        "Uri",
        "Status"
      ],
      "members":{
        "Uri":{
          "shape":"string1To255",
          "documentation":"<p>The StreamARN of the destination to deliver profile events to. For example, arn:aws:kinesis:region:account-id:stream/stream-name.</p>"
        },
        "Status":{
          "shape":"EventStreamDestinationStatus",
          "documentation":"<p>The status of enabling the Kinesis stream as a destination for export.</p>"
        },
        "UnhealthySince":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp when the status last changed to <code>UNHEALHY</code>.</p>"
        }
      },
      "documentation":"<p>Summary information about the Kinesis data stream</p>"
    },
    "DetectProfileObjectTypeRequest":{
      "type":"structure",
      "required":[
        "Objects",
        "DomainName"
      ],
      "members":{
        "Objects":{
          "shape":"Objects",
          "documentation":"<p>A string that is serialized from a JSON object.</p>"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        }
      }
    },
    "DetectProfileObjectTypeResponse":{
      "type":"structure",
      "members":{
        "DetectedProfileObjectTypes":{
          "shape":"DetectedProfileObjectTypes",
          "documentation":"<p>Detected <code>ProfileObjectType</code> mappings from given objects. A maximum of one mapping is supported.</p>"
        }
      }
    },
    "DetectedProfileObjectType":{
      "type":"structure",
      "members":{
        "SourceLastUpdatedTimestampFormat":{
          "shape":"string1To255",
          "documentation":"<p>The format of <code>sourceLastUpdatedTimestamp</code> that was detected in fields.</p>"
        },
        "Fields":{
          "shape":"FieldMap",
          "documentation":"<p>A map of the name and the <code>ObjectType</code> field.</p>"
        },
        "Keys":{
          "shape":"KeyMap",
          "documentation":"<p>A list of unique keys that can be used to map data to a profile.</p>"
        }
      },
      "documentation":"<p>Contains <code>ProfileObjectType</code> mapping information from the model.</p>"
    },
    "DetectedProfileObjectTypes":{
      "type":"list",
      "member":{"shape":"DetectedProfileObjectType"}
    },
    "Dimension":{
      "type":"structure",
      "members":{
        "ProfileAttributes":{
          "shape":"ProfileAttributes",
          "documentation":"<p>Object that holds the profile attributes to segment on.</p>",
          "locationName":"ProfileAttributes"
        },
        "CalculatedAttributes":{
          "shape":"CalculatedCustomAttributes",
          "documentation":"<p>Object that holds the calculated attributes to segment on.</p>",
          "locationName":"CalculatedAttributes"
        }
      },
      "documentation":"<p>Object that holds what profile and calculated attributes to segment on.</p>",
      "union":true
    },
    "DimensionList":{
      "type":"list",
      "member":{"shape":"Dimension"}
    },
    "DomainList":{
      "type":"list",
      "member":{"shape":"ListDomainItem"}
    },
    "DomainStats":{
      "type":"structure",
      "members":{
        "ProfileCount":{
          "shape":"long",
          "documentation":"<p>The total number of profiles currently in the domain.</p>"
        },
        "MeteringProfileCount":{
          "shape":"long",
          "documentation":"<p>The number of profiles that you are currently paying for in the domain. If you have more than 100 objects associated with a single profile, that profile counts as two profiles. If you have more than 200 objects, that profile counts as three, and so on.</p>"
        },
        "ObjectCount":{
          "shape":"long",
          "documentation":"<p>The total number of objects in domain.</p>"
        },
        "TotalSize":{
          "shape":"long",
          "documentation":"<p>The total size, in bytes, of all objects in the domain.</p>"
        }
      },
      "documentation":"<p>Usage-specific statistics about the domain.</p>"
    },
    "Double":{"type":"double"},
    "Double0To1":{
      "type":"double",
      "max":1.0,
      "min":0.0
    },
    "EmailList":{
      "type":"list",
      "member":{"shape":"string1To255"},
      "max":3,
      "min":1
    },
    "EmailPreferenceList":{
      "type":"list",
      "member":{"shape":"ContactPreference"}
    },
    "End":{"type":"integer"},
    "EngagementPreferences":{
      "type":"structure",
      "members":{
        "Phone":{
          "shape":"PhonePreferenceList",
          "documentation":"<p>A list of phone-related contact preferences</p>"
        },
        "Email":{
          "shape":"EmailPreferenceList",
          "documentation":"<p>A list of email-related contact preferences</p>"
        }
      },
      "documentation":"<p>Object that defines users preferred methods of engagement.</p>",
      "sensitive":true
    },
    "EstimateStatus":{
      "type":"string",
      "enum":[
        "RUNNING",
        "SUCCEEDED",
        "FAILED"
      ]
    },
    "EventStreamDestinationDetails":{
      "type":"structure",
      "required":[
        "Uri",
        "Status"
      ],
      "members":{
        "Uri":{
          "shape":"string1To255",
          "documentation":"<p>The StreamARN of the destination to deliver profile events to. For example, arn:aws:kinesis:region:account-id:stream/stream-name.</p>"
        },
        "Status":{
          "shape":"EventStreamDestinationStatus",
          "documentation":"<p>The status of enabling the Kinesis stream as a destination for export.</p>"
        },
        "UnhealthySince":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp when the status last changed to <code>UNHEALHY</code>.</p>"
        },
        "Message":{
          "shape":"string1To1000",
          "documentation":"<p>The human-readable string that corresponds to the error or success while enabling the streaming destination.</p>"
        }
      },
      "documentation":"<p>Details of the destination being used for the EventStream.</p>"
    },
    "EventStreamDestinationStatus":{
      "type":"string",
      "enum":[
        "HEALTHY",
        "UNHEALTHY"
      ]
    },
    "EventStreamState":{
      "type":"string",
      "enum":[
        "RUNNING",
        "STOPPED"
      ]
    },
    "EventStreamSummary":{
      "type":"structure",
      "required":[
        "DomainName",
        "EventStreamName",
        "EventStreamArn",
        "State"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "EventStreamName":{
          "shape":"name",
          "documentation":"<p>The name of the event stream.</p>"
        },
        "EventStreamArn":{
          "shape":"string1To255",
          "documentation":"<p>A unique identifier for the event stream.</p>"
        },
        "State":{
          "shape":"EventStreamState",
          "documentation":"<p>The operational state of destination stream for export.</p>"
        },
        "StoppedSince":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp when the <code>State</code> changed to <code>STOPPED</code>.</p>"
        },
        "DestinationSummary":{
          "shape":"DestinationSummary",
          "documentation":"<p>Summary information about the Kinesis data stream.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      },
      "documentation":"<p>An instance of EventStream in a list of EventStreams.</p>"
    },
    "EventStreamSummaryList":{
      "type":"list",
      "member":{"shape":"EventStreamSummary"}
    },
    "EventTriggerCondition":{
      "type":"structure",
      "required":[
        "EventTriggerDimensions",
        "LogicalOperator"
      ],
      "members":{
        "EventTriggerDimensions":{
          "shape":"EventTriggerDimensions",
          "documentation":"<p>A list of dimensions to be evaluated for the event.</p>"
        },
        "LogicalOperator":{
          "shape":"EventTriggerLogicalOperator",
          "documentation":"<p>The operator used to combine multiple dimensions.</p>"
        }
      },
      "documentation":"<p>Specifies the circumstances under which the event should trigger the destination.</p>"
    },
    "EventTriggerConditions":{
      "type":"list",
      "member":{"shape":"EventTriggerCondition"},
      "max":5,
      "min":1,
      "sensitive":true
    },
    "EventTriggerDimension":{
      "type":"structure",
      "required":["ObjectAttributes"],
      "members":{
        "ObjectAttributes":{
          "shape":"ObjectAttributes",
          "documentation":"<p>A list of object attributes to be evaluated.</p>"
        }
      },
      "documentation":"<p>A specific event dimension to be assessed.</p>"
    },
    "EventTriggerDimensions":{
      "type":"list",
      "member":{"shape":"EventTriggerDimension"},
      "max":10,
      "min":1
    },
    "EventTriggerLimits":{
      "type":"structure",
      "members":{
        "EventExpiration":{
          "shape":"optionalLong",
          "documentation":"<p>In milliseconds. Specifies that an event will only trigger the destination if it is processed within a certain latency period.</p>"
        },
        "Periods":{
          "shape":"Periods",
          "documentation":"<p>A list of time periods during which the limits apply.</p>"
        }
      },
      "documentation":"<p>Defines limits controlling whether an event triggers the destination, based on ingestion latency and the number of invocations per profile over specific time periods.</p>"
    },
    "EventTriggerLogicalOperator":{
      "type":"string",
      "enum":[
        "ANY",
        "ALL",
        "NONE"
      ]
    },
    "EventTriggerNames":{
      "type":"list",
      "member":{"shape":"name"},
      "max":1,
      "min":1
    },
    "EventTriggerSummaryItem":{
      "type":"structure",
      "members":{
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the object type.</p>"
        },
        "EventTriggerName":{
          "shape":"name",
          "documentation":"<p>The unique name of the event trigger.</p>"
        },
        "Description":{
          "shape":"text",
          "documentation":"<p>The description of the event trigger.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the event trigger was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the event trigger was most recently updated.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>An array of key-value pairs to apply to this resource.</p>"
        }
      },
      "documentation":"<p>The summary of the event trigger.</p>"
    },
    "EventTriggerSummaryList":{
      "type":"list",
      "member":{"shape":"EventTriggerSummaryItem"},
      "sensitive":true
    },
    "EventTriggerValues":{
      "type":"list",
      "member":{"shape":"string1To255"},
      "max":10,
      "min":1
    },
    "ExportingConfig":{
      "type":"structure",
      "members":{
        "S3Exporting":{
          "shape":"S3ExportingConfig",
          "documentation":"<p>The S3 location where Identity Resolution Jobs write result files.</p>"
        }
      },
      "documentation":"<p>Configuration information about the S3 bucket where Identity Resolution Jobs writes result files. </p> <note> <p>You need to give Customer Profiles service principal write permission to your S3 bucket. Otherwise, you'll get an exception in the API response. For an example policy, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/cross-service-confused-deputy-prevention.html#customer-profiles-cross-service\">Amazon Connect Customer Profiles cross-service confused deputy prevention</a>. </p> </note>"
    },
    "ExportingLocation":{
      "type":"structure",
      "members":{
        "S3Exporting":{
          "shape":"S3ExportingLocation",
          "documentation":"<p>Information about the S3 location where Identity Resolution Jobs write result files.</p>"
        }
      },
      "documentation":"<p>The S3 location where Identity Resolution Jobs write result files.</p>"
    },
    "ExtraLengthValueProfileDimension":{
      "type":"structure",
      "required":[
        "DimensionType",
        "Values"
      ],
      "members":{
        "DimensionType":{
          "shape":"StringDimensionType",
          "documentation":"<p>The action to segment with.</p>",
          "locationName":"DimensionType"
        },
        "Values":{
          "shape":"ExtraLengthValues",
          "documentation":"<p>The values to apply the DimensionType on.</p>",
          "locationName":"Values"
        }
      },
      "documentation":"<p>Object that segments on various Customer profile's fields that are larger than normal.</p>"
    },
    "ExtraLengthValues":{
      "type":"list",
      "member":{"shape":"string1To1000"},
      "max":50,
      "min":1
    },
    "Failures":{
      "type":"list",
      "member":{"shape":"ProfileQueryFailures"}
    },
    "FieldContentType":{
      "type":"string",
      "enum":[
        "STRING",
        "NUMBER",
        "PHONE_NUMBER",
        "EMAIL_ADDRESS",
        "NAME"
      ]
    },
    "FieldMap":{
      "type":"map",
      "key":{"shape":"fieldName"},
      "value":{"shape":"ObjectTypeField"},
      "sensitive":true
    },
    "FieldNameList":{
      "type":"list",
      "member":{"shape":"name"}
    },
    "FieldSourceProfileIds":{
      "type":"structure",
      "members":{
        "AccountNumber":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the account number field to be merged. </p>"
        },
        "AdditionalInformation":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the additional information field to be merged.</p>"
        },
        "PartyType":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the party type field to be merged.</p>"
        },
        "BusinessName":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the business name field to be merged.</p>"
        },
        "FirstName":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the first name field to be merged.</p>"
        },
        "MiddleName":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the middle name field to be merged.</p>"
        },
        "LastName":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the last name field to be merged.</p>"
        },
        "BirthDate":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the birthdate field to be merged.</p>"
        },
        "Gender":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the gender field to be merged.</p>"
        },
        "PhoneNumber":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the phone number field to be merged.</p>"
        },
        "MobilePhoneNumber":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the mobile phone number field to be merged.</p>"
        },
        "HomePhoneNumber":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the home phone number field to be merged.</p>"
        },
        "BusinessPhoneNumber":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the business phone number field to be merged.</p>"
        },
        "EmailAddress":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the email address field to be merged.</p>"
        },
        "PersonalEmailAddress":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the personal email address field to be merged.</p>"
        },
        "BusinessEmailAddress":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the party type field to be merged.</p>"
        },
        "Address":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the party type field to be merged.</p>"
        },
        "ShippingAddress":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the shipping address field to be merged.</p>"
        },
        "MailingAddress":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the mailing address field to be merged.</p>"
        },
        "BillingAddress":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the billing type field to be merged.</p>"
        },
        "Attributes":{
          "shape":"AttributeSourceIdMap",
          "documentation":"<p>A unique identifier for the attributes field to be merged.</p>"
        },
        "ProfileType":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the profile type field to be merged.</p>"
        },
        "EngagementPreferences":{
          "shape":"uuid",
          "documentation":"<p>A unique identifier for the engagement preferences field to be merged.</p>"
        }
      },
      "documentation":"<p>A duplicate customer profile that is to be merged into a main profile. </p>"
    },
    "Filter":{
      "type":"structure",
      "required":[
        "Include",
        "Groups"
      ],
      "members":{
        "Include":{
          "shape":"Include",
          "documentation":"<p>Define whether to include or exclude objects for Calculated Attributed calculation that fit the filter groups criteria.</p>"
        },
        "Groups":{
          "shape":"GroupList",
          "documentation":"<p>Holds the list of Filter groups within the Filter definition.</p>"
        }
      },
      "documentation":"<p>Defines how to filter the objects coming in for calculated attributes.</p>"
    },
    "FilterAttributeDimension":{
      "type":"structure",
      "required":[
        "DimensionType",
        "Values"
      ],
      "members":{
        "DimensionType":{
          "shape":"FilterDimensionType",
          "documentation":"<p>The action to filter with.</p>"
        },
        "Values":{
          "shape":"ValueList",
          "documentation":"<p>The values to apply the DimensionType on.</p>"
        }
      },
      "documentation":"<p>Object that defines how to filter the incoming objects for the calculated attribute.</p>"
    },
    "FilterDimension":{
      "type":"structure",
      "required":["Attributes"],
      "members":{
        "Attributes":{
          "shape":"AttributeMap",
          "documentation":"<p>Is the attribute within the FilterDimension map</p>"
        }
      },
      "documentation":"<p>Contains the map of attribute names to attribute dimensions.</p>"
    },
    "FilterDimensionList":{
      "type":"list",
      "member":{"shape":"FilterDimension"},
      "max":10,
      "min":1
    },
    "FilterDimensionType":{
      "type":"string",
      "enum":[
        "INCLUSIVE",
        "EXCLUSIVE",
        "CONTAINS",
        "BEGINS_WITH",
        "ENDS_WITH",
        "BEFORE",
        "AFTER",
        "BETWEEN",
        "NOT_BETWEEN",
        "ON",
        "GREATER_THAN",
        "LESS_THAN",
        "GREATER_THAN_OR_EQUAL",
        "LESS_THAN_OR_EQUAL",
        "EQUAL"
      ]
    },
    "FilterGroup":{
      "type":"structure",
      "required":[
        "Type",
        "Dimensions"
      ],
      "members":{
        "Type":{
          "shape":"Type",
          "documentation":"<p>The type of logical relationship between the dimensions of the Filter group.</p>"
        },
        "Dimensions":{
          "shape":"FilterDimensionList",
          "documentation":"<p>Object that holds the attributes to filter on.</p>"
        }
      },
      "documentation":"<p>Object that holds the dimensions to filter on.</p>"
    },
    "FlowDefinition":{
      "type":"structure",
      "required":[
        "FlowName",
        "KmsArn",
        "SourceFlowConfig",
        "Tasks",
        "TriggerConfig"
      ],
      "members":{
        "Description":{
          "shape":"FlowDescription",
          "documentation":"<p>A description of the flow you want to create.</p>"
        },
        "FlowName":{
          "shape":"FlowName",
          "documentation":"<p>The specified name of the flow. Use underscores (_) or hyphens (-) only. Spaces are not allowed.</p>"
        },
        "KmsArn":{
          "shape":"KmsArn",
          "documentation":"<p>The Amazon Resource Name of the AWS Key Management Service (KMS) key you provide for encryption.</p>"
        },
        "SourceFlowConfig":{
          "shape":"SourceFlowConfig",
          "documentation":"<p>The configuration that controls how Customer Profiles retrieves data from the source.</p>"
        },
        "Tasks":{
          "shape":"Tasks",
          "documentation":"<p>A list of tasks that Customer Profiles performs while transferring the data in the flow run.</p>"
        },
        "TriggerConfig":{
          "shape":"TriggerConfig",
          "documentation":"<p>The trigger settings that determine how and when the flow runs.</p>"
        }
      },
      "documentation":"<p>The configurations that control how Customer Profiles retrieves data from the source, Amazon AppFlow. Customer Profiles uses this information to create an AppFlow flow on behalf of customers.</p>",
      "sensitive":true
    },
    "FlowDescription":{
      "type":"string",
      "max":2048,
      "pattern":"[\\w!@#\\-.?,\\s]*"
    },
    "FlowName":{
      "type":"string",
      "max":256,
      "pattern":"[a-zA-Z0-9][\\w!@#.-]+"
    },
    "FoundByKeyValue":{
      "type":"structure",
      "members":{
        "KeyName":{
          "shape":"name",
          "documentation":"<p>A searchable identifier of a customer profile.</p>"
        },
        "Values":{
          "shape":"requestValueList",
          "documentation":"<p>A list of key values.</p>"
        }
      },
      "documentation":"<p>A data type pair that consists of a <code>KeyName</code> and <code>Values</code> list that were used to find a profile returned in response to a <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html\">SearchProfiles</a> request. </p>"
    },
    "Gender":{
      "type":"string",
      "deprecated":true,
      "enum":[
        "MALE",
        "FEMALE",
        "UNSPECIFIED"
      ],
      "sensitive":true
    },
    "GetAutoMergingPreviewRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "Consolidation",
        "ConflictResolution"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "Consolidation":{
          "shape":"Consolidation",
          "documentation":"<p>A list of matching attributes that represent matching criteria.</p>"
        },
        "ConflictResolution":{
          "shape":"ConflictResolution",
          "documentation":"<p>How the auto-merging process should resolve conflicts between different profiles.</p>"
        },
        "MinAllowedConfidenceScoreForMerging":{
          "shape":"Double0To1",
          "documentation":"<p>Minimum confidence score required for profiles within a matching group to be merged during the auto-merge process.</p>"
        }
      }
    },
    "GetAutoMergingPreviewResponse":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "NumberOfMatchesInSample":{
          "shape":"long",
          "documentation":"<p>The number of match groups in the domain that have been reviewed in this preview dry run.</p>"
        },
        "NumberOfProfilesInSample":{
          "shape":"long",
          "documentation":"<p>The number of profiles found in this preview dry run.</p>"
        },
        "NumberOfProfilesWillBeMerged":{
          "shape":"long",
          "documentation":"<p>The number of profiles that would be merged if this wasn't a preview dry run.</p>"
        }
      }
    },
    "GetCalculatedAttributeDefinitionRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "CalculatedAttributeName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>",
          "location":"uri",
          "locationName":"CalculatedAttributeName"
        }
      }
    },
    "GetCalculatedAttributeDefinitionResponse":{
      "type":"structure",
      "members":{
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the calculated attribute.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the calculated attribute.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the calculated attribute definition was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the calculated attribute definition was most recently edited.</p>"
        },
        "Statistic":{
          "shape":"Statistic",
          "documentation":"<p>The aggregation operation to perform for the calculated attribute.</p>"
        },
        "Filter":{
          "shape":"Filter",
          "documentation":"<p>The filter assigned to this calculated attribute definition.</p>"
        },
        "Conditions":{
          "shape":"Conditions",
          "documentation":"<p>The conditions including range, object count, and threshold for the calculated attribute.</p>"
        },
        "AttributeDetails":{
          "shape":"AttributeDetails",
          "documentation":"<p>Mathematical expression and a list of attribute items specified in that expression.</p>"
        },
        "UseHistoricalData":{
          "shape":"optionalBoolean",
          "documentation":"<p>Whether historical data ingested before the Calculated Attribute was created should be included in calculations.</p>"
        },
        "Status":{
          "shape":"ReadinessStatus",
          "documentation":"<p>Status of the Calculated Attribute creation (whether all historical data has been indexed).</p>"
        },
        "Readiness":{
          "shape":"Readiness",
          "documentation":"<p>Information indicating if the Calculated Attribute is ready for use by confirming all historical data has been processed and reflected.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "GetCalculatedAttributeForProfileRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "ProfileId",
        "CalculatedAttributeName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of a customer profile.</p>",
          "location":"uri",
          "locationName":"ProfileId"
        },
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>",
          "location":"uri",
          "locationName":"CalculatedAttributeName"
        }
      }
    },
    "GetCalculatedAttributeForProfileResponse":{
      "type":"structure",
      "members":{
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the calculated attribute.</p>"
        },
        "IsDataPartial":{
          "shape":"string1To255",
          "documentation":"<p>Indicates whether the calculated attribute’s value is based on partial data. If data is partial, it is set to true.</p>"
        },
        "Value":{
          "shape":"string1To255",
          "documentation":"<p>The value of the calculated attribute.</p>"
        },
        "LastObjectTimestamp":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of the newest object included in the calculated attribute calculation.</p>"
        }
      }
    },
    "GetDomainLayoutRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "LayoutDefinitionName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "LayoutDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the layout.</p>",
          "location":"uri",
          "locationName":"LayoutDefinitionName"
        }
      }
    },
    "GetDomainLayoutResponse":{
      "type":"structure",
      "required":[
        "LayoutDefinitionName",
        "Description",
        "DisplayName",
        "LayoutType",
        "Layout",
        "Version",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "members":{
        "LayoutDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the layout.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the layout</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the layout</p>"
        },
        "IsDefault":{
          "shape":"boolean",
          "documentation":"<p>If set to true for a layout, this layout will be used by default to view data. If set to false, then the layout will not be used by default, but it can be used to view data by explicitly selecting it in the console.</p>"
        },
        "LayoutType":{
          "shape":"LayoutType",
          "documentation":"<p>The type of layout that can be used to view data under a Customer Profiles domain.</p>"
        },
        "Layout":{
          "shape":"sensitiveString1To2000000",
          "documentation":"<p>A customizable layout that can be used to view data under a Customer Profiles domain.</p>"
        },
        "Version":{
          "shape":"string1To255",
          "documentation":"<p>The version used to create layout.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the layout was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the layout was most recently updated.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "GetDomainRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        }
      }
    },
    "GetDomainResponse":{
      "type":"structure",
      "required":[
        "DomainName",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "DefaultExpirationDays":{
          "shape":"expirationDaysInteger",
          "documentation":"<p>The default number of days until the data within the domain expires.</p>"
        },
        "DefaultEncryptionKey":{
          "shape":"encryptionKey",
          "documentation":"<p>The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.</p>"
        },
        "DeadLetterQueueUrl":{
          "shape":"sqsQueueUrl",
          "documentation":"<p>The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications.</p>"
        },
        "Stats":{
          "shape":"DomainStats",
          "documentation":"<p>Usage-specific statistics about the domain.</p>"
        },
        "Matching":{
          "shape":"MatchingResponse",
          "documentation":"<p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p>"
        },
        "RuleBasedMatching":{
          "shape":"RuleBasedMatchingResponse",
          "documentation":"<p>The process of matching duplicate profiles using the Rule-Based matching. If <code>RuleBasedMatching</code> = true, Amazon Connect Customer Profiles will start to match and merge your profiles according to your configuration in the <code>RuleBasedMatchingRequest</code>. You can use the <code>ListRuleBasedMatches</code> and <code>GetSimilarProfiles</code> API to return and review the results. Also, if you have configured <code>ExportingConfig</code> in the <code>RuleBasedMatchingRequest</code>, you can download the results from S3.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was most recently edited.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "GetEventStreamRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "EventStreamName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "EventStreamName":{
          "shape":"name",
          "documentation":"<p>The name of the event stream provided during create operations.</p>",
          "location":"uri",
          "locationName":"EventStreamName"
        }
      }
    },
    "GetEventStreamResponse":{
      "type":"structure",
      "required":[
        "DomainName",
        "EventStreamArn",
        "CreatedAt",
        "State",
        "DestinationDetails"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "EventStreamArn":{
          "shape":"string1To255",
          "documentation":"<p>A unique identifier for the event stream.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the export was created.</p>"
        },
        "State":{
          "shape":"EventStreamState",
          "documentation":"<p>The operational state of destination stream for export.</p>"
        },
        "StoppedSince":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp when the <code>State</code> changed to <code>STOPPED</code>.</p>"
        },
        "DestinationDetails":{
          "shape":"EventStreamDestinationDetails",
          "documentation":"<p>Details regarding the Kinesis stream.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "GetEventTriggerRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "EventTriggerName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "EventTriggerName":{
          "shape":"name",
          "documentation":"<p>The unique name of the event trigger.</p>",
          "location":"uri",
          "locationName":"EventTriggerName"
        }
      }
    },
    "GetEventTriggerResponse":{
      "type":"structure",
      "members":{
        "EventTriggerName":{
          "shape":"name",
          "documentation":"<p>The unique name of the event trigger.</p>"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the object type.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the event trigger.</p>"
        },
        "EventTriggerConditions":{
          "shape":"EventTriggerConditions",
          "documentation":"<p>A list of conditions that determine when an event should trigger the destination.</p>"
        },
        "SegmentFilter":{
          "shape":"name",
          "documentation":"<p>The destination is triggered only for profiles that meet the criteria of a segment definition.</p>"
        },
        "EventTriggerLimits":{
          "shape":"EventTriggerLimits",
          "documentation":"<p>Defines limits controlling whether an event triggers the destination, based on ingestion latency and the number of invocations per profile over specific time periods.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the event trigger was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the event trigger was most recently updated.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>An array of key-value pairs to apply to this resource.</p>"
        }
      }
    },
    "GetIdentityResolutionJobRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "JobId"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "JobId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of the Identity Resolution Job.</p>",
          "location":"uri",
          "locationName":"JobId"
        }
      }
    },
    "GetIdentityResolutionJobResponse":{
      "type":"structure",
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "JobId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of the Identity Resolution Job.</p>"
        },
        "Status":{
          "shape":"IdentityResolutionJobStatus",
          "documentation":"<p>The status of the Identity Resolution Job.</p> <ul> <li> <p> <code>PENDING</code>: The Identity Resolution Job is scheduled but has not started yet. If you turn off the Identity Resolution feature in your domain, jobs in the <code>PENDING</code> state are deleted.</p> </li> <li> <p> <code>PREPROCESSING</code>: The Identity Resolution Job is loading your data.</p> </li> <li> <p> <code>FIND_MATCHING</code>: The Identity Resolution Job is using the machine learning model to identify profiles that belong to the same matching group.</p> </li> <li> <p> <code>MERGING</code>: The Identity Resolution Job is merging duplicate profiles.</p> </li> <li> <p> <code>COMPLETED</code>: The Identity Resolution Job completed successfully.</p> </li> <li> <p> <code>PARTIAL_SUCCESS</code>: There's a system error and not all of the data is merged. The Identity Resolution Job writes a message indicating the source of the problem.</p> </li> <li> <p> <code>FAILED</code>: The Identity Resolution Job did not merge any data. It writes a message indicating the source of the problem.</p> </li> </ul>"
        },
        "Message":{
          "shape":"stringTo2048",
          "documentation":"<p>The error messages that are generated when the Identity Resolution Job runs.</p>"
        },
        "JobStartTime":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the Identity Resolution Job was started or will be started.</p>"
        },
        "JobEndTime":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the Identity Resolution Job was completed.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the Identity Resolution Job was most recently edited.</p>"
        },
        "JobExpirationTime":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the Identity Resolution Job will expire.</p>"
        },
        "AutoMerging":{
          "shape":"AutoMerging",
          "documentation":"<p>Configuration settings for how to perform the auto-merging of profiles.</p>"
        },
        "ExportingLocation":{
          "shape":"ExportingLocation",
          "documentation":"<p>The S3 location where the Identity Resolution Job writes result files.</p>"
        },
        "JobStats":{
          "shape":"JobStats",
          "documentation":"<p>Statistics about the Identity Resolution Job.</p>"
        }
      }
    },
    "GetIntegrationRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "Uri"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "Uri":{
          "shape":"string1To255",
          "documentation":"<p>The URI of the S3 bucket or any other type of data source.</p>"
        }
      }
    },
    "GetIntegrationResponse":{
      "type":"structure",
      "required":[
        "DomainName",
        "Uri",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "Uri":{
          "shape":"string1To255",
          "documentation":"<p>The URI of the S3 bucket or any other type of data source.</p>"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was most recently edited.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        },
        "ObjectTypeNames":{
          "shape":"ObjectTypeNames",
          "documentation":"<p>A map in which each key is an event type from an external application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code> (template) used to ingest the event. It supports the following event types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>, <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>, <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>, and <code>ShopifyUpdatedOrders</code>.</p>"
        },
        "WorkflowId":{
          "shape":"string1To255",
          "documentation":"<p>Unique identifier for the workflow.</p>"
        },
        "IsUnstructured":{
          "shape":"optionalBoolean",
          "documentation":"<p>Boolean that shows if the Flow that's associated with the Integration is created in Amazon Appflow, or with ObjectTypeName equals _unstructured via API/CLI in flowDefinition.</p>"
        },
        "RoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role. The Integration uses this role to make Customer Profiles requests on your behalf.</p>"
        },
        "EventTriggerNames":{
          "shape":"EventTriggerNames",
          "documentation":"<p>A list of unique names for active event triggers associated with the integration. This list would be empty if no Event Trigger is associated with the integration.</p>"
        }
      }
    },
    "GetMatchesRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of results to return per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        }
      }
    },
    "GetMatchesResponse":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"token",
          "documentation":"<p>If there are additional results, this is the token for the next set of results.</p>"
        },
        "MatchGenerationDate":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp this version of Match Result generated.</p>"
        },
        "PotentialMatches":{
          "shape":"matchesNumber",
          "documentation":"<p>The number of potential matches found.</p>"
        },
        "Matches":{
          "shape":"MatchesList",
          "documentation":"<p>The list of matched profiles for this instance.</p>"
        }
      }
    },
    "GetProfileObjectTypeRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "ObjectTypeName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>",
          "location":"uri",
          "locationName":"ObjectTypeName"
        }
      }
    },
    "GetProfileObjectTypeResponse":{
      "type":"structure",
      "required":[
        "ObjectTypeName",
        "Description"
      ],
      "members":{
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the profile object type.</p>"
        },
        "TemplateId":{
          "shape":"name",
          "documentation":"<p>A unique identifier for the object template.</p>"
        },
        "ExpirationDays":{
          "shape":"expirationDaysInteger",
          "documentation":"<p>The number of days until the data in the object expires.</p>"
        },
        "EncryptionKey":{
          "shape":"encryptionKey",
          "documentation":"<p>The customer-provided key to encrypt the profile object that will be created in this profile object type.</p>"
        },
        "AllowProfileCreation":{
          "shape":"boolean",
          "documentation":"<p>Indicates whether a profile should be created when data is received if one doesn’t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile.</p>"
        },
        "SourceLastUpdatedTimestampFormat":{
          "shape":"string1To255",
          "documentation":"<p>The format of your <code>sourceLastUpdatedTimestamp</code> that was previously set up.</p>"
        },
        "MaxAvailableProfileObjectCount":{
          "shape":"minSize0",
          "documentation":"<p>The amount of provisioned profile object max count available.</p>"
        },
        "MaxProfileObjectCount":{
          "shape":"minSize1",
          "documentation":"<p>The amount of profile object max count assigned to the object type.</p>"
        },
        "Fields":{
          "shape":"FieldMap",
          "documentation":"<p>A map of the name and ObjectType field.</p>"
        },
        "Keys":{
          "shape":"KeyMap",
          "documentation":"<p>A list of unique keys that can be used to map data to the profile.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was most recently edited.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "GetProfileObjectTypeTemplateRequest":{
      "type":"structure",
      "required":["TemplateId"],
      "members":{
        "TemplateId":{
          "shape":"name",
          "documentation":"<p>A unique identifier for the object template.</p>",
          "location":"uri",
          "locationName":"TemplateId"
        }
      }
    },
    "GetProfileObjectTypeTemplateResponse":{
      "type":"structure",
      "members":{
        "TemplateId":{
          "shape":"name",
          "documentation":"<p>A unique identifier for the object template.</p>"
        },
        "SourceName":{
          "shape":"name",
          "documentation":"<p>The name of the source of the object template.</p>"
        },
        "SourceObject":{
          "shape":"name",
          "documentation":"<p>The source of the object template.</p>"
        },
        "AllowProfileCreation":{
          "shape":"boolean",
          "documentation":"<p>Indicates whether a profile should be created when data is received if one doesn’t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile.</p>"
        },
        "SourceLastUpdatedTimestampFormat":{
          "shape":"string1To255",
          "documentation":"<p>The format of your <code>sourceLastUpdatedTimestamp</code> that was previously set up.</p>"
        },
        "Fields":{
          "shape":"FieldMap",
          "documentation":"<p>A map of the name and ObjectType field.</p>"
        },
        "Keys":{
          "shape":"KeyMap",
          "documentation":"<p>A list of unique keys that can be used to map data to the profile.</p>"
        }
      }
    },
    "GetSegmentDefinitionRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "SegmentDefinitionName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "SegmentDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the segment definition.</p>",
          "location":"uri",
          "locationName":"SegmentDefinitionName"
        }
      }
    },
    "GetSegmentDefinitionResponse":{
      "type":"structure",
      "required":["SegmentDefinitionArn"],
      "members":{
        "SegmentDefinitionName":{
          "shape":"name",
          "documentation":"<p>The name of the segment definition.</p>",
          "locationName":"SegmentDefinitionName"
        },
        "DisplayName":{
          "shape":"string1To255",
          "documentation":"<p>The display name of the segment definition.</p>",
          "locationName":"DisplayName"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the segment definition.</p>",
          "locationName":"Description"
        },
        "SegmentGroups":{
          "shape":"SegmentGroup",
          "documentation":"<p>The segment criteria associated with this definition.</p>",
          "locationName":"SegmentGroups"
        },
        "SegmentDefinitionArn":{
          "shape":"SegmentDefinitionArn",
          "documentation":"<p>The arn of the segment definition.</p>",
          "locationName":"SegmentDefinitionArn"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the segment definition was created.</p>",
          "locationName":"CreatedAt"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>",
          "locationName":"Tags"
        }
      }
    },
    "GetSegmentEstimateRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "EstimateId"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "EstimateId":{
          "shape":"string1To255",
          "documentation":"<p>The query Id passed by a previous <code>CreateSegmentEstimate</code> operation.</p>",
          "location":"uri",
          "locationName":"EstimateId"
        }
      }
    },
    "GetSegmentEstimateResponse":{
      "type":"structure",
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "EstimateId":{
          "shape":"string1To255",
          "documentation":"<p>The <code>QueryId</code> which is the same as the value passed in <code>QueryId</code>.</p>"
        },
        "Status":{
          "shape":"EstimateStatus",
          "documentation":"<p>The current status of the query.</p>"
        },
        "Estimate":{
          "shape":"string1To255",
          "documentation":"<p>The estimated number of profiles contained in the segment.</p>"
        },
        "Message":{
          "shape":"string1To255",
          "documentation":"<p>The error message if there is any error.</p>"
        },
        "StatusCode":{
          "shape":"StatusCode",
          "documentation":"<p>The status code of the segment estimate.</p>",
          "location":"statusCode"
        }
      }
    },
    "GetSegmentMembershipMessage":{"type":"string"},
    "GetSegmentMembershipRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "SegmentDefinitionName",
        "ProfileIds"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "SegmentDefinitionName":{
          "shape":"name",
          "documentation":"<p>The Id of the wanted segment. Needs to be a valid, and existing segment Id.</p>",
          "location":"uri",
          "locationName":"SegmentDefinitionName"
        },
        "ProfileIds":{
          "shape":"ProfileIds",
          "documentation":"<p>The list of profile IDs to query for.</p>",
          "locationName":"ProfileIds"
        }
      }
    },
    "GetSegmentMembershipResponse":{
      "type":"structure",
      "members":{
        "SegmentDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the segment definition.</p>",
          "locationName":"SegmentDefinitionName"
        },
        "Profiles":{
          "shape":"Profiles",
          "documentation":"<p>An array of maps where each contains a response per profile requested.</p>",
          "locationName":"Profiles"
        },
        "Failures":{
          "shape":"Failures",
          "documentation":"<p>An array of maps where each contains a response per profile failed for the request.</p>",
          "locationName":"Failures"
        }
      }
    },
    "GetSegmentMembershipStatus":{
      "type":"integer",
      "box":true
    },
    "GetSegmentSnapshotRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "SegmentDefinitionName",
        "SnapshotId"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique identifier of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "SegmentDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the segment definition.</p>",
          "location":"uri",
          "locationName":"SegmentDefinitionName"
        },
        "SnapshotId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of the segment snapshot.</p>",
          "location":"uri",
          "locationName":"SnapshotId"
        }
      }
    },
    "GetSegmentSnapshotResponse":{
      "type":"structure",
      "required":[
        "SnapshotId",
        "Status",
        "DataFormat"
      ],
      "members":{
        "SnapshotId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of the segment snapshot.</p>"
        },
        "Status":{
          "shape":"SegmentSnapshotStatus",
          "documentation":"<p>The status of the asynchronous job for exporting the segment snapshot.</p>"
        },
        "StatusMessage":{
          "shape":"string1To1000",
          "documentation":"<p>The status message of the asynchronous job for exporting the segment snapshot.</p>"
        },
        "DataFormat":{
          "shape":"DataFormat",
          "documentation":"<p>The format in which the segment will be exported.</p>"
        },
        "EncryptionKey":{
          "shape":"encryptionKey",
          "documentation":"<p>The Amazon Resource Name (ARN) of the KMS key used to encrypt the exported segment.</p>"
        },
        "RoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role that allows Customer Profiles service principal to assume the role for conducting KMS and S3 operations.</p>"
        },
        "DestinationUri":{
          "shape":"string1To255",
          "documentation":"<p>The destination to which the segment will be exported. This field must be provided if the request is not submitted from the Amazon Connect Admin Website.</p>"
        }
      }
    },
    "GetSimilarProfilesRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "MatchType",
        "SearchKey",
        "SearchValue"
      ],
      "members":{
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous <code>GetSimilarProfiles</code> API call.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of objects returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "MatchType":{
          "shape":"MatchType",
          "documentation":"<p>Specify the type of matching to get similar profiles for.</p>"
        },
        "SearchKey":{
          "shape":"string1To255",
          "documentation":"<p>The string indicating the search key to be used.</p>"
        },
        "SearchValue":{
          "shape":"string1To255",
          "documentation":"<p>The string based on <code>SearchKey</code> to be searched for similar profiles.</p>"
        }
      }
    },
    "GetSimilarProfilesResponse":{
      "type":"structure",
      "members":{
        "ProfileIds":{
          "shape":"ProfileIdList",
          "documentation":"<p>Set of <code>profileId</code>s that belong to the same matching group.</p>"
        },
        "MatchId":{
          "shape":"string1To255",
          "documentation":"<p>The string <code>matchId</code> that the similar profiles belong to.</p>"
        },
        "MatchType":{
          "shape":"MatchType",
          "documentation":"<p>Specify the type of matching to get similar profiles for.</p>"
        },
        "RuleLevel":{
          "shape":"RuleLevel",
          "documentation":"<p>The integer rule level that the profiles matched on.</p>"
        },
        "ConfidenceScore":{
          "shape":"Double",
          "documentation":"<p>It only has value when the <code>MatchType</code> is <code>ML_BASED_MATCHING</code>.A number between 0 and 1, where a higher score means higher similarity. Examining match confidence scores lets you distinguish between groups of similar records in which the system is highly confident (which you may decide to merge), groups of similar records about which the system is uncertain (which you may decide to have reviewed by a human), and groups of similar records that the system deems to be unlikely (which you may decide to reject). Given confidence scores vary as per the data input, it should not be used as an absolute measure of matching quality.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous <code>GetSimilarProfiles</code> API call.</p>"
        }
      }
    },
    "GetUploadJobPathRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "JobId"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain containing the upload job. </p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "JobId":{
          "shape":"name",
          "documentation":"<p>The unique identifier of the upload job to retrieve the upload path for. This is generated from the CreateUploadJob API. </p>",
          "location":"uri",
          "locationName":"JobId"
        }
      }
    },
    "GetUploadJobPathResponse":{
      "type":"structure",
      "required":["Url"],
      "members":{
        "Url":{
          "shape":"stringTo2048",
          "documentation":"<p>The pre-signed S3 URL for uploading the CSV file associated with the upload job. </p>",
          "locationName":"Url"
        },
        "ClientToken":{
          "shape":"text",
          "documentation":"<p>The plaintext data key used to encrypt the upload file. </p> <p>To persist to the pre-signed url, use the client token and MD5 client token as header. The required headers are as follows: </p> <ul> <li> <p>x-amz-server-side-encryption-customer-key: Client Token </p> </li> <li> <p>x-amz-server-side-encryption-customer-key-MD5: MD5 Client Token </p> </li> <li> <p>x-amz-server-side-encryption-customer-algorithm: AES256 </p> </li> </ul>",
          "locationName":"ClientToken"
        },
        "ValidUntil":{
          "shape":"timestamp",
          "documentation":"<p>The expiry timestamp for the pre-signed URL, after which the URL will no longer be valid. </p>",
          "locationName":"ValidUntil"
        }
      }
    },
    "GetUploadJobRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "JobId"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain containing the upload job. </p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "JobId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of the upload job to retrieve. </p>",
          "location":"uri",
          "locationName":"JobId"
        }
      }
    },
    "GetUploadJobResponse":{
      "type":"structure",
      "members":{
        "JobId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of the upload job. </p>",
          "locationName":"JobId"
        },
        "DisplayName":{
          "shape":"string1To255",
          "documentation":"<p>The unique name of the upload job. Could be a file name to identify the upload job. </p>",
          "locationName":"DisplayName"
        },
        "Status":{
          "shape":"UploadJobStatus",
          "documentation":"<p>The status describing the status for the upload job. The following are Valid Values: </p> <ul> <li> <p> <b>CREATED</b>: The upload job has been created, but has not started processing yet. </p> </li> <li> <p> <b>IN_PROGRESS</b>: The upload job is currently in progress, ingesting and processing the profile data. </p> </li> <li> <p> <b>PARTIALLY_SUCCEEDED</b>: The upload job has successfully completed the ingestion and processing of all profile data. </p> </li> <li> <p> <b>SUCCEEDED</b>: The upload job has successfully completed the ingestion and processing of all profile data. </p> </li> <li> <p> <b>FAILED</b>: The upload job has failed to complete. </p> </li> <li> <p> <b>STOPPED</b>: The upload job has been manually stopped or terminated before completion. </p> </li> </ul>",
          "locationName":"Status"
        },
        "StatusReason":{
          "shape":"StatusReason",
          "documentation":"<p>The reason for the current status of the upload job. Possible reasons: </p> <ul> <li> <p> <b>VALIDATION_FAILURE</b>: The upload job has encountered an error or issue and was unable to complete the profile data ingestion. </p> </li> <li> <p> <b>INTERNAL_FAILURE</b>: Failure caused from service side </p> </li> </ul>",
          "locationName":"StatusReason"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp when the upload job was created. </p>",
          "locationName":"CreatedAt"
        },
        "CompletedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp when the upload job was completed. </p>",
          "locationName":"CompletedAt"
        },
        "Fields":{
          "shape":"FieldMap",
          "documentation":"<p>The mapping between CSV Columns and Profile Object attributes for the upload job. </p>",
          "locationName":"Fields"
        },
        "UniqueKey":{
          "shape":"text",
          "documentation":"<p>The unique key columns used for de-duping the keys in the upload job. </p>",
          "locationName":"UniqueKey"
        },
        "ResultsSummary":{
          "shape":"ResultsSummary",
          "documentation":"<p>The summary of results for the upload job, including the number of updated, created, and failed records. </p>",
          "locationName":"ResultsSummary"
        },
        "DataExpiry":{
          "shape":"expirationDaysInteger",
          "documentation":"<p>The expiry duration for the profiles ingested with the upload job. </p>",
          "locationName":"DataExpiry"
        }
      }
    },
    "GetWorkflowRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "WorkflowId"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "WorkflowId":{
          "shape":"uuid",
          "documentation":"<p>Unique identifier for the workflow.</p>",
          "location":"uri",
          "locationName":"WorkflowId"
        }
      }
    },
    "GetWorkflowResponse":{
      "type":"structure",
      "members":{
        "WorkflowId":{
          "shape":"uuid",
          "documentation":"<p>Unique identifier for the workflow.</p>"
        },
        "WorkflowType":{
          "shape":"WorkflowType",
          "documentation":"<p>The type of workflow. The only supported value is APPFLOW_INTEGRATION.</p>"
        },
        "Status":{
          "shape":"Status",
          "documentation":"<p>Status of workflow execution.</p>"
        },
        "ErrorDescription":{
          "shape":"string1To255",
          "documentation":"<p>Workflow error messages during execution (if any).</p>"
        },
        "StartDate":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp that represents when workflow execution started.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp that represents when workflow execution last updated.</p>"
        },
        "Attributes":{
          "shape":"WorkflowAttributes",
          "documentation":"<p>Attributes provided for workflow execution.</p>"
        },
        "Metrics":{
          "shape":"WorkflowMetrics",
          "documentation":"<p>Workflow specific execution metrics.</p>"
        }
      }
    },
    "GetWorkflowStepsRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "WorkflowId"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "WorkflowId":{
          "shape":"uuid",
          "documentation":"<p>Unique identifier for the workflow.</p>",
          "location":"uri",
          "locationName":"WorkflowId"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of results to return per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        }
      }
    },
    "GetWorkflowStepsResponse":{
      "type":"structure",
      "members":{
        "WorkflowId":{
          "shape":"uuid",
          "documentation":"<p>Unique identifier for the workflow.</p>"
        },
        "WorkflowType":{
          "shape":"WorkflowType",
          "documentation":"<p>The type of workflow. The only supported value is APPFLOW_INTEGRATION.</p>"
        },
        "Items":{
          "shape":"WorkflowStepsList",
          "documentation":"<p>List containing workflow step details.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>If there are additional results, this is the token for the next set of results.</p>"
        }
      }
    },
    "Group":{
      "type":"structure",
      "members":{
        "Dimensions":{
          "shape":"DimensionList",
          "documentation":"<p>Defines the attributes to segment on.</p>",
          "locationName":"Dimensions"
        },
        "SourceSegments":{
          "shape":"SourceSegmentList",
          "documentation":"<p>Defines the starting source of data.</p>",
          "locationName":"SourceSegments"
        },
        "SourceType":{
          "shape":"IncludeOptions",
          "documentation":"<p>Defines how to interact with the source data.</p>",
          "locationName":"SourceType"
        },
        "Type":{
          "shape":"IncludeOptions",
          "documentation":"<p>Defines how to interact with the profiles found in the current filtering.</p>",
          "locationName":"Type"
        }
      },
      "documentation":"<p>Contains dimensions that determine what to segment on.</p>"
    },
    "GroupList":{
      "type":"list",
      "member":{"shape":"FilterGroup"},
      "max":2,
      "min":1
    },
    "IdentityResolutionJob":{
      "type":"structure",
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "JobId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of the Identity Resolution Job.</p>"
        },
        "Status":{
          "shape":"IdentityResolutionJobStatus",
          "documentation":"<p>The status of the Identity Resolution Job.</p> <ul> <li> <p> <code>PENDING</code>: The Identity Resolution Job is scheduled but has not started yet. If you turn off the Identity Resolution feature in your domain, jobs in the <code>PENDING</code> state are deleted.</p> </li> <li> <p> <code>PREPROCESSING</code>: The Identity Resolution Job is loading your data.</p> </li> <li> <p> <code>FIND_MATCHING</code>: The Identity Resolution Job is using the machine learning model to identify profiles that belong to the same matching group.</p> </li> <li> <p> <code>MERGING</code>: The Identity Resolution Job is merging duplicate profiles.</p> </li> <li> <p> <code>COMPLETED</code>: The Identity Resolution Job completed successfully.</p> </li> <li> <p> <code>PARTIAL_SUCCESS</code>: There's a system error and not all of the data is merged. The Identity Resolution Job writes a message indicating the source of the problem.</p> </li> <li> <p> <code>FAILED</code>: The Identity Resolution Job did not merge any data. It writes a message indicating the source of the problem.</p> </li> </ul>"
        },
        "JobStartTime":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the job was started or will be started.</p>"
        },
        "JobEndTime":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the job was completed.</p>"
        },
        "JobStats":{
          "shape":"JobStats",
          "documentation":"<p>Statistics about an Identity Resolution Job.</p>"
        },
        "ExportingLocation":{
          "shape":"ExportingLocation",
          "documentation":"<p>The S3 location where the Identity Resolution Job writes result files.</p>"
        },
        "Message":{
          "shape":"stringTo2048",
          "documentation":"<p>The error messages that are generated when the Identity Resolution Job runs.</p>"
        }
      },
      "documentation":"<p>Information about the Identity Resolution Job.</p>"
    },
    "IdentityResolutionJobStatus":{
      "type":"string",
      "enum":[
        "PENDING",
        "PREPROCESSING",
        "FIND_MATCHING",
        "MERGING",
        "COMPLETED",
        "PARTIAL_SUCCESS",
        "FAILED"
      ]
    },
    "IdentityResolutionJobsList":{
      "type":"list",
      "member":{"shape":"IdentityResolutionJob"}
    },
    "Include":{
      "type":"string",
      "enum":[
        "ALL",
        "ANY",
        "NONE"
      ]
    },
    "IncludeOptions":{
      "type":"string",
      "enum":[
        "ALL",
        "ANY",
        "NONE"
      ]
    },
    "IncrementalPullConfig":{
      "type":"structure",
      "members":{
        "DatetimeTypeFieldName":{
          "shape":"DatetimeTypeFieldName",
          "documentation":"<p>A field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.</p>"
        }
      },
      "documentation":"<p>Specifies the configuration used when importing incremental records from the source.</p>"
    },
    "IntegrationConfig":{
      "type":"structure",
      "members":{
        "AppflowIntegration":{
          "shape":"AppflowIntegration",
          "documentation":"<p>Configuration data for <code>APPFLOW_INTEGRATION</code> workflow type.</p>"
        }
      },
      "documentation":"<p>Configuration data for integration workflow.</p>"
    },
    "IntegrationList":{
      "type":"list",
      "member":{"shape":"ListIntegrationItem"}
    },
    "InternalServerException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"message"}
      },
      "documentation":"<p>An internal service error occurred.</p>",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "JobSchedule":{
      "type":"structure",
      "required":[
        "DayOfTheWeek",
        "Time"
      ],
      "members":{
        "DayOfTheWeek":{
          "shape":"JobScheduleDayOfTheWeek",
          "documentation":"<p>The day when the Identity Resolution Job should run every week.</p>"
        },
        "Time":{
          "shape":"JobScheduleTime",
          "documentation":"<p>The time when the Identity Resolution Job should run every week.</p>"
        }
      },
      "documentation":"<p>The day and time when do you want to start the Identity Resolution Job every week.</p>"
    },
    "JobScheduleDayOfTheWeek":{
      "type":"string",
      "enum":[
        "SUNDAY",
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY"
      ]
    },
    "JobScheduleTime":{
      "type":"string",
      "max":5,
      "min":3,
      "pattern":"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"
    },
    "JobStats":{
      "type":"structure",
      "members":{
        "NumberOfProfilesReviewed":{
          "shape":"long",
          "documentation":"<p>The number of profiles reviewed.</p>"
        },
        "NumberOfMatchesFound":{
          "shape":"long",
          "documentation":"<p>The number of matches found.</p>"
        },
        "NumberOfMergesDone":{
          "shape":"long",
          "documentation":"<p>The number of merges completed.</p>"
        }
      },
      "documentation":"<p>Statistics about the Identity Resolution Job.</p>"
    },
    "KeyMap":{
      "type":"map",
      "key":{"shape":"name"},
      "value":{"shape":"ObjectTypeKeyList"},
      "sensitive":true
    },
    "KmsArn":{
      "type":"string",
      "max":2048,
      "min":20,
      "pattern":"arn:aws:kms:.*:[0-9]+:.*"
    },
    "LayoutItem":{
      "type":"structure",
      "required":[
        "LayoutDefinitionName",
        "Description",
        "DisplayName",
        "LayoutType",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "members":{
        "LayoutDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the layout.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the layout</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the layout</p>"
        },
        "IsDefault":{
          "shape":"boolean",
          "documentation":"<p>If set to true for a layout, this layout will be used by default to view data. If set to false, then layout will not be used by default but it can be used to view data by explicit selection on UI.</p>"
        },
        "LayoutType":{
          "shape":"LayoutType",
          "documentation":"<p>The type of layout that can be used to view data under customer profiles domain.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the layout was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the layout was most recently updated.</p>"
        }
      },
      "documentation":"<p>The layout object that contains LayoutDefinitionName, Description, DisplayName, IsDefault, LayoutType, Tags, CreatedAt, LastUpdatedAt </p>"
    },
    "LayoutList":{
      "type":"list",
      "member":{"shape":"LayoutItem"}
    },
    "LayoutType":{
      "type":"string",
      "enum":["PROFILE_EXPLORER"]
    },
    "ListAccountIntegrationsRequest":{
      "type":"structure",
      "required":["Uri"],
      "members":{
        "Uri":{
          "shape":"string1To255",
          "documentation":"<p>The URI of the S3 bucket or any other type of data source.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous ListAccountIntegrations API call.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of objects returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        },
        "IncludeHidden":{
          "shape":"optionalBoolean",
          "documentation":"<p>Boolean to indicate if hidden integration should be returned. Defaults to <code>False</code>.</p>",
          "location":"querystring",
          "locationName":"include-hidden"
        }
      }
    },
    "ListAccountIntegrationsResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"IntegrationList",
          "documentation":"<p>The list of ListAccountIntegration instances.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous ListAccountIntegrations API call.</p>"
        }
      }
    },
    "ListCalculatedAttributeDefinitionItem":{
      "type":"structure",
      "members":{
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the calculated attribute.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The threshold for the calculated attribute.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The threshold for the calculated attribute.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the calculated attribute definition was most recently edited.</p>"
        },
        "UseHistoricalData":{
          "shape":"optionalBoolean",
          "documentation":"<p>Whether historical data ingested before the Calculated Attribute was created should be included in calculations.</p>"
        },
        "Status":{
          "shape":"ReadinessStatus",
          "documentation":"<p>Status of the Calculated Attribute creation (whether all historical data has been indexed.)</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      },
      "documentation":"<p>The details of a single calculated attribute definition.</p>"
    },
    "ListCalculatedAttributeDefinitionsRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous call to ListCalculatedAttributeDefinitions.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of calculated attribute definitions returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        }
      }
    },
    "ListCalculatedAttributeDefinitionsResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"CalculatedAttributeDefinitionsList",
          "documentation":"<p>The list of calculated attribute definitions.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous call to ListCalculatedAttributeDefinitions.</p>"
        }
      }
    },
    "ListCalculatedAttributeForProfileItem":{
      "type":"structure",
      "members":{
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the calculated attribute.</p>"
        },
        "IsDataPartial":{
          "shape":"string1To255",
          "documentation":"<p>Indicates whether the calculated attribute’s value is based on partial data. If data is partial, it is set to true.</p>"
        },
        "Value":{
          "shape":"string1To255",
          "documentation":"<p>The value of the calculated attribute.</p>"
        },
        "LastObjectTimestamp":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of the newest object included in the calculated attribute calculation.</p>"
        }
      },
      "documentation":"<p>The details of a single calculated attribute for a profile.</p>"
    },
    "ListCalculatedAttributesForProfileRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "ProfileId"
      ],
      "members":{
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous call to ListCalculatedAttributesForProfile.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of calculated attributes returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of a customer profile.</p>",
          "location":"uri",
          "locationName":"ProfileId"
        }
      }
    },
    "ListCalculatedAttributesForProfileResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"CalculatedAttributesForProfileList",
          "documentation":"<p>The list of calculated attributes.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous call to ListCalculatedAttributesForProfile.</p>"
        }
      }
    },
    "ListDomainItem":{
      "type":"structure",
      "required":[
        "DomainName",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was most recently edited.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      },
      "documentation":"<p>An object in a list that represents a domain.</p>"
    },
    "ListDomainLayoutsRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>Identifies the next page of results to return.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of objects returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        }
      }
    },
    "ListDomainLayoutsResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"LayoutList",
          "documentation":"<p>Contains summary information about an EventStream.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>Identifies the next page of results to return.</p>"
        }
      }
    },
    "ListDomainsRequest":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous ListDomain API call.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of objects returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        }
      }
    },
    "ListDomainsResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"DomainList",
          "documentation":"<p>The list of ListDomains instances.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous ListDomains API call.</p>"
        }
      }
    },
    "ListEventStreamsRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>Identifies the next page of results to return.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of objects returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        }
      }
    },
    "ListEventStreamsResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"EventStreamSummaryList",
          "documentation":"<p>Contains summary information about an EventStream.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>Identifies the next page of results to return.</p>"
        }
      }
    },
    "ListEventTriggersRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token to use with ListEventTriggers.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of results to return per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        }
      }
    },
    "ListEventTriggersResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"EventTriggerSummaryList",
          "documentation":"<p>The list of Event Triggers.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous call to ListEventTriggers.</p>"
        }
      }
    },
    "ListIdentityResolutionJobsRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of results to return per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        }
      }
    },
    "ListIdentityResolutionJobsResponse":{
      "type":"structure",
      "members":{
        "IdentityResolutionJobsList":{
          "shape":"IdentityResolutionJobsList",
          "documentation":"<p>A list of Identity Resolution Jobs.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>If there are additional results, this is the token for the next set of results.</p>"
        }
      }
    },
    "ListIntegrationItem":{
      "type":"structure",
      "required":[
        "DomainName",
        "Uri",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "Uri":{
          "shape":"string1To255",
          "documentation":"<p>The URI of the S3 bucket or any other type of data source.</p>"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was most recently edited.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        },
        "ObjectTypeNames":{
          "shape":"ObjectTypeNames",
          "documentation":"<p>A map in which each key is an event type from an external application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code> (template) used to ingest the event. It supports the following event types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>, <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>, <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>, and <code>ShopifyUpdatedOrders</code>.</p>"
        },
        "WorkflowId":{
          "shape":"string1To255",
          "documentation":"<p>Unique identifier for the workflow.</p>"
        },
        "IsUnstructured":{
          "shape":"optionalBoolean",
          "documentation":"<p>Boolean that shows if the Flow that's associated with the Integration is created in Amazon Appflow, or with ObjectTypeName equals _unstructured via API/CLI in flowDefinition.</p>"
        },
        "RoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role. The Integration uses this role to make Customer Profiles requests on your behalf.</p>"
        },
        "EventTriggerNames":{
          "shape":"EventTriggerNames",
          "documentation":"<p>A list of unique names for active event triggers associated with the integration.</p>"
        }
      },
      "documentation":"<p>An integration in list of integrations.</p>"
    },
    "ListIntegrationsRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous ListIntegrations API call.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of objects returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        },
        "IncludeHidden":{
          "shape":"optionalBoolean",
          "documentation":"<p>Boolean to indicate if hidden integration should be returned. Defaults to <code>False</code>.</p>",
          "location":"querystring",
          "locationName":"include-hidden"
        }
      }
    },
    "ListIntegrationsResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"IntegrationList",
          "documentation":"<p>The list of ListIntegrations instances.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous ListIntegrations API call.</p>"
        }
      }
    },
    "ListObjectTypeAttributeItem":{
      "type":"structure",
      "required":[
        "AttributeName",
        "LastUpdatedAt"
      ],
      "members":{
        "AttributeName":{
          "shape":"name",
          "documentation":"<p>Name of the attribute.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>When the attribute was last updated.</p>"
        }
      },
      "documentation":"<p>Item that contains the attribute and when it was last updated.</p>"
    },
    "ListObjectTypeAttributesList":{
      "type":"list",
      "member":{"shape":"ListObjectTypeAttributeItem"}
    },
    "ListObjectTypeAttributesRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "ObjectTypeName"
      ],
      "members":{
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous call. </p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of objects returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique identifier of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>",
          "location":"uri",
          "locationName":"ObjectTypeName"
        }
      }
    },
    "ListObjectTypeAttributesResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"ListObjectTypeAttributesList",
          "documentation":"<p>The items returned as part of the response.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous call.</p>"
        }
      }
    },
    "ListProfileObjectTypeItem":{
      "type":"structure",
      "required":[
        "ObjectTypeName",
        "Description"
      ],
      "members":{
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>"
        },
        "Description":{
          "shape":"text",
          "documentation":"<p>Description of the profile object type.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was most recently edited.</p>"
        },
        "MaxProfileObjectCount":{
          "shape":"minSize1",
          "documentation":"<p>The amount of profile object max count assigned to the object type.</p>"
        },
        "MaxAvailableProfileObjectCount":{
          "shape":"minSize0",
          "documentation":"<p>The amount of provisioned profile object max count available.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      },
      "documentation":"<p>A ProfileObjectType instance.</p>"
    },
    "ListProfileObjectTypeTemplateItem":{
      "type":"structure",
      "members":{
        "TemplateId":{
          "shape":"name",
          "documentation":"<p>A unique identifier for the object template.</p>"
        },
        "SourceName":{
          "shape":"name",
          "documentation":"<p>The name of the source of the object template.</p>"
        },
        "SourceObject":{
          "shape":"name",
          "documentation":"<p>The source of the object template.</p>"
        }
      },
      "documentation":"<p>A ProfileObjectTypeTemplate in a list of ProfileObjectTypeTemplates.</p>"
    },
    "ListProfileObjectTypeTemplatesRequest":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous ListObjectTypeTemplates API call.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of objects returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        }
      }
    },
    "ListProfileObjectTypeTemplatesResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"ProfileObjectTypeTemplateList",
          "documentation":"<p>The list of ListProfileObjectType template instances.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous ListObjectTypeTemplates API call. </p>"
        }
      }
    },
    "ListProfileObjectTypesRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>Identifies the next page of results to return.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of objects returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        }
      }
    },
    "ListProfileObjectTypesResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"ProfileObjectTypeList",
          "documentation":"<p>The list of ListProfileObjectTypes instances.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>Identifies the next page of results to return.</p>"
        }
      }
    },
    "ListProfileObjectsItem":{
      "type":"structure",
      "members":{
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>Specifies the kind of object being added to a profile, such as \"Salesforce-Account.\"</p>"
        },
        "ProfileObjectUniqueKey":{
          "shape":"string1To255",
          "documentation":"<p>The unique identifier of the ProfileObject generated by the service.</p>"
        },
        "Object":{
          "shape":"stringifiedJson",
          "documentation":"<p>A JSON representation of a ProfileObject that belongs to a profile.</p>"
        }
      },
      "documentation":"<p>A ProfileObject in a list of ProfileObjects.</p>"
    },
    "ListProfileObjectsRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "ObjectTypeName",
        "ProfileId"
      ],
      "members":{
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous call to ListProfileObjects.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of objects returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>"
        },
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of a customer profile.</p>"
        },
        "ObjectFilter":{
          "shape":"ObjectFilter",
          "documentation":"<p>Applies a filter to the response to include profile objects with the specified index values.</p>"
        }
      }
    },
    "ListProfileObjectsResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"ProfileObjectList",
          "documentation":"<p>The list of ListProfileObject instances.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous call to ListProfileObjects.</p>"
        }
      }
    },
    "ListRuleBasedMatchesRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous <code>ListRuleBasedMatches</code> API call.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of <code>MatchIds</code> returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        }
      }
    },
    "ListRuleBasedMatchesResponse":{
      "type":"structure",
      "members":{
        "MatchIds":{
          "shape":"MatchIdList",
          "documentation":"<p>The list of <code>MatchIds</code> for the given domain.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous <code>ListRuleBasedMatches</code> API call.</p>"
        }
      }
    },
    "ListSegmentDefinitionsRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique identifier of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "MaxResults":{
          "shape":"MaxSize500",
          "documentation":"<p>The maximum number of objects returned per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous call. </p>",
          "location":"querystring",
          "locationName":"next-token"
        }
      }
    },
    "ListSegmentDefinitionsResponse":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous call.</p>",
          "locationName":"NextToken"
        },
        "Items":{
          "shape":"SegmentDefinitionsList",
          "documentation":"<p>List of segment definitions.</p>",
          "locationName":"Items"
        }
      }
    },
    "ListTagsForResourceRequest":{
      "type":"structure",
      "required":["resourceArn"],
      "members":{
        "resourceArn":{
          "shape":"TagArn",
          "documentation":"<p>The ARN of the resource for which you want to view tags.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        }
      }
    },
    "ListTagsForResourceResponse":{
      "type":"structure",
      "members":{
        "tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "ListUploadJobsRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain to list upload jobs for. </p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "MaxResults":{
          "shape":"MaxSize500",
          "documentation":"<p>The maximum number of upload jobs to return per page. </p>",
          "location":"querystring",
          "locationName":"max-results"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous call to retrieve the next page of results. </p>",
          "location":"querystring",
          "locationName":"next-token"
        }
      }
    },
    "ListUploadJobsResponse":{
      "type":"structure",
      "members":{
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token to use to retrieve the next page of results. </p>",
          "locationName":"NextToken"
        },
        "Items":{
          "shape":"UploadJobsList",
          "documentation":"<p>The list of upload jobs for the specified domain. </p>",
          "locationName":"Items"
        }
      }
    },
    "ListWorkflowsItem":{
      "type":"structure",
      "required":[
        "WorkflowType",
        "WorkflowId",
        "Status",
        "StatusDescription",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "members":{
        "WorkflowType":{
          "shape":"WorkflowType",
          "documentation":"<p>The type of workflow. The only supported value is APPFLOW_INTEGRATION.</p>"
        },
        "WorkflowId":{
          "shape":"string1To255",
          "documentation":"<p>Unique identifier for the workflow.</p>"
        },
        "Status":{
          "shape":"Status",
          "documentation":"<p>Status of workflow execution.</p>"
        },
        "StatusDescription":{
          "shape":"string1To255",
          "documentation":"<p>Description for workflow execution status.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>Creation timestamp for workflow.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>Last updated timestamp for workflow.</p>"
        }
      },
      "documentation":"<p>A workflow in list of workflows.</p>"
    },
    "ListWorkflowsRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "WorkflowType":{
          "shape":"WorkflowType",
          "documentation":"<p>The type of workflow. The only supported value is APPFLOW_INTEGRATION.</p>"
        },
        "Status":{
          "shape":"Status",
          "documentation":"<p>Status of workflow execution.</p>"
        },
        "QueryStartDate":{
          "shape":"timestamp",
          "documentation":"<p>Retrieve workflows started after timestamp.</p>"
        },
        "QueryEndDate":{
          "shape":"timestamp",
          "documentation":"<p>Retrieve workflows ended after timestamp.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of results to return per page.</p>",
          "location":"querystring",
          "locationName":"max-results"
        }
      }
    },
    "ListWorkflowsResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"WorkflowList",
          "documentation":"<p>List containing workflow details.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>If there are additional results, this is the token for the next set of results.</p>"
        }
      }
    },
    "MarketoConnectorOperator":{
      "type":"string",
      "enum":[
        "PROJECTION",
        "LESS_THAN",
        "GREATER_THAN",
        "BETWEEN",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    },
    "MarketoSourceProperties":{
      "type":"structure",
      "required":["Object"],
      "members":{
        "Object":{
          "shape":"Object",
          "documentation":"<p>The object specified in the Marketo flow source.</p>"
        }
      },
      "documentation":"<p>The properties that are applied when Marketo is being used as a source.</p>"
    },
    "MatchIdList":{
      "type":"list",
      "member":{"shape":"string1To255"}
    },
    "MatchItem":{
      "type":"structure",
      "members":{
        "MatchId":{
          "shape":"string1To255",
          "documentation":"<p>The unique identifiers for this group of profiles that match.</p>"
        },
        "ProfileIds":{
          "shape":"ProfileIdList",
          "documentation":"<p>A list of identifiers for profiles that match.</p>"
        },
        "ConfidenceScore":{
          "shape":"Double",
          "documentation":"<p>A number between 0 and 1, where a higher score means higher similarity. Examining match confidence scores lets you distinguish between groups of similar records in which the system is highly confident (which you may decide to merge), groups of similar records about which the system is uncertain (which you may decide to have reviewed by a human), and groups of similar records that the system deems to be unlikely (which you may decide to reject). Given confidence scores vary as per the data input, it should not be used an absolute measure of matching quality.</p>"
        }
      },
      "documentation":"<p>The Match group object.</p>"
    },
    "MatchType":{
      "type":"string",
      "enum":[
        "RULE_BASED_MATCHING",
        "ML_BASED_MATCHING"
      ]
    },
    "MatchesList":{
      "type":"list",
      "member":{"shape":"MatchItem"}
    },
    "MatchingAttributes":{
      "type":"list",
      "member":{"shape":"string1To255"},
      "max":20,
      "min":1
    },
    "MatchingAttributesList":{
      "type":"list",
      "member":{"shape":"MatchingAttributes"},
      "max":10,
      "min":1
    },
    "MatchingRequest":{
      "type":"structure",
      "required":["Enabled"],
      "members":{
        "Enabled":{
          "shape":"optionalBoolean",
          "documentation":"<p>The flag that enables the matching process of duplicate profiles.</p>"
        },
        "JobSchedule":{
          "shape":"JobSchedule",
          "documentation":"<p>The day and time when do you want to start the Identity Resolution Job every week.</p>"
        },
        "AutoMerging":{
          "shape":"AutoMerging",
          "documentation":"<p>Configuration information about the auto-merging process.</p>"
        },
        "ExportingConfig":{
          "shape":"ExportingConfig",
          "documentation":"<p>Configuration information for exporting Identity Resolution results, for example, to an S3 bucket.</p>"
        }
      },
      "documentation":"<p>The flag that enables the matching process of duplicate profiles.</p>"
    },
    "MatchingResponse":{
      "type":"structure",
      "members":{
        "Enabled":{
          "shape":"optionalBoolean",
          "documentation":"<p>The flag that enables the matching process of duplicate profiles.</p>"
        },
        "JobSchedule":{
          "shape":"JobSchedule",
          "documentation":"<p>The day and time when do you want to start the Identity Resolution Job every week.</p>"
        },
        "AutoMerging":{
          "shape":"AutoMerging",
          "documentation":"<p>Configuration information about the auto-merging process.</p>"
        },
        "ExportingConfig":{
          "shape":"ExportingConfig",
          "documentation":"<p>Configuration information for exporting Identity Resolution results, for example, to an S3 bucket.</p>"
        }
      },
      "documentation":"<p>The flag that enables the matching process of duplicate profiles.</p>"
    },
    "MatchingRule":{
      "type":"structure",
      "required":["Rule"],
      "members":{
        "Rule":{
          "shape":"MatchingRuleAttributeList",
          "documentation":"<p>A single rule level of the <code>MatchRules</code>. Configures how the rule-based matching process should match profiles.</p>"
        }
      },
      "documentation":"<p>Specifies how does the rule-based matching process should match profiles. You can choose from the following attributes to build the matching Rule:</p> <ul> <li> <p>AccountNumber</p> </li> <li> <p>Address.Address</p> </li> <li> <p>Address.City</p> </li> <li> <p>Address.Country</p> </li> <li> <p>Address.County</p> </li> <li> <p>Address.PostalCode</p> </li> <li> <p>Address.State</p> </li> <li> <p>Address.Province</p> </li> <li> <p>BirthDate</p> </li> <li> <p>BusinessName</p> </li> <li> <p>EmailAddress</p> </li> <li> <p>FirstName</p> </li> <li> <p>Gender</p> </li> <li> <p>LastName</p> </li> <li> <p>MiddleName</p> </li> <li> <p>PhoneNumber</p> </li> <li> <p>Any customized profile attributes that start with the <code>Attributes</code> </p> </li> </ul>"
    },
    "MatchingRuleAttributeList":{
      "type":"list",
      "member":{"shape":"string1To255"},
      "max":15,
      "min":1
    },
    "MatchingRules":{
      "type":"list",
      "member":{"shape":"MatchingRule"},
      "max":15,
      "min":1
    },
    "MaxAllowedRuleLevelForMatching":{
      "type":"integer",
      "max":15,
      "min":1
    },
    "MaxAllowedRuleLevelForMerging":{
      "type":"integer",
      "max":15,
      "min":1
    },
    "MaxSize500":{
      "type":"integer",
      "box":true,
      "max":500,
      "min":1
    },
    "MergeProfilesRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "MainProfileId",
        "ProfileIdsToBeMerged"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "MainProfileId":{
          "shape":"uuid",
          "documentation":"<p>The identifier of the profile to be taken.</p>"
        },
        "ProfileIdsToBeMerged":{
          "shape":"ProfileIdToBeMergedList",
          "documentation":"<p>The identifier of the profile to be merged into MainProfileId.</p>"
        },
        "FieldSourceProfileIds":{
          "shape":"FieldSourceProfileIds",
          "documentation":"<p>The identifiers of the fields in the profile that has the information you want to apply to the merge. For example, say you want to merge EmailAddress from Profile1 into MainProfile. This would be the identifier of the EmailAddress field in Profile1. </p>"
        }
      }
    },
    "MergeProfilesResponse":{
      "type":"structure",
      "members":{
        "Message":{
          "shape":"message",
          "documentation":"<p>A message that indicates the merge request is complete.</p>"
        }
      }
    },
    "Object":{
      "type":"string",
      "max":512,
      "pattern":"\\S+"
    },
    "ObjectAttribute":{
      "type":"structure",
      "required":[
        "ComparisonOperator",
        "Values"
      ],
      "members":{
        "Source":{
          "shape":"text",
          "documentation":"<p>An attribute contained within a source object.</p>"
        },
        "FieldName":{
          "shape":"fieldName",
          "documentation":"<p>A field defined within an object type.</p>"
        },
        "ComparisonOperator":{
          "shape":"ComparisonOperator",
          "documentation":"<p>The operator used to compare an attribute against a list of values.</p>"
        },
        "Values":{
          "shape":"EventTriggerValues",
          "documentation":"<p>A list of attribute values used for comparison.</p>"
        }
      },
      "documentation":"<p>The criteria that a specific object attribute must meet to trigger the destination.</p>"
    },
    "ObjectAttributes":{
      "type":"list",
      "member":{"shape":"ObjectAttribute"},
      "max":10,
      "min":1
    },
    "ObjectCount":{
      "type":"integer",
      "min":1
    },
    "ObjectFilter":{
      "type":"structure",
      "required":[
        "KeyName",
        "Values"
      ],
      "members":{
        "KeyName":{
          "shape":"name",
          "documentation":"<p>A searchable identifier of a profile object. The predefined keys you can use to search for <code>_asset</code> include: <code>_assetId</code>, <code>_assetName</code>, and <code>_serialNumber</code>. The predefined keys you can use to search for <code>_case</code> include: <code>_caseId</code>. The predefined keys you can use to search for <code>_order</code> include: <code>_orderId</code>.</p>"
        },
        "Values":{
          "shape":"requestValueList",
          "documentation":"<p>A list of key values.</p>"
        }
      },
      "documentation":"<p>The filter applied to <code>ListProfileObjects</code> response to include profile objects with the specified index values.</p>"
    },
    "ObjectTypeField":{
      "type":"structure",
      "members":{
        "Source":{
          "shape":"text",
          "documentation":"<p>A field of a ProfileObject. For example: _source.FirstName, where “_source” is a ProfileObjectType of a Zendesk user and “FirstName” is a field in that ObjectType.</p>"
        },
        "Target":{
          "shape":"text",
          "documentation":"<p>The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode.</p>"
        },
        "ContentType":{
          "shape":"FieldContentType",
          "documentation":"<p>The content type of the field. Used for determining equality when searching.</p>"
        }
      },
      "documentation":"<p>Represents a field in a ProfileObjectType.</p>"
    },
    "ObjectTypeKey":{
      "type":"structure",
      "members":{
        "StandardIdentifiers":{
          "shape":"StandardIdentifierList",
          "documentation":"<p>The types of keys that a ProfileObject can have. Each ProfileObject can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE, ASSET, CASE, or ORDER means that this key can be used to tie an object to a PROFILE, ASSET, CASE, or ORDER respectively. UNIQUE means that it can be used to uniquely identify an object. If a key a is marked as SECONDARY, it will be used to search for profiles after all other PROFILE keys have been searched. A LOOKUP_ONLY key is only used to match a profile but is not persisted to be used for searching of the profile. A NEW_ONLY key is only used if the profile does not already exist before the object is ingested, otherwise it is only used for matching objects to profiles.</p>"
        },
        "FieldNames":{
          "shape":"FieldNameList",
          "documentation":"<p>The reference for the key name of the fields map.</p>"
        }
      },
      "documentation":"<p>An object that defines the Key element of a ProfileObject. A Key is a special element that can be used to search for a customer profile.</p>"
    },
    "ObjectTypeKeyList":{
      "type":"list",
      "member":{"shape":"ObjectTypeKey"}
    },
    "ObjectTypeNames":{
      "type":"map",
      "key":{"shape":"string1To255"},
      "value":{"shape":"typeName"}
    },
    "Objects":{
      "type":"list",
      "member":{"shape":"stringifiedJson"},
      "max":5,
      "min":1,
      "sensitive":true
    },
    "Operator":{
      "type":"string",
      "enum":[
        "EQUAL_TO",
        "GREATER_THAN",
        "LESS_THAN",
        "NOT_EQUAL_TO"
      ]
    },
    "OperatorPropertiesKeys":{
      "type":"string",
      "enum":[
        "VALUE",
        "VALUES",
        "DATA_TYPE",
        "UPPER_BOUND",
        "LOWER_BOUND",
        "SOURCE_DATA_TYPE",
        "DESTINATION_DATA_TYPE",
        "VALIDATION_ACTION",
        "MASK_VALUE",
        "MASK_LENGTH",
        "TRUNCATE_LENGTH",
        "MATH_OPERATION_FIELDS_ORDER",
        "CONCAT_FORMAT",
        "SUBFIELD_CATEGORY_MAP"
      ]
    },
    "PartyType":{
      "type":"string",
      "deprecated":true,
      "enum":[
        "INDIVIDUAL",
        "BUSINESS",
        "OTHER"
      ],
      "sensitive":true
    },
    "Period":{
      "type":"structure",
      "required":[
        "Unit",
        "Value"
      ],
      "members":{
        "Unit":{
          "shape":"PeriodUnit",
          "documentation":"<p>The unit of time.</p>"
        },
        "Value":{
          "shape":"maxSize24",
          "documentation":"<p>The amount of time of the specified unit.</p>"
        },
        "MaxInvocationsPerProfile":{
          "shape":"maxSize1000",
          "documentation":"<p>The maximum allowed number of destination invocations per profile.</p>"
        },
        "Unlimited":{
          "shape":"boolean",
          "documentation":"<p>If set to true, there is no limit on the number of destination invocations per profile. The default is false.</p>"
        }
      },
      "documentation":"<p>Defines a limit and the time period during which it is enforced.</p>"
    },
    "PeriodUnit":{
      "type":"string",
      "enum":[
        "HOURS",
        "DAYS",
        "WEEKS",
        "MONTHS"
      ]
    },
    "Periods":{
      "type":"list",
      "member":{"shape":"Period"},
      "max":4,
      "min":1
    },
    "PhoneNumberList":{
      "type":"list",
      "member":{"shape":"string1To255"},
      "max":4,
      "min":1
    },
    "PhonePreferenceList":{
      "type":"list",
      "member":{"shape":"ContactPreference"}
    },
    "Profile":{
      "type":"structure",
      "members":{
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of a customer profile.</p>"
        },
        "AccountNumber":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>An account number that you have assigned to the customer.</p>"
        },
        "AdditionalInformation":{
          "shape":"sensitiveString1To1000",
          "documentation":"<p>Any additional information relevant to the customer’s profile.</p>"
        },
        "PartyType":{
          "shape":"PartyType",
          "documentation":"<p>The type of profile used to describe the customer.</p>"
        },
        "BusinessName":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The name of the customer’s business.</p>"
        },
        "FirstName":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s first name.</p>"
        },
        "MiddleName":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s middle name.</p>"
        },
        "LastName":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s last name.</p>"
        },
        "BirthDate":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s birth date. </p>"
        },
        "Gender":{
          "shape":"Gender",
          "documentation":"<p>The gender with which the customer identifies. </p>"
        },
        "PhoneNumber":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer's phone number, which has not been specified as a mobile, home, or business number.</p>"
        },
        "MobilePhoneNumber":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s mobile phone number.</p>"
        },
        "HomePhoneNumber":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s home phone number.</p>"
        },
        "BusinessPhoneNumber":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s home phone number.</p>"
        },
        "EmailAddress":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s email address, which has not been specified as a personal or business address. </p>"
        },
        "PersonalEmailAddress":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s personal email address.</p>"
        },
        "BusinessEmailAddress":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>The customer’s business email address.</p>"
        },
        "Address":{
          "shape":"Address",
          "documentation":"<p>A generic address associated with the customer that is not mailing, shipping, or billing.</p>"
        },
        "ShippingAddress":{
          "shape":"Address",
          "documentation":"<p>The customer’s shipping address.</p>"
        },
        "MailingAddress":{
          "shape":"Address",
          "documentation":"<p>The customer’s mailing address.</p>"
        },
        "BillingAddress":{
          "shape":"Address",
          "documentation":"<p>The customer’s billing address.</p>"
        },
        "Attributes":{
          "shape":"Attributes",
          "documentation":"<p>A key value pair of attributes of a customer profile.</p>"
        },
        "FoundByItems":{
          "shape":"foundByList",
          "documentation":"<p>A list of items used to find a profile returned in a <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html\">SearchProfiles</a> response. An item is a key-value(s) pair that matches an attribute in the profile.</p> <p>If the optional <code>AdditionalSearchKeys</code> parameter was included in the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html\">SearchProfiles</a> request, the <code>FoundByItems</code> list should be interpreted based on the <code>LogicalOperator</code> used in the request:</p> <ul> <li> <p> <code>AND</code> - The profile included in the response matched all of the search keys specified in the request. The <code>FoundByItems</code> will include all of the key-value(s) pairs that were specified in the request (as this is a requirement of <code>AND</code> search logic).</p> </li> <li> <p> <code>OR</code> - The profile included in the response matched at least one of the search keys specified in the request. The <code>FoundByItems</code> will include each of the key-value(s) pairs that the profile was found by.</p> </li> </ul> <p>The <code>OR</code> relationship is the default behavior if the <code>LogicalOperator</code> parameter is not included in the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_SearchProfiles.html\">SearchProfiles</a> request.</p>"
        },
        "PartyTypeString":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>An alternative to PartyType which accepts any string as input.</p>"
        },
        "GenderString":{
          "shape":"sensitiveString1To255",
          "documentation":"<p>An alternative to Gender which accepts any string as input.</p>"
        },
        "ProfileType":{
          "shape":"ProfileType",
          "documentation":"<p>The type of the profile.</p>"
        },
        "EngagementPreferences":{
          "shape":"EngagementPreferences",
          "documentation":"<p>The customer or account’s engagement preferences.</p>"
        }
      },
      "documentation":"<p>The standard profile of a customer.</p>"
    },
    "ProfileAttributeValuesRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "AttributeName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique identifier of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "AttributeName":{
          "shape":"string1To255",
          "documentation":"<p>The attribute name.</p>",
          "location":"uri",
          "locationName":"AttributeName"
        }
      }
    },
    "ProfileAttributeValuesResponse":{
      "type":"structure",
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The name of the domain.</p>"
        },
        "AttributeName":{
          "shape":"string1To255",
          "documentation":"<p>The attribute name.</p>"
        },
        "Items":{
          "shape":"AttributeValueItemList",
          "documentation":"<p>The items returned as part of the response.</p>"
        },
        "StatusCode":{
          "shape":"StatusCode",
          "documentation":"<p>The status code for the response.</p>",
          "location":"statusCode"
        }
      }
    },
    "ProfileAttributes":{
      "type":"structure",
      "members":{
        "AccountNumber":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within account number.</p>",
          "locationName":"AccountNumber"
        },
        "AdditionalInformation":{
          "shape":"ExtraLengthValueProfileDimension",
          "documentation":"<p>A field to describe values to segment on within additional information.</p>",
          "locationName":"AdditionalInformation"
        },
        "FirstName":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within first name.</p>",
          "locationName":"FirstName"
        },
        "LastName":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within last name.</p>",
          "locationName":"LastName"
        },
        "MiddleName":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within middle name.</p>",
          "locationName":"MiddleName"
        },
        "GenderString":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within genderString.</p>",
          "locationName":"GenderString"
        },
        "PartyTypeString":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within partyTypeString.</p>",
          "locationName":"PartyTypeString"
        },
        "BirthDate":{
          "shape":"DateDimension",
          "documentation":"<p>A field to describe values to segment on within birthDate.</p>",
          "locationName":"BirthDate"
        },
        "PhoneNumber":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within phone number.</p>",
          "locationName":"PhoneNumber"
        },
        "BusinessName":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within business name.</p>",
          "locationName":"BusinessName"
        },
        "BusinessPhoneNumber":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within business phone number.</p>",
          "locationName":"BusinessPhoneNumber"
        },
        "HomePhoneNumber":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within home phone number.</p>",
          "locationName":"HomePhoneNumber"
        },
        "MobilePhoneNumber":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within mobile phone number.</p>",
          "locationName":"MobilePhoneNumber"
        },
        "EmailAddress":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within email address.</p>",
          "locationName":"EmailAddress"
        },
        "PersonalEmailAddress":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within personal email address.</p>",
          "locationName":"PersonalEmailAddress"
        },
        "BusinessEmailAddress":{
          "shape":"ProfileDimension",
          "documentation":"<p>A field to describe values to segment on within business email address.</p>",
          "locationName":"BusinessEmailAddress"
        },
        "Address":{
          "shape":"AddressDimension",
          "documentation":"<p>A field to describe values to segment on within address.</p>",
          "locationName":"Address"
        },
        "ShippingAddress":{
          "shape":"AddressDimension",
          "documentation":"<p>A field to describe values to segment on within shipping address.</p>",
          "locationName":"ShippingAddress"
        },
        "MailingAddress":{
          "shape":"AddressDimension",
          "documentation":"<p>A field to describe values to segment on within mailing address.</p>",
          "locationName":"MailingAddress"
        },
        "BillingAddress":{
          "shape":"AddressDimension",
          "documentation":"<p>A field to describe values to segment on within billing address.</p>",
          "locationName":"BillingAddress"
        },
        "Attributes":{
          "shape":"CustomAttributes",
          "documentation":"<p>A field to describe values to segment on within attributes.</p>",
          "locationName":"Attributes"
        },
        "ProfileType":{
          "shape":"ProfileTypeDimension",
          "documentation":"<p>A field to describe values to segment on within profile type.</p>",
          "locationName":"ProfileType"
        }
      },
      "documentation":"<p>The object used to segment on attributes within the customer profile.</p>",
      "sensitive":true
    },
    "ProfileDimension":{
      "type":"structure",
      "required":[
        "DimensionType",
        "Values"
      ],
      "members":{
        "DimensionType":{
          "shape":"StringDimensionType",
          "documentation":"<p>The action to segment on.</p>",
          "locationName":"DimensionType"
        },
        "Values":{
          "shape":"Values",
          "documentation":"<p>The values to apply the DimensionType on.</p>",
          "locationName":"Values"
        }
      },
      "documentation":"<p>Object to hold the dimensions of a profile's fields to segment on.</p>"
    },
    "ProfileId":{"type":"string"},
    "ProfileIdList":{
      "type":"list",
      "member":{"shape":"uuid"}
    },
    "ProfileIdToBeMergedList":{
      "type":"list",
      "member":{"shape":"uuid"},
      "max":20,
      "min":1
    },
    "ProfileIds":{
      "type":"list",
      "member":{"shape":"uuid"},
      "max":100,
      "min":1
    },
    "ProfileList":{
      "type":"list",
      "member":{"shape":"Profile"}
    },
    "ProfileObjectList":{
      "type":"list",
      "member":{"shape":"ListProfileObjectsItem"}
    },
    "ProfileObjectTypeList":{
      "type":"list",
      "member":{"shape":"ListProfileObjectTypeItem"},
      "sensitive":true
    },
    "ProfileObjectTypeTemplateList":{
      "type":"list",
      "member":{"shape":"ListProfileObjectTypeTemplateItem"}
    },
    "ProfileQueryFailures":{
      "type":"structure",
      "required":[
        "ProfileId",
        "Message"
      ],
      "members":{
        "ProfileId":{
          "shape":"ProfileId",
          "documentation":"<p>The profile id the failure belongs to.</p>",
          "locationName":"ProfileId"
        },
        "Message":{
          "shape":"GetSegmentMembershipMessage",
          "documentation":"<p>A message describing the failure.</p>",
          "locationName":"Message"
        },
        "Status":{
          "shape":"GetSegmentMembershipStatus",
          "documentation":"<p>The status describing the failure.</p>",
          "locationName":"Status"
        }
      },
      "documentation":"<p>Object that holds failures for membership.</p>"
    },
    "ProfileQueryResult":{
      "type":"structure",
      "required":[
        "ProfileId",
        "QueryResult"
      ],
      "members":{
        "ProfileId":{
          "shape":"ProfileId",
          "documentation":"<p>The profile id the result belongs to.</p>",
          "locationName":"ProfileId"
        },
        "QueryResult":{
          "shape":"QueryResult",
          "documentation":"<p>Describes whether the profile was absent or present in the segment.</p>",
          "locationName":"QueryResult"
        },
        "Profile":{
          "shape":"Profile",
          "locationName":"Profile"
        }
      },
      "documentation":"<p>Object that holds the results for membership.</p>"
    },
    "ProfileType":{
      "type":"string",
      "enum":[
        "ACCOUNT_PROFILE",
        "PROFILE"
      ],
      "sensitive":true
    },
    "ProfileTypeDimension":{
      "type":"structure",
      "required":[
        "DimensionType",
        "Values"
      ],
      "members":{
        "DimensionType":{
          "shape":"ProfileTypeDimensionType",
          "documentation":"<p>The action to segment on.</p>",
          "locationName":"DimensionType"
        },
        "Values":{
          "shape":"ProfileTypeValues",
          "documentation":"<p>The values to apply the DimensionType on.</p>",
          "locationName":"Values"
        }
      },
      "documentation":"<p>Object to hold the dimension of a profile type field to segment on.</p>"
    },
    "ProfileTypeDimensionType":{
      "type":"string",
      "enum":[
        "INCLUSIVE",
        "EXCLUSIVE"
      ]
    },
    "ProfileTypeValues":{
      "type":"list",
      "member":{"shape":"ProfileType"},
      "max":1,
      "min":1
    },
    "Profiles":{
      "type":"list",
      "member":{"shape":"ProfileQueryResult"}
    },
    "Property":{
      "type":"string",
      "max":2048,
      "pattern":".+"
    },
    "PutIntegrationRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "Uri":{
          "shape":"string1To255",
          "documentation":"<p>The URI of the S3 bucket or any other type of data source.</p>"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        },
        "FlowDefinition":{
          "shape":"FlowDefinition",
          "documentation":"<p>The configuration that controls how Customer Profiles retrieves data from the source.</p>"
        },
        "ObjectTypeNames":{
          "shape":"ObjectTypeNames",
          "documentation":"<p>A map in which each key is an event type from an external application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code> (template) used to ingest the event. It supports the following event types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>, <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>, <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>, and <code>ShopifyUpdatedOrders</code>.</p>"
        },
        "RoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role. The Integration uses this role to make Customer Profiles requests on your behalf.</p>"
        },
        "EventTriggerNames":{
          "shape":"EventTriggerNames",
          "documentation":"<p>A list of unique names for active event triggers associated with the integration.</p>"
        }
      }
    },
    "PutIntegrationResponse":{
      "type":"structure",
      "required":[
        "DomainName",
        "Uri",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "Uri":{
          "shape":"string1To255",
          "documentation":"<p>The URI of the S3 bucket or any other type of data source.</p>"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was most recently edited.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        },
        "ObjectTypeNames":{
          "shape":"ObjectTypeNames",
          "documentation":"<p>A map in which each key is an event type from an external application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code> (template) used to ingest the event. It supports the following event types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>, <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>, <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>, and <code>ShopifyUpdatedOrders</code>.</p>"
        },
        "WorkflowId":{
          "shape":"string1To255",
          "documentation":"<p>Unique identifier for the workflow.</p>"
        },
        "IsUnstructured":{
          "shape":"optionalBoolean",
          "documentation":"<p>Boolean that shows if the Flow that's associated with the Integration is created in Amazon Appflow, or with ObjectTypeName equals _unstructured via API/CLI in flowDefinition.</p>"
        },
        "RoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role. The Integration uses this role to make Customer Profiles requests on your behalf.</p>"
        },
        "EventTriggerNames":{
          "shape":"EventTriggerNames",
          "documentation":"<p>A list of unique names for active event triggers associated with the integration. This list would be empty if no Event Trigger is associated with the integration.</p>"
        }
      }
    },
    "PutProfileObjectRequest":{
      "type":"structure",
      "required":[
        "ObjectTypeName",
        "Object",
        "DomainName"
      ],
      "members":{
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>"
        },
        "Object":{
          "shape":"stringifiedJson",
          "documentation":"<p>A string that is serialized from a JSON object.</p>"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        }
      }
    },
    "PutProfileObjectResponse":{
      "type":"structure",
      "members":{
        "ProfileObjectUniqueKey":{
          "shape":"string1To255",
          "documentation":"<p>The unique identifier of the profile object generated by the service.</p>"
        }
      }
    },
    "PutProfileObjectTypeRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "ObjectTypeName",
        "Description"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>",
          "location":"uri",
          "locationName":"ObjectTypeName"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>Description of the profile object type.</p>"
        },
        "TemplateId":{
          "shape":"name",
          "documentation":"<p>A unique identifier for the object template. For some attributes in the request, the service will use the default value from the object template when TemplateId is present. If these attributes are present in the request, the service may return a <code>BadRequestException</code>. These attributes include: AllowProfileCreation, SourceLastUpdatedTimestampFormat, Fields, and Keys. For example, if AllowProfileCreation is set to true when TemplateId is set, the service may return a <code>BadRequestException</code>.</p>"
        },
        "ExpirationDays":{
          "shape":"expirationDaysInteger",
          "documentation":"<p>The number of days until the data in the object expires.</p>"
        },
        "EncryptionKey":{
          "shape":"encryptionKey",
          "documentation":"<p>The customer-provided key to encrypt the profile object that will be created in this profile object type.</p>"
        },
        "AllowProfileCreation":{
          "shape":"boolean",
          "documentation":"<p>Indicates whether a profile should be created when data is received if one doesn’t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile.</p>"
        },
        "SourceLastUpdatedTimestampFormat":{
          "shape":"string1To255",
          "documentation":"<p>The format of your <code>sourceLastUpdatedTimestamp</code> that was previously set up. </p>"
        },
        "MaxProfileObjectCount":{
          "shape":"minSize1",
          "documentation":"<p>The amount of profile object max count assigned to the object type</p>"
        },
        "Fields":{
          "shape":"FieldMap",
          "documentation":"<p>A map of the name and ObjectType field.</p>"
        },
        "Keys":{
          "shape":"KeyMap",
          "documentation":"<p>A list of unique keys that can be used to map data to the profile.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "PutProfileObjectTypeResponse":{
      "type":"structure",
      "required":[
        "ObjectTypeName",
        "Description"
      ],
      "members":{
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The name of the profile object type.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>Description of the profile object type.</p>"
        },
        "TemplateId":{
          "shape":"name",
          "documentation":"<p>A unique identifier for the object template.</p>"
        },
        "ExpirationDays":{
          "shape":"expirationDaysInteger",
          "documentation":"<p>The number of days until the data in the object expires.</p>"
        },
        "EncryptionKey":{
          "shape":"encryptionKey",
          "documentation":"<p>The customer-provided key to encrypt the profile object that will be created in this profile object type.</p>"
        },
        "AllowProfileCreation":{
          "shape":"boolean",
          "documentation":"<p>Indicates whether a profile should be created when data is received if one doesn’t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile.</p>"
        },
        "SourceLastUpdatedTimestampFormat":{
          "shape":"string1To255",
          "documentation":"<p>The format of your <code>sourceLastUpdatedTimestamp</code> that was previously set up in fields that were parsed using <a href=\"https://docs.oracle.com/javase/10/docs/api/java/text/SimpleDateFormat.html\">SimpleDateFormat</a>. If you have <code>sourceLastUpdatedTimestamp</code> in your field, you must set up <code>sourceLastUpdatedTimestampFormat</code>.</p>"
        },
        "MaxProfileObjectCount":{
          "shape":"minSize1",
          "documentation":"<p>The amount of profile object max count assigned to the object type.</p>"
        },
        "MaxAvailableProfileObjectCount":{
          "shape":"minSize0",
          "documentation":"<p>The amount of provisioned profile object max count available.</p>"
        },
        "Fields":{
          "shape":"FieldMap",
          "documentation":"<p>A map of the name and ObjectType field.</p>"
        },
        "Keys":{
          "shape":"KeyMap",
          "documentation":"<p>A list of unique keys that can be used to map data to the profile.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was most recently edited.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "QueryResult":{
      "type":"string",
      "enum":[
        "PRESENT",
        "ABSENT"
      ]
    },
    "Range":{
      "type":"structure",
      "members":{
        "Value":{
          "shape":"Value",
          "documentation":"<p>The amount of time of the specified unit.</p>"
        },
        "Unit":{
          "shape":"Unit",
          "documentation":"<p>The unit of time.</p>"
        },
        "ValueRange":{
          "shape":"ValueRange",
          "documentation":"<p>A structure letting customers specify a relative time window over which over which data is included in the Calculated Attribute. Use positive numbers to indicate that the endpoint is in the past, and negative numbers to indicate it is in the future. ValueRange overrides Value.</p>"
        },
        "TimestampSource":{
          "shape":"string1To255",
          "documentation":"<p>An expression specifying the field in your JSON object from which the date should be parsed. The expression should follow the structure of \\\"{ObjectTypeName.&lt;Location of timestamp field in JSON pointer format&gt;}\\\". E.g. if your object type is MyType and source JSON is {\"generatedAt\": {\"timestamp\": \"1737587945945\"}}, then TimestampSource should be \"{MyType.generatedAt.timestamp}\".</p>"
        },
        "TimestampFormat":{
          "shape":"string1To255",
          "documentation":"<p>The format the timestamp field in your JSON object is specified. This value should be one of EPOCHMILLI (for Unix epoch timestamps with second/millisecond level precision) or ISO_8601 (following ISO_8601 format with second/millisecond level precision, with an optional offset of Z or in the format HH:MM or HHMM.). E.g. if your object type is MyType and source JSON is {\"generatedAt\": {\"timestamp\": \"2001-07-04T12:08:56.235-0700\"}}, then TimestampFormat should be \"ISO_8601\".</p>"
        }
      },
      "documentation":"<p>The relative time period over which data is included in the aggregation.</p>"
    },
    "RangeOverride":{
      "type":"structure",
      "required":[
        "Start",
        "Unit"
      ],
      "members":{
        "Start":{
          "shape":"Start",
          "documentation":"<p>The start time of when to include objects.</p>"
        },
        "End":{
          "shape":"End",
          "documentation":"<p>The end time of when to include objects.</p>"
        },
        "Unit":{
          "shape":"RangeUnit",
          "documentation":"<p>The unit for start and end.</p>"
        }
      },
      "documentation":"<p>Overrides the original range on a calculated attribute definition.</p>"
    },
    "RangeUnit":{
      "type":"string",
      "enum":["DAYS"]
    },
    "Readiness":{
      "type":"structure",
      "members":{
        "ProgressPercentage":{
          "shape":"percentageInteger",
          "documentation":"<p>Approximately how far the Calculated Attribute creation is from completion.</p>"
        },
        "Message":{
          "shape":"text",
          "documentation":"<p>Any customer messaging.</p>"
        }
      },
      "documentation":"<p>Information indicating if the Calculated Attribute is ready for use by confirming all historical data has been processed and reflected.</p>"
    },
    "ReadinessStatus":{
      "type":"string",
      "enum":[
        "PREPARING",
        "IN_PROGRESS",
        "COMPLETED",
        "FAILED"
      ]
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"message"}
      },
      "documentation":"<p>The requested resource does not exist, or access was denied.</p>",
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "ResultsSummary":{
      "type":"structure",
      "members":{
        "UpdatedRecords":{
          "shape":"optionalLong",
          "documentation":"<p>The number of records that were updated during the upload job. </p>",
          "locationName":"UpdatedRecords"
        },
        "CreatedRecords":{
          "shape":"optionalLong",
          "documentation":"<p>The number of records that were newly created during the upload job. </p>",
          "locationName":"CreatedRecords"
        },
        "FailedRecords":{
          "shape":"optionalLong",
          "documentation":"<p>The number of records that failed to be processed during the upload job. </p>",
          "locationName":"FailedRecords"
        }
      },
      "documentation":"<p>The summary of results for an upload job, including the number of updated, created, and failed records. </p>"
    },
    "RoleArn":{
      "type":"string",
      "max":512,
      "pattern":"arn:aws:iam:.*:[0-9]+:.*"
    },
    "RuleBasedMatchingRequest":{
      "type":"structure",
      "required":["Enabled"],
      "members":{
        "Enabled":{
          "shape":"optionalBoolean",
          "documentation":"<p>The flag that enables the rule-based matching process of duplicate profiles.</p>"
        },
        "MatchingRules":{
          "shape":"MatchingRules",
          "documentation":"<p>Configures how the rule-based matching process should match profiles. You can have up to 15 <code>MatchingRule</code> in the <code>MatchingRules</code>.</p>"
        },
        "MaxAllowedRuleLevelForMerging":{
          "shape":"MaxAllowedRuleLevelForMerging",
          "documentation":"<p> <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_MatchingRule.html\">MatchingRule</a> </p>"
        },
        "MaxAllowedRuleLevelForMatching":{
          "shape":"MaxAllowedRuleLevelForMatching",
          "documentation":"<p>Indicates the maximum allowed rule level.</p>"
        },
        "AttributeTypesSelector":{
          "shape":"AttributeTypesSelector",
          "documentation":"<p>Configures information about the <code>AttributeTypesSelector</code> where the rule-based identity resolution uses to match profiles.</p>"
        },
        "ConflictResolution":{"shape":"ConflictResolution"},
        "ExportingConfig":{"shape":"ExportingConfig"}
      },
      "documentation":"<p>The request to enable the rule-based matching.</p>"
    },
    "RuleBasedMatchingResponse":{
      "type":"structure",
      "members":{
        "Enabled":{
          "shape":"optionalBoolean",
          "documentation":"<p>The flag that enables the rule-based matching process of duplicate profiles.</p>"
        },
        "MatchingRules":{
          "shape":"MatchingRules",
          "documentation":"<p>Configures how the rule-based matching process should match profiles. You can have up to 15 <code>MatchingRule</code> in the <code>MatchingRules</code>.</p>"
        },
        "Status":{
          "shape":"RuleBasedMatchingStatus",
          "documentation":"<p>PENDING</p> <ul> <li> <p>The first status after configuration a rule-based matching rule. If it is an existing domain, the rule-based Identity Resolution waits one hour before creating the matching rule. If it is a new domain, the system will skip the <code>PENDING</code> stage.</p> </li> </ul> <p>IN_PROGRESS</p> <ul> <li> <p>The system is creating the rule-based matching rule. Under this status, the system is evaluating the existing data and you can no longer change the Rule-based matching configuration.</p> </li> </ul> <p>ACTIVE</p> <ul> <li> <p>The rule is ready to use. You can change the rule a day after the status is in <code>ACTIVE</code>.</p> </li> </ul>"
        },
        "MaxAllowedRuleLevelForMerging":{
          "shape":"MaxAllowedRuleLevelForMerging",
          "documentation":"<p> <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_MatchingRule.html\">MatchingRule</a> </p>"
        },
        "MaxAllowedRuleLevelForMatching":{
          "shape":"MaxAllowedRuleLevelForMatching",
          "documentation":"<p>Indicates the maximum allowed rule level.</p>"
        },
        "AttributeTypesSelector":{
          "shape":"AttributeTypesSelector",
          "documentation":"<p>Configures information about the <code>AttributeTypesSelector</code> where the rule-based identity resolution uses to match profiles.</p>"
        },
        "ConflictResolution":{"shape":"ConflictResolution"},
        "ExportingConfig":{"shape":"ExportingConfig"}
      },
      "documentation":"<p>The response of the Rule-based matching request.</p>"
    },
    "RuleBasedMatchingStatus":{
      "type":"string",
      "enum":[
        "PENDING",
        "IN_PROGRESS",
        "ACTIVE"
      ]
    },
    "RuleLevel":{
      "type":"integer",
      "max":15,
      "min":1
    },
    "S3ConnectorOperator":{
      "type":"string",
      "enum":[
        "PROJECTION",
        "LESS_THAN",
        "GREATER_THAN",
        "BETWEEN",
        "LESS_THAN_OR_EQUAL_TO",
        "GREATER_THAN_OR_EQUAL_TO",
        "EQUAL_TO",
        "NOT_EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    },
    "S3ExportingConfig":{
      "type":"structure",
      "required":["S3BucketName"],
      "members":{
        "S3BucketName":{
          "shape":"s3BucketName",
          "documentation":"<p>The name of the S3 bucket where Identity Resolution Jobs write result files.</p>"
        },
        "S3KeyName":{
          "shape":"s3KeyNameCustomerOutputConfig",
          "documentation":"<p>The S3 key name of the location where Identity Resolution Jobs write result files.</p>"
        }
      },
      "documentation":"<p>Configuration information about the S3 bucket where Identity Resolution Jobs write result files.</p>"
    },
    "S3ExportingLocation":{
      "type":"structure",
      "members":{
        "S3BucketName":{
          "shape":"s3BucketName",
          "documentation":"<p>The name of the S3 bucket name where Identity Resolution Jobs write result files.</p>"
        },
        "S3KeyName":{
          "shape":"s3KeyName",
          "documentation":"<p>The S3 key name of the location where Identity Resolution Jobs write result files.</p>"
        }
      },
      "documentation":"<p>The S3 location where Identity Resolution Jobs write result files.</p>"
    },
    "S3SourceProperties":{
      "type":"structure",
      "required":["BucketName"],
      "members":{
        "BucketName":{
          "shape":"BucketName",
          "documentation":"<p>The Amazon S3 bucket name where the source files are stored.</p>"
        },
        "BucketPrefix":{
          "shape":"BucketPrefix",
          "documentation":"<p>The object key for the Amazon S3 bucket in which the source files are stored.</p>"
        }
      },
      "documentation":"<p>The properties that are applied when Amazon S3 is being used as the flow source.</p>"
    },
    "SalesforceConnectorOperator":{
      "type":"string",
      "enum":[
        "PROJECTION",
        "LESS_THAN",
        "CONTAINS",
        "GREATER_THAN",
        "BETWEEN",
        "LESS_THAN_OR_EQUAL_TO",
        "GREATER_THAN_OR_EQUAL_TO",
        "EQUAL_TO",
        "NOT_EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    },
    "SalesforceSourceProperties":{
      "type":"structure",
      "required":["Object"],
      "members":{
        "Object":{
          "shape":"Object",
          "documentation":"<p>The object specified in the Salesforce flow source.</p>"
        },
        "EnableDynamicFieldUpdate":{
          "shape":"boolean",
          "documentation":"<p>The flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.</p>"
        },
        "IncludeDeletedRecords":{
          "shape":"boolean",
          "documentation":"<p>Indicates whether Amazon AppFlow includes deleted files in the flow run.</p>"
        }
      },
      "documentation":"<p>The properties that are applied when Salesforce is being used as a source.</p>"
    },
    "ScheduleExpression":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "ScheduleOffset":{
      "type":"long",
      "max":36000,
      "min":0
    },
    "ScheduledTriggerProperties":{
      "type":"structure",
      "required":["ScheduleExpression"],
      "members":{
        "ScheduleExpression":{
          "shape":"ScheduleExpression",
          "documentation":"<p>The scheduling expression that determines the rate at which the schedule will run, for example rate (5 minutes).</p>"
        },
        "DataPullMode":{
          "shape":"DataPullMode",
          "documentation":"<p>Specifies whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run.</p>"
        },
        "ScheduleStartTime":{
          "shape":"Date",
          "documentation":"<p>Specifies the scheduled start time for a scheduled-trigger flow.</p>"
        },
        "ScheduleEndTime":{
          "shape":"Date",
          "documentation":"<p>Specifies the scheduled end time for a scheduled-trigger flow.</p>"
        },
        "Timezone":{
          "shape":"Timezone",
          "documentation":"<p>Specifies the time zone used when referring to the date and time of a scheduled-triggered flow, such as America/New_York.</p>"
        },
        "ScheduleOffset":{
          "shape":"ScheduleOffset",
          "documentation":"<p>Specifies the optional offset that is added to the time interval for a schedule-triggered flow.</p>",
          "box":true
        },
        "FirstExecutionFrom":{
          "shape":"Date",
          "documentation":"<p>Specifies the date range for the records to import from the connector in the first flow run.</p>"
        }
      },
      "documentation":"<p>Specifies the configuration details of a scheduled-trigger flow that you define. Currently, these settings only apply to the scheduled-trigger type.</p>"
    },
    "SearchProfilesRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "KeyName",
        "Values"
      ],
      "members":{
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous SearchProfiles API call.</p>",
          "location":"querystring",
          "locationName":"next-token"
        },
        "MaxResults":{
          "shape":"maxSize100",
          "documentation":"<p>The maximum number of objects returned per page.</p> <p>The default is 20 if this parameter is not included in the request.</p>",
          "location":"querystring",
          "locationName":"max-results"
        },
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "KeyName":{
          "shape":"name",
          "documentation":"<p>A searchable identifier of a customer profile. The predefined keys you can use to search include: _account, _profileId, _assetId, _caseId, _orderId, _fullName, _phone, _email, _ctrContactId, _marketoLeadId, _salesforceAccountId, _salesforceContactId, _salesforceAssetId, _zendeskUserId, _zendeskExternalId, _zendeskTicketId, _serviceNowSystemId, _serviceNowIncidentId, _segmentUserId, _shopifyCustomerId, _shopifyOrderId.</p>"
        },
        "Values":{
          "shape":"requestValueList",
          "documentation":"<p>A list of key values.</p>"
        },
        "AdditionalSearchKeys":{
          "shape":"additionalSearchKeysList",
          "documentation":"<p>A list of <code>AdditionalSearchKey</code> objects that are each searchable identifiers of a profile. Each <code>AdditionalSearchKey</code> object contains a <code>KeyName</code> and a list of <code>Values</code> associated with that specific key (i.e., a key-value(s) pair). These additional search keys will be used in conjunction with the <code>LogicalOperator</code> and the required <code>KeyName</code> and <code>Values</code> parameters to search for profiles that satisfy the search criteria. </p>"
        },
        "LogicalOperator":{
          "shape":"logicalOperator",
          "documentation":"<p>Relationship between all specified search keys that will be used to search for profiles. This includes the required <code>KeyName</code> and <code>Values</code> parameters as well as any key-value(s) pairs specified in the <code>AdditionalSearchKeys</code> list.</p> <p>This parameter influences which profiles will be returned in the response in the following manner:</p> <ul> <li> <p> <code>AND</code> - The response only includes profiles that match all of the search keys.</p> </li> <li> <p> <code>OR</code> - The response includes profiles that match at least one of the search keys.</p> </li> </ul> <p>The <code>OR</code> relationship is the default behavior if this parameter is not included in the request.</p>"
        }
      }
    },
    "SearchProfilesResponse":{
      "type":"structure",
      "members":{
        "Items":{
          "shape":"ProfileList",
          "documentation":"<p>The list of Profiles matching the search criteria.</p>"
        },
        "NextToken":{
          "shape":"token",
          "documentation":"<p>The pagination token from the previous SearchProfiles API call.</p>"
        }
      }
    },
    "SegmentDefinitionArn":{
      "type":"string",
      "max":255,
      "min":1
    },
    "SegmentDefinitionItem":{
      "type":"structure",
      "members":{
        "SegmentDefinitionName":{
          "shape":"name",
          "documentation":"<p>Name of the segment definition.</p>",
          "locationName":"SegmentDefinitionName"
        },
        "DisplayName":{
          "shape":"string1To255",
          "documentation":"<p>Display name of the segment definition.</p>",
          "locationName":"DisplayName"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the segment definition.</p>",
          "locationName":"Description"
        },
        "SegmentDefinitionArn":{
          "shape":"SegmentDefinitionArn",
          "documentation":"<p>The arn of the segment definition.</p>",
          "locationName":"SegmentDefinitionArn"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>When the segment definition was created.</p>",
          "locationName":"CreatedAt"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags belonging to the segment definition.</p>",
          "locationName":"Tags"
        }
      },
      "documentation":"<p>Object holding the segment definition fields.</p>"
    },
    "SegmentDefinitionsList":{
      "type":"list",
      "member":{"shape":"SegmentDefinitionItem"}
    },
    "SegmentGroup":{
      "type":"structure",
      "members":{
        "Groups":{
          "shape":"SegmentGroupList",
          "documentation":"<p>Holds the list of groups within the segment definition.</p>",
          "locationName":"Groups"
        },
        "Include":{
          "shape":"IncludeOptions",
          "documentation":"<p>Defines whether to include or exclude the profiles that fit the segment criteria.</p>",
          "locationName":"Include"
        }
      },
      "documentation":"<p>Contains all groups of the segment definition.</p>",
      "sensitive":true
    },
    "SegmentGroupList":{
      "type":"list",
      "member":{"shape":"Group"}
    },
    "SegmentGroupStructure":{
      "type":"structure",
      "members":{
        "Groups":{
          "shape":"SegmentGroupList",
          "documentation":"<p>Holds the list of groups within the segment definition.</p>"
        },
        "Include":{
          "shape":"IncludeOptions",
          "documentation":"<p>Define whether to include or exclude the profiles that fit the segment criteria.</p>"
        }
      },
      "documentation":"<p>Contains all groups of the segment definition.</p>"
    },
    "SegmentSnapshotStatus":{
      "type":"string",
      "enum":[
        "COMPLETED",
        "IN_PROGRESS",
        "FAILED"
      ]
    },
    "ServiceNowConnectorOperator":{
      "type":"string",
      "enum":[
        "PROJECTION",
        "CONTAINS",
        "LESS_THAN",
        "GREATER_THAN",
        "BETWEEN",
        "LESS_THAN_OR_EQUAL_TO",
        "GREATER_THAN_OR_EQUAL_TO",
        "EQUAL_TO",
        "NOT_EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    },
    "ServiceNowSourceProperties":{
      "type":"structure",
      "required":["Object"],
      "members":{
        "Object":{
          "shape":"Object",
          "documentation":"<p>The object specified in the ServiceNow flow source.</p>"
        }
      },
      "documentation":"<p>The properties that are applied when ServiceNow is being used as a source.</p>"
    },
    "SourceConnectorProperties":{
      "type":"structure",
      "members":{
        "Marketo":{
          "shape":"MarketoSourceProperties",
          "documentation":"<p>The properties that are applied when Marketo is being used as a source.</p>"
        },
        "S3":{
          "shape":"S3SourceProperties",
          "documentation":"<p>The properties that are applied when Amazon S3 is being used as the flow source.</p>"
        },
        "Salesforce":{
          "shape":"SalesforceSourceProperties",
          "documentation":"<p>The properties that are applied when Salesforce is being used as a source.</p>"
        },
        "ServiceNow":{
          "shape":"ServiceNowSourceProperties",
          "documentation":"<p>The properties that are applied when ServiceNow is being used as a source.</p>"
        },
        "Zendesk":{
          "shape":"ZendeskSourceProperties",
          "documentation":"<p>The properties that are applied when using Zendesk as a flow source.</p>"
        }
      },
      "documentation":"<p>Specifies the information that is required to query a particular Amazon AppFlow connector. Customer Profiles supports Salesforce, Zendesk, Marketo, ServiceNow and Amazon S3.</p>"
    },
    "SourceConnectorType":{
      "type":"string",
      "enum":[
        "Salesforce",
        "Marketo",
        "Zendesk",
        "Servicenow",
        "S3"
      ]
    },
    "SourceFields":{
      "type":"list",
      "member":{"shape":"stringTo2048"}
    },
    "SourceFlowConfig":{
      "type":"structure",
      "required":[
        "ConnectorType",
        "SourceConnectorProperties"
      ],
      "members":{
        "ConnectorProfileName":{
          "shape":"ConnectorProfileName",
          "documentation":"<p>The name of the AppFlow connector profile. This name must be unique for each connector profile in the AWS account.</p>"
        },
        "ConnectorType":{
          "shape":"SourceConnectorType",
          "documentation":"<p>The type of connector, such as Salesforce, Marketo, and so on.</p>"
        },
        "IncrementalPullConfig":{
          "shape":"IncrementalPullConfig",
          "documentation":"<p>Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull.</p>"
        },
        "SourceConnectorProperties":{
          "shape":"SourceConnectorProperties",
          "documentation":"<p>Specifies the information that is required to query a particular source connector.</p>"
        }
      },
      "documentation":"<p>Contains information about the configuration of the source connector used in the flow.</p>"
    },
    "SourceSegment":{
      "type":"structure",
      "members":{
        "SegmentDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the segment definition.</p>",
          "locationName":"SegmentDefinitionName"
        }
      },
      "documentation":"<p>The source segments to build off of.</p>"
    },
    "SourceSegmentList":{
      "type":"list",
      "member":{"shape":"SourceSegment"}
    },
    "StandardIdentifier":{
      "type":"string",
      "enum":[
        "PROFILE",
        "ASSET",
        "CASE",
        "ORDER",
        "COMMUNICATION_RECORD",
        "AIR_PREFERENCE",
        "HOTEL_PREFERENCE",
        "AIR_BOOKING",
        "AIR_SEGMENT",
        "HOTEL_RESERVATION",
        "HOTEL_STAY_REVENUE",
        "LOYALTY",
        "LOYALTY_TRANSACTION",
        "LOYALTY_PROMOTION",
        "UNIQUE",
        "SECONDARY",
        "LOOKUP_ONLY",
        "NEW_ONLY"
      ]
    },
    "StandardIdentifierList":{
      "type":"list",
      "member":{"shape":"StandardIdentifier"}
    },
    "Start":{"type":"integer"},
    "StartUploadJobRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "JobId"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain containing the upload job to start. </p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "JobId":{
          "shape":"name",
          "documentation":"<p>The unique identifier of the upload job to start. </p>",
          "location":"uri",
          "locationName":"JobId"
        }
      }
    },
    "StartUploadJobResponse":{
      "type":"structure",
      "members":{}
    },
    "Statistic":{
      "type":"string",
      "enum":[
        "FIRST_OCCURRENCE",
        "LAST_OCCURRENCE",
        "COUNT",
        "SUM",
        "MINIMUM",
        "MAXIMUM",
        "AVERAGE",
        "MAX_OCCURRENCE"
      ],
      "sensitive":true
    },
    "Status":{
      "type":"string",
      "enum":[
        "NOT_STARTED",
        "IN_PROGRESS",
        "COMPLETE",
        "FAILED",
        "SPLIT",
        "RETRY",
        "CANCELLED"
      ]
    },
    "StatusCode":{"type":"integer"},
    "StatusReason":{
      "type":"string",
      "enum":[
        "VALIDATION_FAILURE",
        "INTERNAL_FAILURE"
      ]
    },
    "StopUploadJobRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "JobId"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain containing the upload job to stop. </p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "JobId":{
          "shape":"name",
          "documentation":"<p>The unique identifier of the upload job to stop. </p>",
          "location":"uri",
          "locationName":"JobId"
        }
      }
    },
    "StopUploadJobResponse":{
      "type":"structure",
      "members":{}
    },
    "String":{"type":"string"},
    "StringDimensionType":{
      "type":"string",
      "enum":[
        "INCLUSIVE",
        "EXCLUSIVE",
        "CONTAINS",
        "BEGINS_WITH",
        "ENDS_WITH"
      ]
    },
    "TagArn":{
      "type":"string",
      "max":256,
      "pattern":"^arn:[a-z0-9]{1,10}:profile"
    },
    "TagKey":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^(?!aws:)[a-zA-Z+-=._:/]+$"
    },
    "TagKeyList":{
      "type":"list",
      "member":{"shape":"TagKey"},
      "max":50,
      "min":1
    },
    "TagMap":{
      "type":"map",
      "key":{"shape":"TagKey"},
      "value":{"shape":"TagValue"},
      "max":50,
      "min":1
    },
    "TagResourceRequest":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tags"
      ],
      "members":{
        "resourceArn":{
          "shape":"TagArn",
          "documentation":"<p>The ARN of the resource that you're adding tags to.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "TagResourceResponse":{
      "type":"structure",
      "members":{}
    },
    "TagValue":{
      "type":"string",
      "max":256
    },
    "Task":{
      "type":"structure",
      "required":[
        "SourceFields",
        "TaskType"
      ],
      "members":{
        "ConnectorOperator":{
          "shape":"ConnectorOperator",
          "documentation":"<p>The operation to be performed on the provided source fields.</p>"
        },
        "DestinationField":{
          "shape":"DestinationField",
          "documentation":"<p>A field in a destination connector, or a field value against which Amazon AppFlow validates a source field.</p>"
        },
        "SourceFields":{
          "shape":"SourceFields",
          "documentation":"<p>The source fields to which a particular task is applied.</p>"
        },
        "TaskProperties":{
          "shape":"TaskPropertiesMap",
          "documentation":"<p>A map used to store task-related information. The service looks for particular information based on the TaskType.</p>"
        },
        "TaskType":{
          "shape":"TaskType",
          "documentation":"<p>Specifies the particular task implementation that Amazon AppFlow performs.</p>"
        }
      },
      "documentation":"<p>A class for modeling different type of tasks. Task implementation varies based on the TaskType.</p>"
    },
    "TaskPropertiesMap":{
      "type":"map",
      "key":{"shape":"OperatorPropertiesKeys"},
      "value":{"shape":"Property"}
    },
    "TaskType":{
      "type":"string",
      "enum":[
        "Arithmetic",
        "Filter",
        "Map",
        "Mask",
        "Merge",
        "Truncate",
        "Validate"
      ]
    },
    "Tasks":{
      "type":"list",
      "member":{"shape":"Task"}
    },
    "Threshold":{
      "type":"structure",
      "required":[
        "Value",
        "Operator"
      ],
      "members":{
        "Value":{
          "shape":"string1To255",
          "documentation":"<p>The value of the threshold.</p>"
        },
        "Operator":{
          "shape":"Operator",
          "documentation":"<p>The operator of the threshold.</p>"
        }
      },
      "documentation":"<p>The threshold for the calculated attribute.</p>"
    },
    "ThrottlingException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"message"}
      },
      "documentation":"<p>You exceeded the maximum number of requests.</p>",
      "error":{"httpStatusCode":429},
      "exception":true
    },
    "Timezone":{
      "type":"string",
      "max":256,
      "pattern":".*"
    },
    "TriggerConfig":{
      "type":"structure",
      "required":["TriggerType"],
      "members":{
        "TriggerType":{
          "shape":"TriggerType",
          "documentation":"<p>Specifies the type of flow trigger. It can be OnDemand, Scheduled, or Event.</p>"
        },
        "TriggerProperties":{
          "shape":"TriggerProperties",
          "documentation":"<p>Specifies the configuration details of a schedule-triggered flow that you define. Currently, these settings only apply to the Scheduled trigger type.</p>"
        }
      },
      "documentation":"<p>The trigger settings that determine how and when Amazon AppFlow runs the specified flow.</p>"
    },
    "TriggerProperties":{
      "type":"structure",
      "members":{
        "Scheduled":{
          "shape":"ScheduledTriggerProperties",
          "documentation":"<p>Specifies the configuration details of a schedule-triggered flow that you define.</p>"
        }
      },
      "documentation":"<p>Specifies the configuration details that control the trigger for a flow. Currently, these settings only apply to the Scheduled trigger type.</p>"
    },
    "TriggerType":{
      "type":"string",
      "enum":[
        "Scheduled",
        "Event",
        "OnDemand"
      ]
    },
    "Type":{
      "type":"string",
      "enum":[
        "ALL",
        "ANY",
        "NONE"
      ]
    },
    "Unit":{
      "type":"string",
      "enum":["DAYS"]
    },
    "UntagResourceRequest":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tagKeys"
      ],
      "members":{
        "resourceArn":{
          "shape":"TagArn",
          "documentation":"<p>The ARN of the resource from which you are removing tags.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tagKeys":{
          "shape":"TagKeyList",
          "documentation":"<p>The list of tag keys to remove from the resource.</p>",
          "location":"querystring",
          "locationName":"tagKeys"
        }
      }
    },
    "UntagResourceResponse":{
      "type":"structure",
      "members":{}
    },
    "UpdateAddress":{
      "type":"structure",
      "members":{
        "Address1":{
          "shape":"string0To255",
          "documentation":"<p>The first line of a customer address.</p>"
        },
        "Address2":{
          "shape":"string0To255",
          "documentation":"<p>The second line of a customer address.</p>"
        },
        "Address3":{
          "shape":"string0To255",
          "documentation":"<p>The third line of a customer address.</p>"
        },
        "Address4":{
          "shape":"string0To255",
          "documentation":"<p>The fourth line of a customer address.</p>"
        },
        "City":{
          "shape":"string0To255",
          "documentation":"<p>The city in which a customer lives.</p>"
        },
        "County":{
          "shape":"string0To255",
          "documentation":"<p>The county in which a customer lives.</p>"
        },
        "State":{
          "shape":"string0To255",
          "documentation":"<p>The state in which a customer lives.</p>"
        },
        "Province":{
          "shape":"string0To255",
          "documentation":"<p>The province in which a customer lives.</p>"
        },
        "Country":{
          "shape":"string0To255",
          "documentation":"<p>The country in which a customer lives.</p>"
        },
        "PostalCode":{
          "shape":"string0To255",
          "documentation":"<p>The postal code of a customer address.</p>"
        }
      },
      "documentation":"<p>Updates associated with the address properties of a customer profile.</p>",
      "sensitive":true
    },
    "UpdateAttributes":{
      "type":"map",
      "key":{"shape":"string1To255"},
      "value":{"shape":"string0To255"},
      "sensitive":true
    },
    "UpdateCalculatedAttributeDefinitionRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "CalculatedAttributeName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>",
          "location":"uri",
          "locationName":"CalculatedAttributeName"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the calculated attribute.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the calculated attribute.</p>"
        },
        "Conditions":{
          "shape":"Conditions",
          "documentation":"<p>The conditions including range, object count, and threshold for the calculated attribute.</p>"
        }
      }
    },
    "UpdateCalculatedAttributeDefinitionResponse":{
      "type":"structure",
      "members":{
        "CalculatedAttributeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the calculated attribute.</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the calculated attribute.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the calculated attribute.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the calculated attribute definition was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the calculated attribute definition was most recently edited.</p>"
        },
        "Statistic":{
          "shape":"Statistic",
          "documentation":"<p>The aggregation operation to perform for the calculated attribute.</p>"
        },
        "Conditions":{
          "shape":"Conditions",
          "documentation":"<p>The conditions including range, object count, and threshold for the calculated attribute.</p>"
        },
        "AttributeDetails":{
          "shape":"AttributeDetails",
          "documentation":"<p>The mathematical expression and a list of attribute items specified in that expression.</p>"
        },
        "UseHistoricalData":{
          "shape":"optionalBoolean",
          "documentation":"<p>Whether historical data ingested before the Calculated Attribute was created should be included in calculations.</p>"
        },
        "Status":{
          "shape":"ReadinessStatus",
          "documentation":"<p>Status of the Calculated Attribute creation (whether all historical data has been indexed.)</p>"
        },
        "Readiness":{
          "shape":"Readiness",
          "documentation":"<p>Information indicating if the Calculated Attribute is ready for use by confirming all historical data has been processed and reflected.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "UpdateDomainLayoutRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "LayoutDefinitionName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "LayoutDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the layout.</p>",
          "location":"uri",
          "locationName":"LayoutDefinitionName"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the layout</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the layout</p>"
        },
        "IsDefault":{
          "shape":"boolean",
          "documentation":"<p>If set to true for a layout, this layout will be used by default to view data. If set to false, then the layout will not be used by default, but it can be used to view data by explicitly selecting it in the console.</p>"
        },
        "LayoutType":{
          "shape":"LayoutType",
          "documentation":"<p>The type of layout that can be used to view data under a Customer Profiles domain.</p>"
        },
        "Layout":{
          "shape":"sensitiveString1To2000000",
          "documentation":"<p>A customizable layout that can be used to view data under a Customer Profiles domain.</p>"
        }
      }
    },
    "UpdateDomainLayoutResponse":{
      "type":"structure",
      "members":{
        "LayoutDefinitionName":{
          "shape":"name",
          "documentation":"<p>The unique name of the layout.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the layout</p>"
        },
        "DisplayName":{
          "shape":"displayName",
          "documentation":"<p>The display name of the layout</p>"
        },
        "IsDefault":{
          "shape":"boolean",
          "documentation":"<p>If set to true for a layout, this layout will be used by default to view data. If set to false, then the layout will not be used by default, but it can be used to view data by explicitly selecting it in the console.</p>"
        },
        "LayoutType":{
          "shape":"LayoutType",
          "documentation":"<p>The type of layout that can be used to view data under a Customer Profiles domain.</p>"
        },
        "Layout":{
          "shape":"sensitiveString1To2000000",
          "documentation":"<p>A customizable layout that can be used to view data under a Customer Profiles domain.</p>"
        },
        "Version":{
          "shape":"string1To255",
          "documentation":"<p>The version used to create layout.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the layout was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the layout was most recently updated.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "UpdateDomainRequest":{
      "type":"structure",
      "required":["DomainName"],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "DefaultExpirationDays":{
          "shape":"expirationDaysInteger",
          "documentation":"<p>The default number of days until the data within the domain expires.</p>"
        },
        "DefaultEncryptionKey":{
          "shape":"encryptionKey",
          "documentation":"<p>The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage. If specified as an empty string, it will clear any existing value.</p>"
        },
        "DeadLetterQueueUrl":{
          "shape":"sqsQueueUrl",
          "documentation":"<p>The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications. If specified as an empty string, it will clear any existing value. You must set up a policy on the DeadLetterQueue for the SendMessage operation to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue.</p>"
        },
        "Matching":{
          "shape":"MatchingRequest",
          "documentation":"<p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p>"
        },
        "RuleBasedMatching":{
          "shape":"RuleBasedMatchingRequest",
          "documentation":"<p>The process of matching duplicate profiles using the rule-Based matching. If <code>RuleBasedMatching</code> = true, Amazon Connect Customer Profiles will start to match and merge your profiles according to your configuration in the <code>RuleBasedMatchingRequest</code>. You can use the <code>ListRuleBasedMatches</code> and <code>GetSimilarProfiles</code> API to return and review the results. Also, if you have configured <code>ExportingConfig</code> in the <code>RuleBasedMatchingRequest</code>, you can download the results from S3.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "UpdateDomainResponse":{
      "type":"structure",
      "required":[
        "DomainName",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>"
        },
        "DefaultExpirationDays":{
          "shape":"expirationDaysInteger",
          "documentation":"<p>The default number of days until the data within the domain expires.</p>"
        },
        "DefaultEncryptionKey":{
          "shape":"encryptionKey",
          "documentation":"<p>The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.</p>"
        },
        "DeadLetterQueueUrl":{
          "shape":"sqsQueueUrl",
          "documentation":"<p>The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications.</p>"
        },
        "Matching":{
          "shape":"MatchingResponse",
          "documentation":"<p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p>"
        },
        "RuleBasedMatching":{
          "shape":"RuleBasedMatchingResponse",
          "documentation":"<p>The process of matching duplicate profiles using the rule-Based matching. If <code>RuleBasedMatching</code> = true, Amazon Connect Customer Profiles will start to match and merge your profiles according to your configuration in the <code>RuleBasedMatchingRequest</code>. You can use the <code>ListRuleBasedMatches</code> and <code>GetSimilarProfiles</code> API to return and review the results. Also, if you have configured <code>ExportingConfig</code> in the <code>RuleBasedMatchingRequest</code>, you can download the results from S3.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the domain was most recently edited.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>The tags used to organize, track, or control access for this resource.</p>"
        }
      }
    },
    "UpdateEventTriggerRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "EventTriggerName"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "EventTriggerName":{
          "shape":"name",
          "documentation":"<p>The unique name of the event trigger.</p>",
          "location":"uri",
          "locationName":"EventTriggerName"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the object type.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the event trigger.</p>"
        },
        "EventTriggerConditions":{
          "shape":"EventTriggerConditions",
          "documentation":"<p>A list of conditions that determine when an event should trigger the destination.</p>"
        },
        "SegmentFilter":{
          "shape":"name",
          "documentation":"<p>The destination is triggered only for profiles that meet the criteria of a segment definition.</p>"
        },
        "EventTriggerLimits":{
          "shape":"EventTriggerLimits",
          "documentation":"<p>Defines limits controlling whether an event triggers the destination, based on ingestion latency and the number of invocations per profile over specific time periods.</p>"
        }
      }
    },
    "UpdateEventTriggerResponse":{
      "type":"structure",
      "members":{
        "EventTriggerName":{
          "shape":"name",
          "documentation":"<p>The unique name of the event trigger.</p>"
        },
        "ObjectTypeName":{
          "shape":"typeName",
          "documentation":"<p>The unique name of the object type.</p>"
        },
        "Description":{
          "shape":"sensitiveText",
          "documentation":"<p>The description of the event trigger.</p>"
        },
        "EventTriggerConditions":{
          "shape":"EventTriggerConditions",
          "documentation":"<p>A list of conditions that determine when an event should trigger the destination.</p>"
        },
        "SegmentFilter":{
          "shape":"name",
          "documentation":"<p>The destination is triggered only for profiles that meet the criteria of a segment definition.</p>"
        },
        "EventTriggerLimits":{
          "shape":"EventTriggerLimits",
          "documentation":"<p>Defines limits controlling whether an event triggers the destination, based on ingestion latency and the number of invocations per profile over specific time periods.</p>"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the event trigger was created.</p>"
        },
        "LastUpdatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp of when the event trigger was most recently updated.</p>"
        },
        "Tags":{
          "shape":"TagMap",
          "documentation":"<p>An array of key-value pairs to apply to this resource.</p>"
        }
      }
    },
    "UpdateProfileRequest":{
      "type":"structure",
      "required":[
        "DomainName",
        "ProfileId"
      ],
      "members":{
        "DomainName":{
          "shape":"name",
          "documentation":"<p>The unique name of the domain.</p>",
          "location":"uri",
          "locationName":"DomainName"
        },
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of a customer profile.</p>"
        },
        "AdditionalInformation":{
          "shape":"sensitiveString0To1000",
          "documentation":"<p>Any additional information relevant to the customer’s profile.</p>"
        },
        "AccountNumber":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>An account number that you have assigned to the customer.</p>"
        },
        "PartyType":{
          "shape":"PartyType",
          "documentation":"<p>The type of profile used to describe the customer.</p>"
        },
        "BusinessName":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>The name of the customer’s business.</p>"
        },
        "FirstName":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>The customer’s first name.</p>"
        },
        "MiddleName":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>The customer’s middle name.</p>"
        },
        "LastName":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>The customer’s last name.</p>"
        },
        "BirthDate":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>The customer’s birth date. </p>"
        },
        "Gender":{
          "shape":"Gender",
          "documentation":"<p>The gender with which the customer identifies. </p>"
        },
        "PhoneNumber":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>The customer’s phone number, which has not been specified as a mobile, home, or business number. </p>"
        },
        "MobilePhoneNumber":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>The customer’s mobile phone number.</p>"
        },
        "HomePhoneNumber":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>The customer’s home phone number.</p>"
        },
        "BusinessPhoneNumber":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>The customer’s business phone number.</p>"
        },
        "EmailAddress":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>The customer’s email address, which has not been specified as a personal or business address. </p>"
        },
        "PersonalEmailAddress":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>The customer’s personal email address.</p>"
        },
        "BusinessEmailAddress":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>The customer’s business email address.</p>"
        },
        "Address":{
          "shape":"UpdateAddress",
          "documentation":"<p>A generic address associated with the customer that is not mailing, shipping, or billing.</p>"
        },
        "ShippingAddress":{
          "shape":"UpdateAddress",
          "documentation":"<p>The customer’s shipping address.</p>"
        },
        "MailingAddress":{
          "shape":"UpdateAddress",
          "documentation":"<p>The customer’s mailing address.</p>"
        },
        "BillingAddress":{
          "shape":"UpdateAddress",
          "documentation":"<p>The customer’s billing address.</p>"
        },
        "Attributes":{
          "shape":"UpdateAttributes",
          "documentation":"<p>A key value pair of attributes of a customer profile.</p>"
        },
        "PartyTypeString":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>An alternative to <code>PartyType</code> which accepts any string as input.</p>"
        },
        "GenderString":{
          "shape":"sensitiveString0To255",
          "documentation":"<p>An alternative to <code>Gender</code> which accepts any string as input.</p>"
        },
        "ProfileType":{
          "shape":"ProfileType",
          "documentation":"<p>Determines the type of the profile.</p>"
        },
        "EngagementPreferences":{
          "shape":"EngagementPreferences",
          "documentation":"<p>Object that defines users preferred methods of engagement.</p>"
        }
      }
    },
    "UpdateProfileResponse":{
      "type":"structure",
      "required":["ProfileId"],
      "members":{
        "ProfileId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of a customer profile.</p>"
        }
      }
    },
    "UploadJobItem":{
      "type":"structure",
      "members":{
        "JobId":{
          "shape":"uuid",
          "documentation":"<p>The unique identifier of the upload job. </p>",
          "locationName":"JobId"
        },
        "DisplayName":{
          "shape":"string1To255",
          "documentation":"<p>The name of the upload job. </p>",
          "locationName":"DisplayName"
        },
        "Status":{
          "shape":"UploadJobStatus",
          "documentation":"<p>The current status of the upload job. </p>",
          "locationName":"Status"
        },
        "StatusReason":{
          "shape":"StatusReason",
          "documentation":"<p>The reason for the current status of the upload job. </p>",
          "locationName":"StatusReason"
        },
        "CreatedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp when the upload job was created. </p>",
          "locationName":"CreatedAt"
        },
        "CompletedAt":{
          "shape":"timestamp",
          "documentation":"<p>The timestamp when the upload job was completed. </p>",
          "locationName":"CompletedAt"
        },
        "DataExpiry":{
          "shape":"expirationDaysInteger",
          "documentation":"<p>The expiry duration for the profiles ingested with the upload job. </p>",
          "locationName":"DataExpiry"
        }
      },
      "documentation":"<p>The summary information for an individual upload job. </p>"
    },
    "UploadJobStatus":{
      "type":"string",
      "enum":[
        "CREATED",
        "IN_PROGRESS",
        "PARTIALLY_SUCCEEDED",
        "SUCCEEDED",
        "FAILED",
        "STOPPED"
      ]
    },
    "UploadJobsList":{
      "type":"list",
      "member":{"shape":"UploadJobItem"}
    },
    "Value":{
      "type":"integer",
      "max":2147483647,
      "min":0
    },
    "ValueList":{
      "type":"list",
      "member":{"shape":"string1To255"},
      "max":10,
      "min":1
    },
    "ValueRange":{
      "type":"structure",
      "required":[
        "Start",
        "End"
      ],
      "members":{
        "Start":{
          "shape":"ValueRangeStart",
          "documentation":"<p>The start time of when to include objects. Use positive numbers to indicate that the starting point is in the past, and negative numbers to indicate it is in the future.</p>"
        },
        "End":{
          "shape":"ValueRangeEnd",
          "documentation":"<p>The end time of when to include objects. Use positive numbers to indicate that the starting point is in the past, and negative numbers to indicate it is in the future.</p>"
        }
      },
      "documentation":"<p>A structure letting customers specify a relative time window over which over which data is included in the Calculated Attribute. Use positive numbers to indicate that the endpoint is in the past, and negative numbers to indicate it is in the future. ValueRange overrides Value.</p>"
    },
    "ValueRangeEnd":{"type":"integer"},
    "ValueRangeStart":{"type":"integer"},
    "Values":{
      "type":"list",
      "member":{"shape":"string1To255"},
      "max":50,
      "min":1
    },
    "WorkflowAttributes":{
      "type":"structure",
      "members":{
        "AppflowIntegration":{
          "shape":"AppflowIntegrationWorkflowAttributes",
          "documentation":"<p>Workflow attributes specific to <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        }
      },
      "documentation":"<p>Structure to hold workflow attributes.</p>"
    },
    "WorkflowList":{
      "type":"list",
      "member":{"shape":"ListWorkflowsItem"}
    },
    "WorkflowMetrics":{
      "type":"structure",
      "members":{
        "AppflowIntegration":{
          "shape":"AppflowIntegrationWorkflowMetrics",
          "documentation":"<p>Workflow execution metrics for <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        }
      },
      "documentation":"<p>Generic object containing workflow execution metrics.</p>"
    },
    "WorkflowStepItem":{
      "type":"structure",
      "members":{
        "AppflowIntegration":{
          "shape":"AppflowIntegrationWorkflowStep",
          "documentation":"<p>Workflow step information specific to <code>APPFLOW_INTEGRATION</code> workflow.</p>"
        }
      },
      "documentation":"<p>List containing steps in workflow.</p>"
    },
    "WorkflowStepsList":{
      "type":"list",
      "member":{"shape":"WorkflowStepItem"}
    },
    "WorkflowType":{
      "type":"string",
      "enum":["APPFLOW_INTEGRATION"]
    },
    "ZendeskConnectorOperator":{
      "type":"string",
      "enum":[
        "PROJECTION",
        "GREATER_THAN",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ]
    },
    "ZendeskSourceProperties":{
      "type":"structure",
      "required":["Object"],
      "members":{
        "Object":{
          "shape":"Object",
          "documentation":"<p>The object specified in the Zendesk flow source.</p>"
        }
      },
      "documentation":"<p>The properties that are applied when using Zendesk as a flow source.</p>"
    },
    "additionalSearchKeysList":{
      "type":"list",
      "member":{"shape":"AdditionalSearchKey"},
      "max":4,
      "min":1
    },
    "attributeName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[a-zA-Z0-9_.-]+$"
    },
    "boolean":{"type":"boolean"},
    "displayName":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[a-zA-Z_][a-zA-Z_0-9-\\s]*$"
    },
    "encryptionKey":{
      "type":"string",
      "max":255,
      "min":0
    },
    "expirationDaysInteger":{
      "type":"integer",
      "max":1098,
      "min":1
    },
    "fieldName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[a-zA-Z0-9_.-]+$"
    },
    "foundByList":{
      "type":"list",
      "member":{"shape":"FoundByKeyValue"},
      "max":5,
      "min":1
    },
    "logicalOperator":{
      "type":"string",
      "enum":[
        "AND",
        "OR"
      ]
    },
    "long":{"type":"long"},
    "matchesNumber":{
      "type":"integer",
      "min":0
    },
    "maxSize100":{
      "type":"integer",
      "max":100,
      "min":1
    },
    "maxSize1000":{
      "type":"integer",
      "max":1000,
      "min":1
    },
    "maxSize24":{
      "type":"integer",
      "max":24,
      "min":1
    },
    "message":{"type":"string"},
    "minSize0":{
      "type":"integer",
      "min":0
    },
    "minSize1":{
      "type":"integer",
      "min":1
    },
    "optionalBoolean":{"type":"boolean"},
    "optionalLong":{"type":"long"},
    "percentageInteger":{
      "type":"integer",
      "max":100,
      "min":0
    },
    "requestValueList":{
      "type":"list",
      "member":{"shape":"string1To255"}
    },
    "s3BucketName":{
      "type":"string",
      "max":63,
      "min":3,
      "pattern":"^[a-z0-9.-]+$"
    },
    "s3KeyName":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":".*"
    },
    "s3KeyNameCustomerOutputConfig":{
      "type":"string",
      "max":800,
      "min":1,
      "pattern":".*"
    },
    "sensitiveString0To1000":{
      "type":"string",
      "max":1000,
      "min":0,
      "sensitive":true
    },
    "sensitiveString0To255":{
      "type":"string",
      "max":255,
      "min":0,
      "sensitive":true
    },
    "sensitiveString1To1000":{
      "type":"string",
      "max":1000,
      "min":1,
      "sensitive":true
    },
    "sensitiveString1To2000000":{
      "type":"string",
      "max":2000000,
      "min":1,
      "sensitive":true
    },
    "sensitiveString1To255":{
      "type":"string",
      "max":255,
      "min":1,
      "sensitive":true
    },
    "sensitiveText":{
      "type":"string",
      "max":1000,
      "min":1,
      "sensitive":true
    },
    "sqsQueueUrl":{
      "type":"string",
      "max":255,
      "min":0
    },
    "string0To255":{
      "type":"string",
      "max":255,
      "min":0
    },
    "string1To1000":{
      "type":"string",
      "max":1000,
      "min":1
    },
    "string1To255":{
      "type":"string",
      "max":255,
      "min":1
    },
    "stringTo2048":{
      "type":"string",
      "max":2048,
      "pattern":".*"
    },
    "stringifiedJson":{
      "type":"string",
      "max":256000,
      "min":1,
      "sensitive":true
    },
    "text":{
      "type":"string",
      "max":1000,
      "min":1
    },
    "timestamp":{"type":"timestamp"},
    "token":{
      "type":"string",
      "max":1024,
      "min":1
    },
    "typeName":{
      "type":"string",
      "max":255,
      "min":1,
      "pattern":"^[a-zA-Z_][a-zA-Z_0-9-]*$"
    },
    "uuid":{
      "type":"string",
      "pattern":"[a-f0-9]{32}"
    }
  },
  "documentation":"<fullname>Amazon Connect Customer Profiles</fullname> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/connect/latest/APIReference/API_Operations_Amazon_Connect_Customer_Profiles.html\">Customer Profiles actions</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/connect/latest/APIReference/API_Types_Amazon_Connect_Customer_Profiles.html\">Customer Profiles data types</a> </p> </li> </ul> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center. </p> <p>For more information about the Amazon Connect Customer Profiles feature, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/customer-profiles.html\">Use Customer Profiles</a> in the <i>Amazon Connect Administrator's Guide</i>. </p>"
}
