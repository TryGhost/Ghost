{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2018-05-10",
    "endpointPrefix":"datazone",
    "jsonVersion":"1.1",
    "protocol":"rest-json",
    "protocols":["rest-json"],
    "serviceFullName":"Amazon DataZone",
    "serviceId":"DataZone",
    "signatureVersion":"v4",
    "signingName":"datazone",
    "uid":"datazone-2018-05-10",
    "auth":["aws.auth#sigv4"]
  },
  "operations":{
    "AcceptPredictions":{
      "name":"AcceptPredictions",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{identifier}/accept-predictions",
        "responseCode":200
      },
      "input":{"shape":"AcceptPredictionsInput"},
      "output":{"shape":"AcceptPredictionsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Accepts automatically generated business-friendly metadata for your Amazon DataZone assets.</p>",
      "idempotent":true
    },
    "AcceptSubscriptionRequest":{
      "name":"AcceptSubscriptionRequest",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests/{identifier}/accept",
        "responseCode":200
      },
      "input":{"shape":"AcceptSubscriptionRequestInput"},
      "output":{"shape":"AcceptSubscriptionRequestOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Accepts a subscription request to a specific asset. </p>",
      "idempotent":true
    },
    "AddEntityOwner":{
      "name":"AddEntityOwner",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/addOwner",
        "responseCode":201
      },
      "input":{"shape":"AddEntityOwnerInput"},
      "output":{"shape":"AddEntityOwnerOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Adds the owner of an entity (a domain unit).</p>",
      "idempotent":true
    },
    "AddPolicyGrant":{
      "name":"AddPolicyGrant",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/policies/managed/{entityType}/{entityIdentifier}/addGrant",
        "responseCode":201
      },
      "input":{"shape":"AddPolicyGrantInput"},
      "output":{"shape":"AddPolicyGrantOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Adds a policy grant (an authorization policy) to a specified entity, including domain units, environment blueprint configurations, or environment profiles.</p>",
      "idempotent":true
    },
    "AssociateEnvironmentRole":{
      "name":"AssociateEnvironmentRole",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/roles/{environmentRoleArn}",
        "responseCode":200
      },
      "input":{"shape":"AssociateEnvironmentRoleInput"},
      "output":{"shape":"AssociateEnvironmentRoleOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Associates the environment role in Amazon DataZone.</p>"
    },
    "AssociateGovernedTerms":{
      "name":"AssociateGovernedTerms",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/associate-governed-terms",
        "responseCode":200
      },
      "input":{"shape":"AssociateGovernedTermsInput"},
      "output":{"shape":"AssociateGovernedTermsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Associates governed terms with an asset.</p>"
    },
    "CancelMetadataGenerationRun":{
      "name":"CancelMetadataGenerationRun",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/metadata-generation-runs/{identifier}/cancel",
        "responseCode":200
      },
      "input":{"shape":"CancelMetadataGenerationRunInput"},
      "output":{"shape":"CancelMetadataGenerationRunOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Cancels the metadata generation run.</p> <p>Prerequisites:</p> <ul> <li> <p>The run must exist and be in a cancelable status (e.g., SUBMITTED, IN_PROGRESS). </p> </li> <li> <p>Runs in SUCCEEDED status cannot be cancelled.</p> </li> <li> <p>User must have access to the run and cancel permissions.</p> </li> </ul>"
    },
    "CancelSubscription":{
      "name":"CancelSubscription",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/subscriptions/{identifier}/cancel",
        "responseCode":200
      },
      "input":{"shape":"CancelSubscriptionInput"},
      "output":{"shape":"CancelSubscriptionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Cancels the subscription to the specified asset.</p>",
      "idempotent":true
    },
    "CreateAccountPool":{
      "name":"CreateAccountPool",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/account-pools",
        "responseCode":201
      },
      "input":{"shape":"CreateAccountPoolInput"},
      "output":{"shape":"CreateAccountPoolOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an account pool. </p>"
    },
    "CreateAsset":{
      "name":"CreateAsset",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/assets",
        "responseCode":201
      },
      "input":{"shape":"CreateAssetInput"},
      "output":{"shape":"CreateAssetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an asset in Amazon DataZone catalog.</p> <p>Before creating assets, make sure that the following requirements are met:</p> <ul> <li> <p> <code>--domain-identifier</code> must refer to an existing domain.</p> </li> <li> <p> <code>--owning-project-identifier</code> must be a valid project within the domain.</p> </li> <li> <p>Asset type must be created beforehand using <code>create-asset-type</code>, or be a supported system-defined type. For more information, see <a href=\"https://docs.aws.amazon.com/cli/latest/reference/datazone/create-asset-type.html\">create-asset-type</a>.</p> </li> <li> <p> <code>--type-revision</code> (if used) must match a valid revision of the asset type.</p> </li> <li> <p>Form type must exist and be associated with the asset type. Use <code>create-form-type</code> to define. For more information, see <a href=\"https://docs.aws.amazon.com/cli/latest/reference/datazone/create-form-type.html\">create-form-type</a>.</p> </li> <li> <p>Form content must include all required fields as per the form schema (e.g., <code>bucketArn</code>).</p> </li> </ul> <p>You must invoke the following pre-requisite commands before invoking this API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/datazone/latest/APIReference/API_CreateFormType.html\">CreateFormType</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/datazone/latest/APIReference/API_CreateAssetType.html\">CreateAssetType</a> </p> </li> </ul>",
      "idempotent":true
    },
    "CreateAssetFilter":{
      "name":"CreateAssetFilter",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{assetIdentifier}/filters",
        "responseCode":201
      },
      "input":{"shape":"CreateAssetFilterInput"},
      "output":{"shape":"CreateAssetFilterOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a data asset filter.</p> <p>Asset filters provide a sophisticated way to create controlled views of data assets by selecting specific columns or applying row-level filters. This capability is crucial for organizations that need to share data while maintaining security and privacy controls. For example, your database might be filtered to show only non-PII fields to certain users, or sales data might be filtered by region for different regional teams. Asset filters enable fine-grained access control while maintaining a single source of truth.</p> <p>Prerequisites:</p> <ul> <li> <p>A valid domain (<code>--domain-identifier</code>) must exist. </p> </li> <li> <p>A data asset (<code>--asset-identifier</code>) must already be created under that domain.</p> </li> <li> <p>The asset must have the referenced columns available in its schema for column-based filtering.</p> </li> <li> <p>You cannot specify both (<code>columnConfiguration</code>, <code>rowConfiguration</code>)at the same time.</p> </li> </ul>",
      "idempotent":true
    },
    "CreateAssetRevision":{
      "name":"CreateAssetRevision",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{identifier}/revisions",
        "responseCode":200
      },
      "input":{"shape":"CreateAssetRevisionInput"},
      "output":{"shape":"CreateAssetRevisionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a revision of the asset.</p> <p>Asset revisions represent new versions of existing assets, capturing changes to either the underlying data or its metadata. They maintain a historical record of how assets evolve over time, who made changes, and when those changes occurred. This versioning capability is crucial for governance and compliance, allowing organizations to track changes, understand their impact, and roll back if necessary.</p> <p>Prerequisites:</p> <ul> <li> <p>Asset must already exist in the domain with identifier. </p> </li> <li> <p>The form type with correct revision must be registered in the same domain.</p> </li> <li> <p>The form content must include all required fields (e.g., <code>bucketArn</code> for <code>S3ObjectCollectionForm</code>).</p> </li> <li> <p>The owning project of the original asset must still exist and be active.</p> </li> <li> <p>User must have write access to the project and domain.</p> </li> </ul>",
      "idempotent":true
    },
    "CreateAssetType":{
      "name":"CreateAssetType",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/asset-types",
        "responseCode":201
      },
      "input":{"shape":"CreateAssetTypeInput"},
      "output":{"shape":"CreateAssetTypeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a custom asset type.</p> <p>Prerequisites:</p> <ul> <li> <p>The form type with <code>typeIdentifier</code> and <code>typeRevision</code> must exist and be published. </p> </li> <li> <p>You must have <code>CreateAssetType</code> permissions.</p> </li> <li> <p>The domain-identifier and owning-project-identifier must be valid and active.</p> </li> <li> <p>The name of the asset type must be unique within the domain — duplicate names will cause failure.</p> </li> <li> <p>JSON input must be valid — incorrect formatting causes Invalid JSON errors.</p> </li> </ul>"
    },
    "CreateConnection":{
      "name":"CreateConnection",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/connections",
        "responseCode":201
      },
      "input":{"shape":"CreateConnectionInput"},
      "output":{"shape":"CreateConnectionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a new connection. In Amazon DataZone, a connection enables you to connect your resources (domains, projects, and environments) to external resources and services.</p>",
      "idempotent":true
    },
    "CreateDataProduct":{
      "name":"CreateDataProduct",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/data-products",
        "responseCode":201
      },
      "input":{"shape":"CreateDataProductInput"},
      "output":{"shape":"CreateDataProductOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a data product.</p> <p>A data product is a comprehensive package that combines data assets with their associated metadata, documentation, and access controls. It's designed to serve specific business needs or use cases, making it easier for users to find and consume data appropriately. Data products include important information about data quality, freshness, and usage guidelines, effectively bridging the gap between data producers and consumers while ensuring proper governance.</p> <p>Prerequisites:</p> <ul> <li> <p>The domain must exist and be accessible. </p> </li> <li> <p>The owning project must be valid and active.</p> </li> <li> <p>The name must be unique within the domain (no existing data product with the same name).</p> </li> <li> <p>User must have create permissions for data products in the project.</p> </li> <li> <p>The domain must have Amazon DataZone publishing enabled.</p> </li> </ul>",
      "idempotent":true
    },
    "CreateDataProductRevision":{
      "name":"CreateDataProductRevision",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/data-products/{identifier}/revisions",
        "responseCode":201
      },
      "input":{"shape":"CreateDataProductRevisionInput"},
      "output":{"shape":"CreateDataProductRevisionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a data product revision.</p> <p>Prerequisites:</p> <ul> <li> <p>The original data product must exist in the given domain. </p> </li> <li> <p>User must have permissions on the data product.</p> </li> <li> <p>The domain must be valid and accessible.</p> </li> <li> <p>The new revision name must comply with naming constraints (if required).</p> </li> </ul>",
      "idempotent":true
    },
    "CreateDataSource":{
      "name":"CreateDataSource",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources",
        "responseCode":201
      },
      "input":{"shape":"CreateDataSourceInput"},
      "output":{"shape":"CreateDataSourceOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an Amazon DataZone data source.</p>",
      "idempotent":true
    },
    "CreateDomain":{
      "name":"CreateDomain",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains",
        "responseCode":201
      },
      "input":{"shape":"CreateDomainInput"},
      "output":{"shape":"CreateDomainOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an Amazon DataZone domain.</p>",
      "idempotent":true
    },
    "CreateDomainUnit":{
      "name":"CreateDomainUnit",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/domain-units",
        "responseCode":201
      },
      "input":{"shape":"CreateDomainUnitInput"},
      "output":{"shape":"CreateDomainUnitOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a domain unit in Amazon DataZone.</p>",
      "idempotent":true
    },
    "CreateEnvironment":{
      "name":"CreateEnvironment",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/environments",
        "responseCode":201
      },
      "input":{"shape":"CreateEnvironmentInput"},
      "output":{"shape":"CreateEnvironmentOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Create an Amazon DataZone environment.</p>"
    },
    "CreateEnvironmentAction":{
      "name":"CreateEnvironmentAction",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/actions",
        "responseCode":201
      },
      "input":{"shape":"CreateEnvironmentActionInput"},
      "output":{"shape":"CreateEnvironmentActionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an action for the environment, for example, creates a console link for an analytics tool that is available in this environment.</p>"
    },
    "CreateEnvironmentBlueprint":{
      "name":"CreateEnvironmentBlueprint",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprints",
        "responseCode":201
      },
      "input":{"shape":"CreateEnvironmentBlueprintInput"},
      "output":{"shape":"CreateEnvironmentBlueprintOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a Amazon DataZone blueprint.</p>"
    },
    "CreateEnvironmentProfile":{
      "name":"CreateEnvironmentProfile",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-profiles",
        "responseCode":201
      },
      "input":{"shape":"CreateEnvironmentProfileInput"},
      "output":{"shape":"CreateEnvironmentProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an Amazon DataZone environment profile.</p>"
    },
    "CreateFormType":{
      "name":"CreateFormType",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/form-types",
        "responseCode":201
      },
      "input":{"shape":"CreateFormTypeInput"},
      "output":{"shape":"CreateFormTypeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a metadata form type.</p> <p>Prerequisites:</p> <ul> <li> <p>The domain must exist and be in an <code>ENABLED</code> state. </p> </li> <li> <p>The owning project must exist and be accessible.</p> </li> <li> <p>The name must be unique within the domain.</p> </li> </ul>"
    },
    "CreateGlossary":{
      "name":"CreateGlossary",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/glossaries",
        "responseCode":201
      },
      "input":{"shape":"CreateGlossaryInput"},
      "output":{"shape":"CreateGlossaryOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an Amazon DataZone business glossary.</p> <p>Specifies that this is a create glossary policy.</p> <p>A glossary serves as the central repository for business terminology and definitions within an organization. It helps establish and maintain a common language across different departments and teams, reducing miscommunication and ensuring consistent interpretation of business concepts. Glossaries can include hierarchical relationships between terms, cross-references, and links to actual data assets, making them invaluable for both business users and technical teams trying to understand and use data correctly.</p> <p>Prerequisites:</p> <ul> <li> <p>Domain must exist and be in an active state. </p> </li> <li> <p>Owning project must exist and be accessible by the caller.</p> </li> <li> <p>The glossary name must be unique within the domain.</p> </li> </ul>",
      "idempotent":true
    },
    "CreateGlossaryTerm":{
      "name":"CreateGlossaryTerm",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/glossary-terms",
        "responseCode":201
      },
      "input":{"shape":"CreateGlossaryTermInput"},
      "output":{"shape":"CreateGlossaryTermOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a business glossary term.</p> <p>A glossary term represents an individual entry within the Amazon DataZone glossary, serving as a standardized definition for a specific business concept or data element. Each term can include rich metadata such as detailed definitions, synonyms, related terms, and usage examples. Glossary terms can be linked directly to data assets, providing business context to technical data elements. This linking capability helps users understand the business meaning of data fields and ensures consistent interpretation across different systems and teams. Terms can also have relationships with other terms, creating a semantic network that reflects the complexity of business concepts.</p> <p>Prerequisites:</p> <ul> <li> <p>Domain must exist. </p> </li> <li> <p>Glossary must exist and be in an ENABLED state.</p> </li> <li> <p>The term name must be unique within the glossary.</p> </li> <li> <p>Ensure term does not conflict with existing terms in hierarchy.</p> </li> </ul>",
      "idempotent":true
    },
    "CreateGroupProfile":{
      "name":"CreateGroupProfile",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/group-profiles",
        "responseCode":201
      },
      "input":{"shape":"CreateGroupProfileInput"},
      "output":{"shape":"CreateGroupProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a group profile in Amazon DataZone.</p>",
      "idempotent":true
    },
    "CreateListingChangeSet":{
      "name":"CreateListingChangeSet",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/listings/change-set",
        "responseCode":200
      },
      "input":{"shape":"CreateListingChangeSetInput"},
      "output":{"shape":"CreateListingChangeSetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Publishes a listing (a record of an asset at a given time) or removes a listing from the catalog. </p>"
    },
    "CreateProject":{
      "name":"CreateProject",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/projects",
        "responseCode":201
      },
      "input":{"shape":"CreateProjectInput"},
      "output":{"shape":"CreateProjectOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates an Amazon DataZone project.</p>"
    },
    "CreateProjectMembership":{
      "name":"CreateProjectMembership",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/projects/{projectIdentifier}/createMembership",
        "responseCode":201
      },
      "input":{"shape":"CreateProjectMembershipInput"},
      "output":{"shape":"CreateProjectMembershipOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a project membership in Amazon DataZone.</p>"
    },
    "CreateProjectProfile":{
      "name":"CreateProjectProfile",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/project-profiles",
        "responseCode":201
      },
      "input":{"shape":"CreateProjectProfileInput"},
      "output":{"shape":"CreateProjectProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a project profile.</p>"
    },
    "CreateRule":{
      "name":"CreateRule",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/rules",
        "responseCode":201
      },
      "input":{"shape":"CreateRuleInput"},
      "output":{"shape":"CreateRuleOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a rule in Amazon DataZone. A rule is a formal agreement that enforces specific requirements across user workflows (e.g., publishing assets to the catalog, requesting subscriptions, creating projects) within the Amazon DataZone data portal. These rules help maintain consistency, ensure compliance, and uphold governance standards in data management processes. For instance, a metadata enforcement rule can specify the required information for creating a subscription request or publishing a data asset to the catalog, ensuring alignment with organizational standards.</p>",
      "idempotent":true
    },
    "CreateSubscriptionGrant":{
      "name":"CreateSubscriptionGrant",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-grants",
        "responseCode":200
      },
      "input":{"shape":"CreateSubscriptionGrantInput"},
      "output":{"shape":"CreateSubscriptionGrantOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a subsscription grant in Amazon DataZone.</p>"
    },
    "CreateSubscriptionRequest":{
      "name":"CreateSubscriptionRequest",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests",
        "responseCode":200
      },
      "input":{"shape":"CreateSubscriptionRequestInput"},
      "output":{"shape":"CreateSubscriptionRequestOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a subscription request in Amazon DataZone.</p>"
    },
    "CreateSubscriptionTarget":{
      "name":"CreateSubscriptionTarget",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/subscription-targets",
        "responseCode":200
      },
      "input":{"shape":"CreateSubscriptionTargetInput"},
      "output":{"shape":"CreateSubscriptionTargetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a subscription target in Amazon DataZone.</p>"
    },
    "CreateUserProfile":{
      "name":"CreateUserProfile",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/user-profiles",
        "responseCode":201
      },
      "input":{"shape":"CreateUserProfileInput"},
      "output":{"shape":"CreateUserProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Creates a user profile in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteAccountPool":{
      "name":"DeleteAccountPool",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/account-pools/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteAccountPoolInput"},
      "output":{"shape":"DeleteAccountPoolOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes an account pool.</p>",
      "idempotent":true
    },
    "DeleteAsset":{
      "name":"DeleteAsset",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteAssetInput"},
      "output":{"shape":"DeleteAssetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes an asset in Amazon DataZone.</p> <ul> <li> <p>--domain-identifier must refer to a valid and existing domain. </p> </li> <li> <p>--identifier must refer to an existing asset in the specified domain.</p> </li> <li> <p>Asset must not be referenced in any existing asset filters.</p> </li> <li> <p>Asset must not be linked to any draft or published data product.</p> </li> <li> <p>User must have delete permissions for the domain and project.</p> </li> </ul>",
      "idempotent":true
    },
    "DeleteAssetFilter":{
      "name":"DeleteAssetFilter",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{assetIdentifier}/filters/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteAssetFilterInput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes an asset filter.</p> <p>Prerequisites:</p> <ul> <li> <p>The asset filter must exist. </p> </li> <li> <p>The domain and asset must not have been deleted.</p> </li> <li> <p>Ensure the --identifier refers to a valid filter ID.</p> </li> </ul>",
      "idempotent":true
    },
    "DeleteAssetType":{
      "name":"DeleteAssetType",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/asset-types/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteAssetTypeInput"},
      "output":{"shape":"DeleteAssetTypeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes an asset type in Amazon DataZone.</p> <p>Prerequisites:</p> <ul> <li> <p>The asset type must exist in the domain. </p> </li> <li> <p>You must have DeleteAssetType permission.</p> </li> <li> <p>The asset type must not be in use (e.g., assigned to any asset). If used, deletion will fail.</p> </li> <li> <p>You should retrieve the asset type using get-asset-type to confirm its presence before deletion.</p> </li> </ul>"
    },
    "DeleteConnection":{
      "name":"DeleteConnection",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/connections/{identifier}",
        "responseCode":202
      },
      "input":{"shape":"DeleteConnectionInput"},
      "output":{"shape":"DeleteConnectionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes and connection. In Amazon DataZone, a connection enables you to connect your resources (domains, projects, and environments) to external resources and services.</p>",
      "idempotent":true
    },
    "DeleteDataProduct":{
      "name":"DeleteDataProduct",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/data-products/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteDataProductInput"},
      "output":{"shape":"DeleteDataProductOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a data product in Amazon DataZone.</p> <p>Prerequisites:</p> <ul> <li> <p>The data product must exist and not be deleted or archived. </p> </li> <li> <p>The user must have delete permissions for the data product.</p> </li> <li> <p>Ensure there are no active dependencies (e.g., published links, assets using the product).</p> </li> <li> <p>Domain and project must be active.</p> </li> </ul>",
      "idempotent":true
    },
    "DeleteDataSource":{
      "name":"DeleteDataSource",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"DeleteDataSourceInput"},
      "output":{"shape":"DeleteDataSourceOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a data source in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteDomain":{
      "name":"DeleteDomain",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{identifier}",
        "responseCode":202
      },
      "input":{"shape":"DeleteDomainInput"},
      "output":{"shape":"DeleteDomainOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a Amazon DataZone domain.</p>",
      "idempotent":true
    },
    "DeleteDomainUnit":{
      "name":"DeleteDomainUnit",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/domain-units/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteDomainUnitInput"},
      "output":{"shape":"DeleteDomainUnitOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a domain unit.</p>",
      "idempotent":true
    },
    "DeleteEnvironment":{
      "name":"DeleteEnvironment",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteEnvironmentInput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes an environment in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteEnvironmentAction":{
      "name":"DeleteEnvironmentAction",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/actions/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteEnvironmentActionInput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes an action for the environment, for example, deletes a console link for an analytics tool that is available in this environment.</p>",
      "idempotent":true
    },
    "DeleteEnvironmentBlueprint":{
      "name":"DeleteEnvironmentBlueprint",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprints/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteEnvironmentBlueprintInput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a blueprint in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteEnvironmentBlueprintConfiguration":{
      "name":"DeleteEnvironmentBlueprintConfiguration",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprint-configurations/{environmentBlueprintIdentifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteEnvironmentBlueprintConfigurationInput"},
      "output":{"shape":"DeleteEnvironmentBlueprintConfigurationOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes the blueprint configuration in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteEnvironmentProfile":{
      "name":"DeleteEnvironmentProfile",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-profiles/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteEnvironmentProfileInput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes an environment profile in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteFormType":{
      "name":"DeleteFormType",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/form-types/{formTypeIdentifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteFormTypeInput"},
      "output":{"shape":"DeleteFormTypeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes and metadata form type in Amazon DataZone.</p> <p>Prerequisites:</p> <ul> <li> <p>The form type must exist in the domain. </p> </li> <li> <p>The form type must not be in use by any asset types or assets.</p> </li> <li> <p>The domain must be valid and accessible.</p> </li> <li> <p>User must have delete permissions on the form type.</p> </li> <li> <p>Any dependencies (such as linked asset types) must be removed first.</p> </li> </ul>"
    },
    "DeleteGlossary":{
      "name":"DeleteGlossary",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/glossaries/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteGlossaryInput"},
      "output":{"shape":"DeleteGlossaryOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a business glossary in Amazon DataZone.</p> <p>Prerequisites:</p> <ul> <li> <p>The glossary must be in DISABLED state. </p> </li> <li> <p>The glossary must not have any glossary terms associated with it.</p> </li> <li> <p>The glossary must exist in the specified domain.</p> </li> <li> <p>The caller must have the <code>datazone:DeleteGlossary</code> permission in the domain and glossary.</p> </li> <li> <p>There should be no active assets or metadata linked to the glossary.</p> </li> </ul>",
      "idempotent":true
    },
    "DeleteGlossaryTerm":{
      "name":"DeleteGlossaryTerm",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/glossary-terms/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteGlossaryTermInput"},
      "output":{"shape":"DeleteGlossaryTermOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a business glossary term in Amazon DataZone.</p> <p>Prerequisites:</p> <ul> <li> <p>Glossary term must exist and be active. </p> </li> <li> <p>The term must not be linked to other assets or child terms.</p> </li> <li> <p>Caller must have delete permissions in the domain/glossary.</p> </li> <li> <p>Ensure all associations (such as to assets or parent terms) are removed before deletion.</p> </li> </ul>",
      "idempotent":true
    },
    "DeleteListing":{
      "name":"DeleteListing",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/listings/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteListingInput"},
      "output":{"shape":"DeleteListingOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a listing (a record of an asset at a given time).</p>",
      "idempotent":true
    },
    "DeleteProject":{
      "name":"DeleteProject",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/projects/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteProjectInput"},
      "output":{"shape":"DeleteProjectOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a project in Amazon DataZone. </p>",
      "idempotent":true
    },
    "DeleteProjectMembership":{
      "name":"DeleteProjectMembership",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/projects/{projectIdentifier}/deleteMembership",
        "responseCode":204
      },
      "input":{"shape":"DeleteProjectMembershipInput"},
      "output":{"shape":"DeleteProjectMembershipOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes project membership in Amazon DataZone.</p>",
      "idempotent":true
    },
    "DeleteProjectProfile":{
      "name":"DeleteProjectProfile",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/project-profiles/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteProjectProfileInput"},
      "output":{"shape":"DeleteProjectProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a project profile.</p>",
      "idempotent":true
    },
    "DeleteRule":{
      "name":"DeleteRule",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/rules/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteRuleInput"},
      "output":{"shape":"DeleteRuleOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a rule in Amazon DataZone. A rule is a formal agreement that enforces specific requirements across user workflows (e.g., publishing assets to the catalog, requesting subscriptions, creating projects) within the Amazon DataZone data portal. These rules help maintain consistency, ensure compliance, and uphold governance standards in data management processes. For instance, a metadata enforcement rule can specify the required information for creating a subscription request or publishing a data asset to the catalog, ensuring alignment with organizational standards.</p>",
      "idempotent":true
    },
    "DeleteSubscriptionGrant":{
      "name":"DeleteSubscriptionGrant",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-grants/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"DeleteSubscriptionGrantInput"},
      "output":{"shape":"DeleteSubscriptionGrantOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes and subscription grant in Amazon DataZone.</p>"
    },
    "DeleteSubscriptionRequest":{
      "name":"DeleteSubscriptionRequest",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteSubscriptionRequestInput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a subscription request in Amazon DataZone.</p>"
    },
    "DeleteSubscriptionTarget":{
      "name":"DeleteSubscriptionTarget",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/subscription-targets/{identifier}",
        "responseCode":204
      },
      "input":{"shape":"DeleteSubscriptionTargetInput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes a subscription target in Amazon DataZone.</p>"
    },
    "DeleteTimeSeriesDataPoints":{
      "name":"DeleteTimeSeriesDataPoints",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/time-series-data-points",
        "responseCode":204
      },
      "input":{"shape":"DeleteTimeSeriesDataPointsInput"},
      "output":{"shape":"DeleteTimeSeriesDataPointsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Deletes the specified time series form for the specified asset. </p>",
      "idempotent":true
    },
    "DisassociateEnvironmentRole":{
      "name":"DisassociateEnvironmentRole",
      "http":{
        "method":"DELETE",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/roles/{environmentRoleArn}",
        "responseCode":200
      },
      "input":{"shape":"DisassociateEnvironmentRoleInput"},
      "output":{"shape":"DisassociateEnvironmentRoleOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Disassociates the environment role in Amazon DataZone.</p>"
    },
    "DisassociateGovernedTerms":{
      "name":"DisassociateGovernedTerms",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/disassociate-governed-terms",
        "responseCode":200
      },
      "input":{"shape":"DisassociateGovernedTermsInput"},
      "output":{"shape":"DisassociateGovernedTermsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Disassociates restricted terms from an asset.</p>"
    },
    "GetAccountPool":{
      "name":"GetAccountPool",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/account-pools/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetAccountPoolInput"},
      "output":{"shape":"GetAccountPoolOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the details of the account pool.</p>"
    },
    "GetAsset":{
      "name":"GetAsset",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetAssetInput"},
      "output":{"shape":"GetAssetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone asset.</p> <p>An asset is the fundamental building block in Amazon DataZone, representing any data resource that needs to be cataloged and managed. It can take many forms, from Amazon S3 buckets and database tables to dashboards and machine learning models. Each asset contains comprehensive metadata about the resource, including its location, schema, ownership, and lineage information. Assets are essential for organizing and managing data resources across an organization, making them discoverable and usable while maintaining proper governance.</p> <p>Before using the Amazon DataZone GetAsset command, ensure the following prerequisites are met:</p> <ul> <li> <p>Domain identifier must exist and be valid</p> </li> <li> <p>Asset identifier must exist</p> </li> <li> <p>User must have the required permissions to perform the action</p> </li> </ul>"
    },
    "GetAssetFilter":{
      "name":"GetAssetFilter",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{assetIdentifier}/filters/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetAssetFilterInput"},
      "output":{"shape":"GetAssetFilterOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an asset filter.</p> <p>Prerequisites:</p> <ul> <li> <p>Domain (<code>--domain-identifier</code>), asset (<code>--asset-identifier</code>), and filter (<code>--identifier</code>) must all exist. </p> </li> <li> <p>The asset filter should not have been deleted.</p> </li> <li> <p>The asset must still exist (since the filter is linked to it).</p> </li> </ul>"
    },
    "GetAssetType":{
      "name":"GetAssetType",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/asset-types/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetAssetTypeInput"},
      "output":{"shape":"GetAssetTypeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone asset type.</p> <p>Asset types define the categories and characteristics of different kinds of data assets within Amazon DataZone.. They determine what metadata fields are required, what operations are possible, and how the asset integrates with other Amazon Web Services services. Asset types can range from built-in types like Amazon S3 buckets and Amazon Web Services Glue tables to custom types defined for specific organizational needs. Understanding asset types is crucial for properly organizing and managing different kinds of data resources.</p> <p>Prerequisites:</p> <ul> <li> <p>The asset type with identifier must exist in the domain. ResourceNotFoundException.</p> </li> <li> <p>You must have the GetAssetType permission.</p> </li> <li> <p>Ensure the domain-identifier value is correct and accessible.</p> </li> </ul>"
    },
    "GetConnection":{
      "name":"GetConnection",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/connections/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetConnectionInput"},
      "output":{"shape":"GetConnectionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a connection. In Amazon DataZone, a connection enables you to connect your resources (domains, projects, and environments) to external resources and services.</p>"
    },
    "GetDataProduct":{
      "name":"GetDataProduct",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/data-products/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetDataProductInput"},
      "output":{"shape":"GetDataProductOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the data product.</p> <p>Prerequisites:</p> <ul> <li> <p>The data product ID must exist. </p> </li> <li> <p>The domain must be valid and accessible.</p> </li> <li> <p>User must have read or discovery permissions for the data product.</p> </li> </ul>"
    },
    "GetDataSource":{
      "name":"GetDataSource",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetDataSourceInput"},
      "output":{"shape":"GetDataSourceOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone data source.</p>"
    },
    "GetDataSourceRun":{
      "name":"GetDataSourceRun",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/data-source-runs/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetDataSourceRunInput"},
      "output":{"shape":"GetDataSourceRunOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone data source run.</p>"
    },
    "GetDomain":{
      "name":"GetDomain",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetDomainInput"},
      "output":{"shape":"GetDomainOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone domain.</p>"
    },
    "GetDomainUnit":{
      "name":"GetDomainUnit",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/domain-units/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetDomainUnitInput"},
      "output":{"shape":"GetDomainUnitOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the details of the specified domain unit.</p>"
    },
    "GetEnvironment":{
      "name":"GetEnvironment",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetEnvironmentInput"},
      "output":{"shape":"GetEnvironmentOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone environment.</p>"
    },
    "GetEnvironmentAction":{
      "name":"GetEnvironmentAction",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/actions/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetEnvironmentActionInput"},
      "output":{"shape":"GetEnvironmentActionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the specified environment action.</p>"
    },
    "GetEnvironmentBlueprint":{
      "name":"GetEnvironmentBlueprint",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprints/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetEnvironmentBlueprintInput"},
      "output":{"shape":"GetEnvironmentBlueprintOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an Amazon DataZone blueprint.</p>"
    },
    "GetEnvironmentBlueprintConfiguration":{
      "name":"GetEnvironmentBlueprintConfiguration",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprint-configurations/{environmentBlueprintIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"GetEnvironmentBlueprintConfigurationInput"},
      "output":{"shape":"GetEnvironmentBlueprintConfigurationOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the blueprint configuration in Amazon DataZone.</p>"
    },
    "GetEnvironmentCredentials":{
      "name":"GetEnvironmentCredentials",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/credentials",
        "responseCode":200
      },
      "input":{"shape":"GetEnvironmentCredentialsInput"},
      "output":{"shape":"GetEnvironmentCredentialsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the credentials of an environment in Amazon DataZone.</p>"
    },
    "GetEnvironmentProfile":{
      "name":"GetEnvironmentProfile",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-profiles/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetEnvironmentProfileInput"},
      "output":{"shape":"GetEnvironmentProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets an evinronment profile in Amazon DataZone.</p>"
    },
    "GetFormType":{
      "name":"GetFormType",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/form-types/{formTypeIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"GetFormTypeInput"},
      "output":{"shape":"GetFormTypeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a metadata form type in Amazon DataZone.</p> <p>Form types define the structure and validation rules for collecting metadata about assets in Amazon DataZone. They act as templates that ensure consistent metadata capture across similar types of assets, while allowing for customization to meet specific organizational needs. Form types can include required fields, validation rules, and dependencies, helping maintain high-quality metadata that makes data assets more discoverable and usable.</p> <ul> <li> <p>The form type with the specified identifier must exist in the given domain. </p> </li> <li> <p>The domain must be valid and active.</p> </li> <li> <p>User must have permission on the form type.</p> </li> <li> <p>The form type should not be deleted or in an invalid state.</p> </li> </ul>"
    },
    "GetGlossary":{
      "name":"GetGlossary",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/glossaries/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetGlossaryInput"},
      "output":{"shape":"GetGlossaryOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a business glossary in Amazon DataZone.</p> <p>Prerequisites:</p> <ul> <li> <p>The specified glossary ID must exist and be associated with the given domain. </p> </li> <li> <p>The caller must have the <code>datazone:GetGlossary</code> permission on the domain.</p> </li> </ul>"
    },
    "GetGlossaryTerm":{
      "name":"GetGlossaryTerm",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/glossary-terms/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetGlossaryTermInput"},
      "output":{"shape":"GetGlossaryTermOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a business glossary term in Amazon DataZone.</p> <p>Prerequisites:</p> <ul> <li> <p>Glossary term with identifier must exist in the domain. </p> </li> <li> <p>User must have permission on the glossary term.</p> </li> <li> <p>Domain must be accessible and active.</p> </li> </ul>"
    },
    "GetGroupProfile":{
      "name":"GetGroupProfile",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/group-profiles/{groupIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"GetGroupProfileInput"},
      "output":{"shape":"GetGroupProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a group profile in Amazon DataZone.</p>"
    },
    "GetIamPortalLoginUrl":{
      "name":"GetIamPortalLoginUrl",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/get-portal-login-url",
        "responseCode":200
      },
      "input":{"shape":"GetIamPortalLoginUrlInput"},
      "output":{"shape":"GetIamPortalLoginUrlOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the data portal URL for the specified Amazon DataZone domain.</p>"
    },
    "GetJobRun":{
      "name":"GetJobRun",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/jobRuns/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetJobRunInput"},
      "output":{"shape":"GetJobRunOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>The details of the job run.</p>"
    },
    "GetLineageEvent":{
      "name":"GetLineageEvent",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/lineage/events/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetLineageEventInput"},
      "output":{"shape":"GetLineageEventOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Describes the lineage event.</p>"
    },
    "GetLineageNode":{
      "name":"GetLineageNode",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/lineage/nodes/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetLineageNodeInput"},
      "output":{"shape":"GetLineageNodeOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the data lineage node.</p>"
    },
    "GetListing":{
      "name":"GetListing",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/listings/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetListingInput"},
      "output":{"shape":"GetListingOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a listing (a record of an asset at a given time). If you specify a listing version, only details that are specific to that version are returned.</p>"
    },
    "GetMetadataGenerationRun":{
      "name":"GetMetadataGenerationRun",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/metadata-generation-runs/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetMetadataGenerationRunInput"},
      "output":{"shape":"GetMetadataGenerationRunOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a metadata generation run in Amazon DataZone.</p> <p>Prerequisites:</p> <ul> <li> <p>Valid domain and run identifier. </p> </li> <li> <p>The metadata generation run must exist.</p> </li> <li> <p>User must have read access to the metadata run.</p> </li> </ul>"
    },
    "GetProject":{
      "name":"GetProject",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/projects/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetProjectInput"},
      "output":{"shape":"GetProjectOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a project in Amazon DataZone.</p>"
    },
    "GetProjectProfile":{
      "name":"GetProjectProfile",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/project-profiles/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetProjectProfileInput"},
      "output":{"shape":"GetProjectProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>The details of the project profile.</p>"
    },
    "GetRule":{
      "name":"GetRule",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/rules/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetRuleInput"},
      "output":{"shape":"GetRuleOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the details of a rule in Amazon DataZone. A rule is a formal agreement that enforces specific requirements across user workflows (e.g., publishing assets to the catalog, requesting subscriptions, creating projects) within the Amazon DataZone data portal. These rules help maintain consistency, ensure compliance, and uphold governance standards in data management processes. For instance, a metadata enforcement rule can specify the required information for creating a subscription request or publishing a data asset to the catalog, ensuring alignment with organizational standards.</p>"
    },
    "GetSubscription":{
      "name":"GetSubscription",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/subscriptions/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetSubscriptionInput"},
      "output":{"shape":"GetSubscriptionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a subscription in Amazon DataZone.</p>"
    },
    "GetSubscriptionGrant":{
      "name":"GetSubscriptionGrant",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-grants/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetSubscriptionGrantInput"},
      "output":{"shape":"GetSubscriptionGrantOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the subscription grant in Amazon DataZone.</p>"
    },
    "GetSubscriptionRequestDetails":{
      "name":"GetSubscriptionRequestDetails",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetSubscriptionRequestDetailsInput"},
      "output":{"shape":"GetSubscriptionRequestDetailsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the details of the specified subscription request.</p>"
    },
    "GetSubscriptionTarget":{
      "name":"GetSubscriptionTarget",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/subscription-targets/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetSubscriptionTargetInput"},
      "output":{"shape":"GetSubscriptionTargetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the subscription target in Amazon DataZone.</p>"
    },
    "GetTimeSeriesDataPoint":{
      "name":"GetTimeSeriesDataPoint",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/time-series-data-points/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"GetTimeSeriesDataPointInput"},
      "output":{"shape":"GetTimeSeriesDataPointOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets the existing data point for the asset.</p>"
    },
    "GetUserProfile":{
      "name":"GetUserProfile",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/user-profiles/{userIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"GetUserProfileInput"},
      "output":{"shape":"GetUserProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Gets a user profile in Amazon DataZone.</p>"
    },
    "ListAccountPools":{
      "name":"ListAccountPools",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/account-pools",
        "responseCode":200
      },
      "input":{"shape":"ListAccountPoolsInput"},
      "output":{"shape":"ListAccountPoolsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists existing account pools.</p>"
    },
    "ListAccountsInAccountPool":{
      "name":"ListAccountsInAccountPool",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/account-pools/{identifier}/accounts",
        "responseCode":200
      },
      "input":{"shape":"ListAccountsInAccountPoolInput"},
      "output":{"shape":"ListAccountsInAccountPoolOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists the accounts in the specified account pool.</p>"
    },
    "ListAssetFilters":{
      "name":"ListAssetFilters",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{assetIdentifier}/filters",
        "responseCode":200
      },
      "input":{"shape":"ListAssetFiltersInput"},
      "output":{"shape":"ListAssetFiltersOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists asset filters.</p> <p>Prerequisites:</p> <ul> <li> <p>A valid domain and asset must exist. </p> </li> <li> <p>The asset must have at least one filter created to return results. </p> </li> </ul>"
    },
    "ListAssetRevisions":{
      "name":"ListAssetRevisions",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{identifier}/revisions",
        "responseCode":200
      },
      "input":{"shape":"ListAssetRevisionsInput"},
      "output":{"shape":"ListAssetRevisionsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists the revisions for the asset.</p> <p>Prerequisites:</p> <ul> <li> <p>The asset must exist in the domain. </p> </li> <li> <p>There must be at least one revision of the asset (which happens automatically after creation).</p> </li> <li> <p>The domain must be valid and active.</p> </li> <li> <p>User must have permissions on the asset and domain.</p> </li> </ul>"
    },
    "ListConnections":{
      "name":"ListConnections",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/connections",
        "responseCode":200
      },
      "input":{"shape":"ListConnectionsInput"},
      "output":{"shape":"ListConnectionsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists connections. In Amazon DataZone, a connection enables you to connect your resources (domains, projects, and environments) to external resources and services.</p>"
    },
    "ListDataProductRevisions":{
      "name":"ListDataProductRevisions",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/data-products/{identifier}/revisions",
        "responseCode":200
      },
      "input":{"shape":"ListDataProductRevisionsInput"},
      "output":{"shape":"ListDataProductRevisionsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists data product revisions.</p> <p>Prerequisites:</p> <ul> <li> <p>The data product ID must exist within the domain. </p> </li> <li> <p>User must have view permissions on the data product.</p> </li> <li> <p>The domain must be in a valid and accessible state.</p> </li> </ul>"
    },
    "ListDataSourceRunActivities":{
      "name":"ListDataSourceRunActivities",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/data-source-runs/{identifier}/activities",
        "responseCode":200
      },
      "input":{"shape":"ListDataSourceRunActivitiesInput"},
      "output":{"shape":"ListDataSourceRunActivitiesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists data source run activities.</p>"
    },
    "ListDataSourceRuns":{
      "name":"ListDataSourceRuns",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources/{dataSourceIdentifier}/runs",
        "responseCode":200
      },
      "input":{"shape":"ListDataSourceRunsInput"},
      "output":{"shape":"ListDataSourceRunsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists data source runs in Amazon DataZone.</p>"
    },
    "ListDataSources":{
      "name":"ListDataSources",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources",
        "responseCode":200
      },
      "input":{"shape":"ListDataSourcesInput"},
      "output":{"shape":"ListDataSourcesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists data sources in Amazon DataZone.</p>"
    },
    "ListDomainUnitsForParent":{
      "name":"ListDomainUnitsForParent",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/domain-units",
        "responseCode":200
      },
      "input":{"shape":"ListDomainUnitsForParentInput"},
      "output":{"shape":"ListDomainUnitsForParentOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists child domain units for the specified parent domain unit.</p>"
    },
    "ListDomains":{
      "name":"ListDomains",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains",
        "responseCode":200
      },
      "input":{"shape":"ListDomainsInput"},
      "output":{"shape":"ListDomainsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists Amazon DataZone domains.</p>"
    },
    "ListEntityOwners":{
      "name":"ListEntityOwners",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/owners",
        "responseCode":200
      },
      "input":{"shape":"ListEntityOwnersInput"},
      "output":{"shape":"ListEntityOwnersOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists the entity (domain units) owners.</p>"
    },
    "ListEnvironmentActions":{
      "name":"ListEnvironmentActions",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/actions",
        "responseCode":200
      },
      "input":{"shape":"ListEnvironmentActionsInput"},
      "output":{"shape":"ListEnvironmentActionsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists existing environment actions.</p>"
    },
    "ListEnvironmentBlueprintConfigurations":{
      "name":"ListEnvironmentBlueprintConfigurations",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprint-configurations",
        "responseCode":200
      },
      "input":{"shape":"ListEnvironmentBlueprintConfigurationsInput"},
      "output":{"shape":"ListEnvironmentBlueprintConfigurationsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists blueprint configurations for a Amazon DataZone environment.</p>"
    },
    "ListEnvironmentBlueprints":{
      "name":"ListEnvironmentBlueprints",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprints",
        "responseCode":200
      },
      "input":{"shape":"ListEnvironmentBlueprintsInput"},
      "output":{"shape":"ListEnvironmentBlueprintsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists blueprints in an Amazon DataZone environment.</p>"
    },
    "ListEnvironmentProfiles":{
      "name":"ListEnvironmentProfiles",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-profiles",
        "responseCode":200
      },
      "input":{"shape":"ListEnvironmentProfilesInput"},
      "output":{"shape":"ListEnvironmentProfilesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists Amazon DataZone environment profiles.</p>"
    },
    "ListEnvironments":{
      "name":"ListEnvironments",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environments",
        "responseCode":200
      },
      "input":{"shape":"ListEnvironmentsInput"},
      "output":{"shape":"ListEnvironmentsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists Amazon DataZone environments.</p>"
    },
    "ListJobRuns":{
      "name":"ListJobRuns",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/jobs/{jobIdentifier}/runs",
        "responseCode":200
      },
      "input":{"shape":"ListJobRunsInput"},
      "output":{"shape":"ListJobRunsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists job runs.</p>"
    },
    "ListLineageEvents":{
      "name":"ListLineageEvents",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/lineage/events",
        "responseCode":200
      },
      "input":{"shape":"ListLineageEventsInput"},
      "output":{"shape":"ListLineageEventsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists lineage events.</p>"
    },
    "ListLineageNodeHistory":{
      "name":"ListLineageNodeHistory",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/lineage/nodes/{identifier}/history",
        "responseCode":200
      },
      "input":{"shape":"ListLineageNodeHistoryInput"},
      "output":{"shape":"ListLineageNodeHistoryOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists the history of the specified data lineage node.</p>"
    },
    "ListMetadataGenerationRuns":{
      "name":"ListMetadataGenerationRuns",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/metadata-generation-runs",
        "responseCode":200
      },
      "input":{"shape":"ListMetadataGenerationRunsInput"},
      "output":{"shape":"ListMetadataGenerationRunsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists all metadata generation runs.</p> <p>Metadata generation runs represent automated processes that leverage AI/ML capabilities to create or enhance asset metadata at scale. This feature helps organizations maintain comprehensive and consistent metadata across large numbers of assets without manual intervention. It can automatically generate business descriptions, tags, and other metadata elements, significantly reducing the time and effort required for metadata management while improving consistency and completeness.</p> <p>Prerequisites:</p> <ul> <li> <p>Valid domain identifier. </p> </li> <li> <p>User must have access to metadata generation runs in the domain.</p> </li> </ul>"
    },
    "ListNotifications":{
      "name":"ListNotifications",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/notifications",
        "responseCode":200
      },
      "input":{"shape":"ListNotificationsInput"},
      "output":{"shape":"ListNotificationsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists all Amazon DataZone notifications.</p>"
    },
    "ListPolicyGrants":{
      "name":"ListPolicyGrants",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/policies/managed/{entityType}/{entityIdentifier}/grants",
        "responseCode":200
      },
      "input":{"shape":"ListPolicyGrantsInput"},
      "output":{"shape":"ListPolicyGrantsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists policy grants.</p>"
    },
    "ListProjectMemberships":{
      "name":"ListProjectMemberships",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/projects/{projectIdentifier}/memberships",
        "responseCode":200
      },
      "input":{"shape":"ListProjectMembershipsInput"},
      "output":{"shape":"ListProjectMembershipsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists all members of the specified project.</p>"
    },
    "ListProjectProfiles":{
      "name":"ListProjectProfiles",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/project-profiles",
        "responseCode":200
      },
      "input":{"shape":"ListProjectProfilesInput"},
      "output":{"shape":"ListProjectProfilesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists project profiles.</p>"
    },
    "ListProjects":{
      "name":"ListProjects",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/projects",
        "responseCode":200
      },
      "input":{"shape":"ListProjectsInput"},
      "output":{"shape":"ListProjectsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists Amazon DataZone projects.</p>"
    },
    "ListRules":{
      "name":"ListRules",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/list-rules/{targetType}/{targetIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"ListRulesInput"},
      "output":{"shape":"ListRulesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists existing rules. In Amazon DataZone, a rule is a formal agreement that enforces specific requirements across user workflows (e.g., publishing assets to the catalog, requesting subscriptions, creating projects) within the Amazon DataZone data portal. These rules help maintain consistency, ensure compliance, and uphold governance standards in data management processes. For instance, a metadata enforcement rule can specify the required information for creating a subscription request or publishing a data asset to the catalog, ensuring alignment with organizational standards.</p>"
    },
    "ListSubscriptionGrants":{
      "name":"ListSubscriptionGrants",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-grants",
        "responseCode":200
      },
      "input":{"shape":"ListSubscriptionGrantsInput"},
      "output":{"shape":"ListSubscriptionGrantsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists subscription grants.</p>"
    },
    "ListSubscriptionRequests":{
      "name":"ListSubscriptionRequests",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests",
        "responseCode":200
      },
      "input":{"shape":"ListSubscriptionRequestsInput"},
      "output":{"shape":"ListSubscriptionRequestsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists Amazon DataZone subscription requests.</p>"
    },
    "ListSubscriptionTargets":{
      "name":"ListSubscriptionTargets",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/subscription-targets",
        "responseCode":200
      },
      "input":{"shape":"ListSubscriptionTargetsInput"},
      "output":{"shape":"ListSubscriptionTargetsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists subscription targets in Amazon DataZone.</p>"
    },
    "ListSubscriptions":{
      "name":"ListSubscriptions",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/subscriptions",
        "responseCode":200
      },
      "input":{"shape":"ListSubscriptionsInput"},
      "output":{"shape":"ListSubscriptionsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists subscriptions in Amazon DataZone.</p>"
    },
    "ListTagsForResource":{
      "name":"ListTagsForResource",
      "http":{
        "method":"GET",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"ListTagsForResourceRequest"},
      "output":{"shape":"ListTagsForResourceResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists tags for the specified resource in Amazon DataZone.</p>"
    },
    "ListTimeSeriesDataPoints":{
      "name":"ListTimeSeriesDataPoints",
      "http":{
        "method":"GET",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/time-series-data-points",
        "responseCode":200
      },
      "input":{"shape":"ListTimeSeriesDataPointsInput"},
      "output":{"shape":"ListTimeSeriesDataPointsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Lists time series data points.</p>"
    },
    "PostLineageEvent":{
      "name":"PostLineageEvent",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/lineage/events",
        "responseCode":200
      },
      "input":{"shape":"PostLineageEventInput"},
      "output":{"shape":"PostLineageEventOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Posts a data lineage event.</p>",
      "idempotent":true
    },
    "PostTimeSeriesDataPoints":{
      "name":"PostTimeSeriesDataPoints",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/time-series-data-points",
        "responseCode":201
      },
      "input":{"shape":"PostTimeSeriesDataPointsInput"},
      "output":{"shape":"PostTimeSeriesDataPointsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Posts time series data points to Amazon DataZone for the specified asset.</p>",
      "idempotent":true
    },
    "PutEnvironmentBlueprintConfiguration":{
      "name":"PutEnvironmentBlueprintConfiguration",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprint-configurations/{environmentBlueprintIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"PutEnvironmentBlueprintConfigurationInput"},
      "output":{"shape":"PutEnvironmentBlueprintConfigurationOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Writes the configuration for the specified environment blueprint in Amazon DataZone.</p>",
      "idempotent":true
    },
    "RejectPredictions":{
      "name":"RejectPredictions",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{identifier}/reject-predictions",
        "responseCode":200
      },
      "input":{"shape":"RejectPredictionsInput"},
      "output":{"shape":"RejectPredictionsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Rejects automatically generated business-friendly metadata for your Amazon DataZone assets.</p>",
      "idempotent":true
    },
    "RejectSubscriptionRequest":{
      "name":"RejectSubscriptionRequest",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests/{identifier}/reject",
        "responseCode":200
      },
      "input":{"shape":"RejectSubscriptionRequestInput"},
      "output":{"shape":"RejectSubscriptionRequestOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Rejects the specified subscription request.</p>",
      "idempotent":true
    },
    "RemoveEntityOwner":{
      "name":"RemoveEntityOwner",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/entities/{entityType}/{entityIdentifier}/removeOwner",
        "responseCode":204
      },
      "input":{"shape":"RemoveEntityOwnerInput"},
      "output":{"shape":"RemoveEntityOwnerOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Removes an owner from an entity.</p>",
      "idempotent":true
    },
    "RemovePolicyGrant":{
      "name":"RemovePolicyGrant",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/policies/managed/{entityType}/{entityIdentifier}/removeGrant",
        "responseCode":204
      },
      "input":{"shape":"RemovePolicyGrantInput"},
      "output":{"shape":"RemovePolicyGrantOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Removes a policy grant.</p>",
      "idempotent":true
    },
    "RevokeSubscription":{
      "name":"RevokeSubscription",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/subscriptions/{identifier}/revoke",
        "responseCode":200
      },
      "input":{"shape":"RevokeSubscriptionInput"},
      "output":{"shape":"RevokeSubscriptionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Revokes a specified subscription in Amazon DataZone.</p>",
      "idempotent":true
    },
    "Search":{
      "name":"Search",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/search",
        "responseCode":200
      },
      "input":{"shape":"SearchInput"},
      "output":{"shape":"SearchOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Searches for assets in Amazon DataZone.</p> <p>Search in Amazon DataZone is a powerful capability that enables users to discover and explore data assets, glossary terms, and data products across their organization. It provides both basic and advanced search functionality, allowing users to find resources based on names, descriptions, metadata, and other attributes. Search can be scoped to specific types of resources (like assets, glossary terms, or data products) and can be filtered using various criteria such as creation date, owner, or status. The search functionality is essential for making the wealth of data resources in an organization discoverable and usable, helping users find the right data for their needs quickly and efficiently.</p> <p>Many search commands in Amazon DataZone are paginated, including <code>search</code> and <code>search-types</code>. When the result set is large, Amazon DataZone returns a <code>nextToken</code> in the response. This token can be used to retrieve the next page of results. </p> <p>Prerequisites:</p> <ul> <li> <p>The --domain-identifier must refer to an existing Amazon DataZone domain. </p> </li> <li> <p>--search-scope must be one of: ASSET, GLOSSARY_TERM, DATA_PRODUCT, or GLOSSARY.</p> </li> <li> <p>The user must have search permissions in the specified domain.</p> </li> <li> <p>If using --filters, ensure that the JSON is well-formed and that each filter includes valid attribute and value keys. </p> </li> <li> <p>For paginated results, be prepared to use --next-token to fetch additional pages.</p> </li> </ul>"
    },
    "SearchGroupProfiles":{
      "name":"SearchGroupProfiles",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/search-group-profiles",
        "responseCode":200
      },
      "input":{"shape":"SearchGroupProfilesInput"},
      "output":{"shape":"SearchGroupProfilesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Searches group profiles in Amazon DataZone.</p>"
    },
    "SearchListings":{
      "name":"SearchListings",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/listings/search",
        "responseCode":200
      },
      "input":{"shape":"SearchListingsInput"},
      "output":{"shape":"SearchListingsOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Searches listings (records of an asset at a given time) in Amazon DataZone.</p>"
    },
    "SearchTypes":{
      "name":"SearchTypes",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/types-search",
        "responseCode":200
      },
      "input":{"shape":"SearchTypesInput"},
      "output":{"shape":"SearchTypesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Searches for types in Amazon DataZone.</p> <p>Prerequisites:</p> <ul> <li> <p>The --domain-identifier must refer to an existing Amazon DataZone domain. </p> </li> <li> <p>--search-scope must be one of the valid values including: ASSET_TYPE, GLOSSARY_TERM_TYPE, DATA_PRODUCT_TYPE.</p> </li> <li> <p>The --managed flag must be present without a value.</p> </li> <li> <p>The user must have permissions for form or asset types in the domain.</p> </li> <li> <p>If using --filters, ensure that the JSON is valid.</p> </li> <li> <p>Filters contain correct structure (attribute, value, operator).</p> </li> </ul>"
    },
    "SearchUserProfiles":{
      "name":"SearchUserProfiles",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/search-user-profiles",
        "responseCode":200
      },
      "input":{"shape":"SearchUserProfilesInput"},
      "output":{"shape":"SearchUserProfilesOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Searches user profiles in Amazon DataZone.</p>"
    },
    "StartDataSourceRun":{
      "name":"StartDataSourceRun",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources/{dataSourceIdentifier}/runs",
        "responseCode":200
      },
      "input":{"shape":"StartDataSourceRunInput"},
      "output":{"shape":"StartDataSourceRunOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Start the run of the specified data source in Amazon DataZone.</p>",
      "idempotent":true
    },
    "StartMetadataGenerationRun":{
      "name":"StartMetadataGenerationRun",
      "http":{
        "method":"POST",
        "requestUri":"/v2/domains/{domainIdentifier}/metadata-generation-runs",
        "responseCode":200
      },
      "input":{"shape":"StartMetadataGenerationRunInput"},
      "output":{"shape":"StartMetadataGenerationRunOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Starts the metadata generation run.</p> <p>Prerequisites:</p> <ul> <li> <p>Asset must be created and belong to the specified domain and project. </p> </li> <li> <p>Asset type must be supported for metadata generation (e.g., Amazon Web Services Glue table).</p> </li> <li> <p>Asset must have a structured schema with valid rows and columns.</p> </li> <li> <p>Valid values for --type: BUSINESS_DESCRIPTIONS, BUSINESS_NAMES.</p> </li> <li> <p>The user must have permission to run metadata generation in the domain/project.</p> </li> </ul>",
      "idempotent":true
    },
    "TagResource":{
      "name":"TagResource",
      "http":{
        "method":"POST",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"TagResourceRequest"},
      "output":{"shape":"TagResourceResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Tags a resource in Amazon DataZone.</p>"
    },
    "UntagResource":{
      "name":"UntagResource",
      "http":{
        "method":"DELETE",
        "requestUri":"/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"UntagResourceRequest"},
      "output":{"shape":"UntagResourceResponse"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Untags a resource in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateAccountPool":{
      "name":"UpdateAccountPool",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/account-pools/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateAccountPoolInput"},
      "output":{"shape":"UpdateAccountPoolOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the account pool.</p>",
      "idempotent":true
    },
    "UpdateAssetFilter":{
      "name":"UpdateAssetFilter",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/assets/{assetIdentifier}/filters/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateAssetFilterInput"},
      "output":{"shape":"UpdateAssetFilterOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates an asset filter.</p> <p>Prerequisites:</p> <ul> <li> <p>The domain, asset, and asset filter identifier must all exist. </p> </li> <li> <p>The asset must contain the columns being referenced in the update.</p> </li> <li> <p>If applying a row filter, ensure the column referenced in the expression exists in the asset schema.</p> </li> </ul>",
      "idempotent":true
    },
    "UpdateConnection":{
      "name":"UpdateConnection",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/connections/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateConnectionInput"},
      "output":{"shape":"UpdateConnectionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates a connection. In Amazon DataZone, a connection enables you to connect your resources (domains, projects, and environments) to external resources and services.</p>",
      "idempotent":true
    },
    "UpdateDataSource":{
      "name":"UpdateDataSource",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/data-sources/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateDataSourceInput"},
      "output":{"shape":"UpdateDataSourceOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified data source in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateDomain":{
      "name":"UpdateDomain",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateDomainInput"},
      "output":{"shape":"UpdateDomainOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates a Amazon DataZone domain.</p>",
      "idempotent":true
    },
    "UpdateDomainUnit":{
      "name":"UpdateDomainUnit",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/domain-units/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateDomainUnitInput"},
      "output":{"shape":"UpdateDomainUnitOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the domain unit.</p>",
      "idempotent":true
    },
    "UpdateEnvironment":{
      "name":"UpdateEnvironment",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateEnvironmentInput"},
      "output":{"shape":"UpdateEnvironmentOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified environment in Amazon DataZone.</p>"
    },
    "UpdateEnvironmentAction":{
      "name":"UpdateEnvironmentAction",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/actions/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateEnvironmentActionInput"},
      "output":{"shape":"UpdateEnvironmentActionOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates an environment action.</p>"
    },
    "UpdateEnvironmentBlueprint":{
      "name":"UpdateEnvironmentBlueprint",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-blueprints/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateEnvironmentBlueprintInput"},
      "output":{"shape":"UpdateEnvironmentBlueprintOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates an environment blueprint in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateEnvironmentProfile":{
      "name":"UpdateEnvironmentProfile",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/environment-profiles/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateEnvironmentProfileInput"},
      "output":{"shape":"UpdateEnvironmentProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified environment profile in Amazon DataZone.</p>"
    },
    "UpdateGlossary":{
      "name":"UpdateGlossary",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/glossaries/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateGlossaryInput"},
      "output":{"shape":"UpdateGlossaryOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the business glossary in Amazon DataZone.</p> <p>Prerequisites:</p> <ul> <li> <p>The glossary must exist in the given domain. </p> </li> <li> <p>The caller must have the <code>datazone:UpdateGlossary</code> permission to update it.</p> </li> <li> <p>When updating the name, the new name must be unique within the domain.</p> </li> <li> <p>The glossary must not be deleted or in a terminal state.</p> </li> </ul>",
      "idempotent":true
    },
    "UpdateGlossaryTerm":{
      "name":"UpdateGlossaryTerm",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/glossary-terms/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateGlossaryTermInput"},
      "output":{"shape":"UpdateGlossaryTermOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates a business glossary term in Amazon DataZone.</p> <p>Prerequisites:</p> <ul> <li> <p>Glossary term must exist in the specified domain. </p> </li> <li> <p>New name must not conflict with existing terms in the same glossary.</p> </li> <li> <p>User must have permissions on the term.</p> </li> <li> <p>The term must not be in DELETED status.</p> </li> </ul>",
      "idempotent":true
    },
    "UpdateGroupProfile":{
      "name":"UpdateGroupProfile",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/group-profiles/{groupIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateGroupProfileInput"},
      "output":{"shape":"UpdateGroupProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified group profile in Amazon DataZone.</p>"
    },
    "UpdateProject":{
      "name":"UpdateProject",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/projects/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateProjectInput"},
      "output":{"shape":"UpdateProjectOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified project in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateProjectProfile":{
      "name":"UpdateProjectProfile",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/project-profiles/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateProjectProfileInput"},
      "output":{"shape":"UpdateProjectProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates a project profile.</p>",
      "idempotent":true
    },
    "UpdateRule":{
      "name":"UpdateRule",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/rules/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateRuleInput"},
      "output":{"shape":"UpdateRuleOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates a rule. In Amazon DataZone, a rule is a formal agreement that enforces specific requirements across user workflows (e.g., publishing assets to the catalog, requesting subscriptions, creating projects) within the Amazon DataZone data portal. These rules help maintain consistency, ensure compliance, and uphold governance standards in data management processes. For instance, a metadata enforcement rule can specify the required information for creating a subscription request or publishing a data asset to the catalog, ensuring alignment with organizational standards.</p>",
      "idempotent":true
    },
    "UpdateSubscriptionGrantStatus":{
      "name":"UpdateSubscriptionGrantStatus",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-grants/{identifier}/status/{assetIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateSubscriptionGrantStatusInput"},
      "output":{"shape":"UpdateSubscriptionGrantStatusOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the status of the specified subscription grant status in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateSubscriptionRequest":{
      "name":"UpdateSubscriptionRequest",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/subscription-requests/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateSubscriptionRequestInput"},
      "output":{"shape":"UpdateSubscriptionRequestOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates a specified subscription request in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateSubscriptionTarget":{
      "name":"UpdateSubscriptionTarget",
      "http":{
        "method":"PATCH",
        "requestUri":"/v2/domains/{domainIdentifier}/environments/{environmentIdentifier}/subscription-targets/{identifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateSubscriptionTargetInput"},
      "output":{"shape":"UpdateSubscriptionTargetOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified subscription target in Amazon DataZone.</p>",
      "idempotent":true
    },
    "UpdateUserProfile":{
      "name":"UpdateUserProfile",
      "http":{
        "method":"PUT",
        "requestUri":"/v2/domains/{domainIdentifier}/user-profiles/{userIdentifier}",
        "responseCode":200
      },
      "input":{"shape":"UpdateUserProfileInput"},
      "output":{"shape":"UpdateUserProfileOutput"},
      "errors":[
        {"shape":"InternalServerException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"UnauthorizedException"}
      ],
      "documentation":"<p>Updates the specified user profile in Amazon DataZone.</p>"
    }
  },
  "shapes":{
    "AcceptChoice":{
      "type":"structure",
      "required":["predictionTarget"],
      "members":{
        "editedValue":{
          "shape":"EditedValue",
          "documentation":"<p>The edit of the prediction.</p>"
        },
        "predictionChoice":{
          "shape":"Integer",
          "documentation":"<p>Specifies the prediction (aka, the automatically generated piece of metadata) that can be accepted.</p>"
        },
        "predictionTarget":{
          "shape":"String",
          "documentation":"<p>Specifies the target (for example, a column name) where a prediction can be accepted.</p>"
        }
      },
      "documentation":"<p>Specifies the prediction (aka, the automatically generated piece of metadata) and the target (for example, a column name) that can be accepted.</p>"
    },
    "AcceptChoices":{
      "type":"list",
      "member":{"shape":"AcceptChoice"}
    },
    "AcceptPredictionsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "acceptChoices":{
          "shape":"AcceptChoices",
          "documentation":"<p>Specifies the prediction (aka, the automatically generated piece of metadata) and the target (for example, a column name) that can be accepted.</p>"
        },
        "acceptRule":{
          "shape":"AcceptRule",
          "documentation":"<p>Specifies the rule (or the conditions) under which a prediction can be accepted.</p>"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier to ensure idempotency of the request. This field is automatically populated if not provided.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>The identifier of the asset.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision that is to be made to the asset.</p>",
          "location":"querystring",
          "locationName":"revision"
        }
      }
    },
    "AcceptPredictionsOutput":{
      "type":"structure",
      "required":[
        "assetId",
        "domainId",
        "revision"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the asset.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision that is to be made to the asset.</p>"
        }
      }
    },
    "AcceptRule":{
      "type":"structure",
      "members":{
        "rule":{
          "shape":"AcceptRuleBehavior",
          "documentation":"<p>Specifies whether you want to accept the top prediction for all targets or none.</p>"
        },
        "threshold":{
          "shape":"Float",
          "documentation":"<p>The confidence score that specifies the condition at which a prediction can be accepted.</p>"
        }
      },
      "documentation":"<p>Specifies the rule and the threshold under which a prediction can be accepted.</p>"
    },
    "AcceptRuleBehavior":{
      "type":"string",
      "enum":[
        "ALL",
        "NONE"
      ]
    },
    "AcceptSubscriptionRequestInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "assetScopes":{
          "shape":"AcceptedAssetScopes",
          "documentation":"<p>The asset scopes of the accept subscription request.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>A description that specifies the reason for accepting the specified subscription request.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The Amazon DataZone domain where the specified subscription request is being accepted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The unique identifier of the subscription request that is to be accepted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "AcceptSubscriptionRequestOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "requestReason",
        "status",
        "subscribedListings",
        "subscribedPrincipals",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp that specifies when the subscription request was accepted.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>Specifies the Amazon DataZone user that accepted the specified subscription request.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>Specifies the reason for accepting the subscription request.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The unique identifier of the Amazon DataZone domain where the specified subscription request was accepted.</p>"
        },
        "existingSubscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The ID of the existing subscription.</p>"
        },
        "id":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request.</p>"
        },
        "metadataForms":{
          "shape":"MetadataForms",
          "documentation":"<p>The metadata form in the subscription request.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>Specifies the reason for requesting a subscription to the asset.</p>"
        },
        "reviewerId":{
          "shape":"String",
          "documentation":"<p>Specifes the ID of the Amazon DataZone user who reviewed the subscription request.</p>"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>Specifies the status of the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"AcceptSubscriptionRequestOutputSubscribedListingsList",
          "documentation":"<p>Specifies the asset for which the subscription request was created.</p>"
        },
        "subscribedPrincipals":{
          "shape":"AcceptSubscriptionRequestOutputSubscribedPrincipalsList",
          "documentation":"<p>Specifies the Amazon DataZone users who are subscribed to the asset specified in the subscription request.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>Specifies the timestamp when subscription request was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>Specifies the Amazon DataZone user who updated the subscription request.</p>"
        }
      }
    },
    "AcceptSubscriptionRequestOutputSubscribedListingsList":{
      "type":"list",
      "member":{"shape":"SubscribedListing"},
      "max":1,
      "min":1
    },
    "AcceptSubscriptionRequestOutputSubscribedPrincipalsList":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipal"},
      "max":1,
      "min":1
    },
    "AcceptedAssetScope":{
      "type":"structure",
      "required":[
        "assetId",
        "filterIds"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The asset ID of the accepted asset scope.</p>"
        },
        "filterIds":{
          "shape":"FilterIds",
          "documentation":"<p>The filter IDs of the accepted asset scope.</p>"
        }
      },
      "documentation":"<p>The accepted asset scope.</p>"
    },
    "AcceptedAssetScopes":{
      "type":"list",
      "member":{"shape":"AcceptedAssetScope"}
    },
    "AccessDeniedException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>You do not have sufficient access to perform this action.</p>",
      "error":{
        "httpStatusCode":403,
        "senderFault":true
      },
      "exception":true
    },
    "AccountInfo":{
      "type":"structure",
      "required":[
        "awsAccountId",
        "supportedRegions"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The account ID.</p>"
        },
        "awsAccountName":{
          "shape":"AwsAccountName",
          "documentation":"<p>The account name.</p>"
        },
        "supportedRegions":{
          "shape":"AwsRegionList",
          "documentation":"<p>The regions supported for an account within an account pool. </p>"
        }
      },
      "documentation":"<p>The account information within an account pool.</p>"
    },
    "AccountInfoList":{
      "type":"list",
      "member":{"shape":"AccountInfo"},
      "max":25,
      "min":1
    },
    "AccountPoolId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "AccountPoolList":{
      "type":"list",
      "member":{"shape":"AccountPoolId"},
      "max":10,
      "min":1
    },
    "AccountPoolName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[\\w -]+$",
      "sensitive":true
    },
    "AccountPoolSummaries":{
      "type":"list",
      "member":{"shape":"AccountPoolSummary"}
    },
    "AccountPoolSummary":{
      "type":"structure",
      "members":{
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the account pool.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit.</p>"
        },
        "id":{
          "shape":"AccountPoolId",
          "documentation":"<p>The ID of the account pool.</p>"
        },
        "name":{
          "shape":"AccountPoolName",
          "documentation":"<p>The name of the account pool.</p>"
        },
        "resolutionStrategy":{
          "shape":"ResolutionStrategy",
          "documentation":"<p>The mechanism used to resolve the account selection from the account pool.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user who updated the account pool.</p>"
        }
      },
      "documentation":"<p>The summary of the account pool.</p>"
    },
    "AccountSource":{
      "type":"structure",
      "members":{
        "accounts":{
          "shape":"AccountInfoList",
          "documentation":"<p>The static list of accounts within an account pool.</p>"
        },
        "customAccountPoolHandler":{
          "shape":"CustomAccountPoolHandler",
          "documentation":"<p>The custom Amazon Web Services Lambda handler within an account pool.</p>"
        }
      },
      "documentation":"<p>The source of accounts for the account pool. In the current release, it's either a static list of accounts provided by the customer or a custom Amazon Web Services Lambda handler. </p>",
      "union":true
    },
    "ActionLink":{
      "type":"string",
      "sensitive":true
    },
    "ActionParameters":{
      "type":"structure",
      "members":{
        "awsConsoleLink":{
          "shape":"AwsConsoleLinkParameters",
          "documentation":"<p>The console link specified as part of the environment action.</p>"
        }
      },
      "documentation":"<p>The parameters of the environment action.</p>",
      "union":true
    },
    "AddEntityOwnerInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "owner"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which you want to add the entity owner.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"String",
          "documentation":"<p>The ID of the entity to which you want to add an owner.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"DataZoneEntityType",
          "documentation":"<p>The type of an entity.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "owner":{
          "shape":"OwnerProperties",
          "documentation":"<p>The owner that you want to add to the entity.</p>"
        }
      }
    },
    "AddEntityOwnerOutput":{
      "type":"structure",
      "members":{}
    },
    "AddPolicyGrantInput":{
      "type":"structure",
      "required":[
        "detail",
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "policyType",
        "principal"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "detail":{
          "shape":"PolicyGrantDetail",
          "documentation":"<p>The details of the policy grant.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to add a policy grant.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"String",
          "documentation":"<p>The ID of the entity (resource) to which you want to add a policy grant.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"TargetEntityType",
          "documentation":"<p>The type of entity (resource) to which the grant is added.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "policyType":{
          "shape":"ManagedPolicyType",
          "documentation":"<p>The type of policy that you want to grant.</p>"
        },
        "principal":{
          "shape":"PolicyGrantPrincipal",
          "documentation":"<p>The principal to whom the permissions are granted.</p>"
        }
      }
    },
    "AddPolicyGrantOutput":{
      "type":"structure",
      "members":{
        "grantId":{
          "shape":"GrantIdentifier",
          "documentation":"<p>The ID of the policy grant that was added to a specified entity.</p>"
        }
      }
    },
    "AddToProjectMemberPoolPolicyGrantDetail":{
      "type":"structure",
      "members":{
        "includeChildDomainUnits":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the policy grant is applied to child domain units.</p>"
        }
      },
      "documentation":"<p>The details of the policy grant.</p>"
    },
    "AggregationAttributeDisplayValue":{"type":"string"},
    "AggregationAttributeValue":{"type":"string"},
    "AggregationDisplayValue":{
      "type":"string",
      "max":100,
      "min":1
    },
    "AggregationList":{
      "type":"list",
      "member":{"shape":"AggregationListItem"},
      "max":10,
      "min":1
    },
    "AggregationListItem":{
      "type":"structure",
      "required":["attribute"],
      "members":{
        "attribute":{
          "shape":"Attribute",
          "documentation":"<p>An attribute on which to compute aggregations.</p>"
        },
        "displayValue":{
          "shape":"AggregationDisplayValue",
          "documentation":"<p>The display value of the aggregation list item. Supported values include <code>value</code> and <code>glossaryTerm.name</code>.</p>"
        }
      },
      "documentation":"<p>An aggregation list item.</p>"
    },
    "AggregationOutput":{
      "type":"structure",
      "members":{
        "attribute":{
          "shape":"Attribute",
          "documentation":"<p>The attribute for this aggregation.</p>"
        },
        "displayValue":{
          "shape":"AggregationDisplayValue",
          "documentation":"<p>The display value of the aggregation output item.</p>"
        },
        "items":{
          "shape":"AggregationOutputItems",
          "documentation":"<p>A list of aggregation output items.</p>"
        }
      },
      "documentation":"<p>The aggregation for an attribute.</p>"
    },
    "AggregationOutputItem":{
      "type":"structure",
      "members":{
        "count":{
          "shape":"Integer",
          "documentation":"<p>The count of the aggregation output item.</p>"
        },
        "displayValue":{
          "shape":"AggregationAttributeDisplayValue",
          "documentation":"<p>The display value of the aggregation. If the attribute being aggregated corresponds to the id of a public resource, the service automatically resolves the id to the provided display value.</p>"
        },
        "value":{
          "shape":"AggregationAttributeValue",
          "documentation":"<p>The attribute value of the aggregation output item.</p>"
        }
      },
      "documentation":"<p>An aggregation output item.</p>"
    },
    "AggregationOutputItems":{
      "type":"list",
      "member":{"shape":"AggregationOutputItem"}
    },
    "AggregationOutputList":{
      "type":"list",
      "member":{"shape":"AggregationOutput"}
    },
    "AllDomainUnitsGrantFilter":{
      "type":"structure",
      "members":{},
      "documentation":"<p>The grant filter for all domain units.</p>"
    },
    "AllUsersGrantFilter":{
      "type":"structure",
      "members":{},
      "documentation":"<p>The all users grant filter.</p>"
    },
    "ApplicableAssetTypes":{
      "type":"list",
      "member":{"shape":"TypeName"}
    },
    "AssetFilterConfiguration":{
      "type":"structure",
      "members":{
        "columnConfiguration":{
          "shape":"ColumnFilterConfiguration",
          "documentation":"<p>The column configuration of the asset filter.</p>"
        },
        "rowConfiguration":{
          "shape":"RowFilterConfiguration",
          "documentation":"<p>The row configuration of the asset filter.</p>"
        }
      },
      "documentation":"<p>The configuration details of the asset filter.</p>",
      "union":true
    },
    "AssetFilterSummary":{
      "type":"structure",
      "required":[
        "assetId",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the data asset.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the asset filter was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the asset filter.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the asset filter lives.</p>"
        },
        "effectiveColumnNames":{
          "shape":"ColumnNameList",
          "documentation":"<p>The effective column names of the asset filter.</p>"
        },
        "effectiveRowFilter":{
          "shape":"String",
          "documentation":"<p>The effective row filter of the asset filter.</p>"
        },
        "errorMessage":{
          "shape":"String",
          "documentation":"<p>The error message that is displayed if the action does not succeed.</p>"
        },
        "id":{
          "shape":"FilterId",
          "documentation":"<p>The ID of the asset filter.</p>"
        },
        "name":{
          "shape":"FilterName",
          "documentation":"<p>The name of the asset filter.</p>"
        },
        "status":{
          "shape":"FilterStatus",
          "documentation":"<p>The status of the asset filter.</p>"
        }
      },
      "documentation":"<p>The summary of the asset filter.</p>"
    },
    "AssetFilters":{
      "type":"list",
      "member":{"shape":"AssetFilterSummary"}
    },
    "AssetId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "AssetIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "AssetInDataProductListingItem":{
      "type":"structure",
      "members":{
        "entityId":{
          "shape":"String",
          "documentation":"<p>The entity ID of the listing of the asset in a data product.</p>"
        },
        "entityRevision":{
          "shape":"String",
          "documentation":"<p>The entity revision of the listing of the asset in a data product.</p>"
        },
        "entityType":{
          "shape":"String",
          "documentation":"<p>The entity type of the listing of the asset in a data product.</p>"
        }
      },
      "documentation":"<p>The listing of the asset in a data product.</p>"
    },
    "AssetInDataProductListingItems":{
      "type":"list",
      "member":{"shape":"AssetInDataProductListingItem"}
    },
    "AssetItem":{
      "type":"structure",
      "required":[
        "domainId",
        "identifier",
        "name",
        "owningProjectId",
        "typeIdentifier",
        "typeRevision"
      ],
      "members":{
        "additionalAttributes":{
          "shape":"AssetItemAdditionalAttributes",
          "documentation":"<p>The additional attributes of a Amazon DataZone inventory asset. </p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the Amazon DataZone inventory asset was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the inventory asset.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of an Amazon DataZone inventory asset.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the inventory asset exists.</p>"
        },
        "externalIdentifier":{
          "shape":"ExternalIdentifier",
          "documentation":"<p>The external identifier of the Amazon DataZone inventory asset.</p>"
        },
        "firstRevisionCreatedAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the first revision of the inventory asset was created.</p>"
        },
        "firstRevisionCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the first revision of the inventory asset.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms attached to the Amazon DataZone inventory asset.</p>"
        },
        "governedGlossaryTerms":{
          "shape":"AssetItemGovernedGlossaryTermsList",
          "documentation":"<p>The restricted glossary terms accociated with an asset.</p>"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>the identifier of the Amazon DataZone inventory asset.</p>"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>The name of the Amazon DataZone inventory asset.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project that owns the inventory asset.</p>"
        },
        "typeIdentifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The identifier of the asset type of the specified Amazon DataZone inventory asset.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the inventory asset type.</p>"
        }
      },
      "documentation":"<p>A Amazon DataZone inventory asset.</p>"
    },
    "AssetItemAdditionalAttributes":{
      "type":"structure",
      "members":{
        "formsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The forms included in the additional attributes of an inventory asset.</p>"
        },
        "latestTimeSeriesDataPointFormsOutput":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The latest time series data points forms included in the additional attributes of an asset.</p>"
        },
        "matchRationale":{
          "shape":"MatchRationale",
          "documentation":"<p>List of rationales indicating why this item was matched by search.</p>"
        },
        "readOnlyFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The read-only forms included in the additional attributes of an inventory asset.</p>"
        }
      },
      "documentation":"<p>The additional attributes of an inventory asset.</p>"
    },
    "AssetItemGovernedGlossaryTermsList":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":20,
      "min":0
    },
    "AssetListing":{
      "type":"structure",
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of an asset published in an Amazon DataZone catalog. </p>"
        },
        "assetRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of an asset published in an Amazon DataZone catalog. </p>"
        },
        "assetType":{
          "shape":"TypeName",
          "documentation":"<p>The type of an asset published in an Amazon DataZone catalog. </p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when an asset published in an Amazon DataZone catalog was created. </p>"
        },
        "forms":{
          "shape":"Forms",
          "documentation":"<p>The metadata forms attached to an asset published in an Amazon DataZone catalog. </p>"
        },
        "glossaryTerms":{
          "shape":"DetailedGlossaryTerms",
          "documentation":"<p>The glossary terms attached to an asset published in an Amazon DataZone catalog. </p>"
        },
        "governedGlossaryTerms":{
          "shape":"AssetListingGovernedGlossaryTermsList",
          "documentation":"<p>The restricted glossary terms associated with an asset.</p>"
        },
        "latestTimeSeriesDataPointForms":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The latest time series data points forms included in the additional attributes of an asset.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project where an asset published in an Amazon DataZone catalog exists. </p>"
        }
      },
      "documentation":"<p>An asset published in an Amazon DataZone catalog.</p>"
    },
    "AssetListingDetails":{
      "type":"structure",
      "required":[
        "listingId",
        "listingStatus"
      ],
      "members":{
        "listingId":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of an asset published in an Amazon DataZone catalog. </p>"
        },
        "listingStatus":{
          "shape":"ListingStatus",
          "documentation":"<p>The status of an asset published in an Amazon DataZone catalog. </p>"
        }
      },
      "documentation":"<p>The details of an asset published in an Amazon DataZone catalog. </p>"
    },
    "AssetListingGovernedGlossaryTermsList":{
      "type":"list",
      "member":{"shape":"DetailedGlossaryTerm"},
      "max":20,
      "min":0
    },
    "AssetListingItem":{
      "type":"structure",
      "members":{
        "additionalAttributes":{
          "shape":"AssetListingItemAdditionalAttributes",
          "documentation":"<p>The additional attributes of an asset published in an Amazon DataZone catalog.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when an asset published in an Amazon DataZone catalog was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of an asset published in an Amazon DataZone catalog.</p>"
        },
        "entityId":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of the inventory asset.</p>"
        },
        "entityRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the inventory asset.</p>"
        },
        "entityType":{
          "shape":"TypeName",
          "documentation":"<p>The type of the inventory asset.</p>"
        },
        "glossaryTerms":{
          "shape":"DetailedGlossaryTerms",
          "documentation":"<p>Glossary terms attached to the inventory asset.</p>"
        },
        "governedGlossaryTerms":{
          "shape":"AssetListingItemGovernedGlossaryTermsList",
          "documentation":"<p>The restricted glossary terms associated with an asset.</p>"
        },
        "listingCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the listing.</p>"
        },
        "listingId":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of the listing (asset published in Amazon DataZone catalog).</p>"
        },
        "listingRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the listing (asset published in Amazon DataZone catalog).</p>"
        },
        "listingUpdatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the listing.</p>"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>The name of the inventory asset.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that owns the inventory asset.</p>"
        }
      },
      "documentation":"<p>The details of an asset published in an Amazon DataZone catalog.</p>"
    },
    "AssetListingItemAdditionalAttributes":{
      "type":"structure",
      "members":{
        "forms":{
          "shape":"Forms",
          "documentation":"<p>The metadata forms that form additional attributes of the metadata asset.</p>"
        },
        "latestTimeSeriesDataPointForms":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The latest time series data points forms included in the additional attributes of an asset.</p>"
        },
        "matchRationale":{
          "shape":"MatchRationale",
          "documentation":"<p>List of rationales indicating why this item was matched by search.</p>"
        }
      },
      "documentation":"<p>Additional attributes of an inventory asset.</p>"
    },
    "AssetListingItemGovernedGlossaryTermsList":{
      "type":"list",
      "member":{"shape":"DetailedGlossaryTerm"},
      "max":20,
      "min":0
    },
    "AssetName":{
      "type":"string",
      "max":256,
      "min":1,
      "sensitive":true
    },
    "AssetRevision":{
      "type":"structure",
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when an inventory asset revison was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the asset revision.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The Amazon DataZone user who created the inventory asset.</p>"
        },
        "id":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of the inventory asset revision.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision details of the inventory asset.</p>"
        }
      },
      "documentation":"<p>The revision of an inventory asset.</p>"
    },
    "AssetRevisions":{
      "type":"list",
      "member":{"shape":"AssetRevision"}
    },
    "AssetScope":{
      "type":"structure",
      "required":[
        "assetId",
        "filterIds",
        "status"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The asset ID of the asset scope.</p>"
        },
        "errorMessage":{
          "shape":"String",
          "documentation":"<p>The error message of the asset scope.</p>"
        },
        "filterIds":{
          "shape":"FilterIds",
          "documentation":"<p>The filter IDs of the asset scope.</p>"
        },
        "status":{
          "shape":"String",
          "documentation":"<p>The status of the asset scope.</p>"
        }
      },
      "documentation":"<p>The asset scope.</p>"
    },
    "AssetTargetNameMap":{
      "type":"structure",
      "required":[
        "assetId",
        "targetName"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of the inventory asset.</p>"
        },
        "targetName":{
          "shape":"String",
          "documentation":"<p>The target name in the asset target name map.</p>"
        }
      },
      "documentation":"<p>The name map for assets.</p>"
    },
    "AssetTargetNames":{
      "type":"list",
      "member":{"shape":"AssetTargetNameMap"}
    },
    "AssetTypeIdentifier":{
      "type":"string",
      "max":513,
      "min":1,
      "pattern":"^(?!\\.)[\\w\\.]*\\w$"
    },
    "AssetTypeIdentifiers":{
      "type":"list",
      "member":{"shape":"AssetTypeIdentifier"}
    },
    "AssetTypeItem":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "name",
        "owningProjectId",
        "revision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the asset type was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the asset type.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the asset type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain where the asset type exists.</p>"
        },
        "formsOutput":{
          "shape":"FormsOutputMap",
          "documentation":"<p>The forms included in the details of the asset type.</p>"
        },
        "name":{
          "shape":"TypeName",
          "documentation":"<p>The name of the asset type.</p>"
        },
        "originDomainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain where the asset type was originally created.</p>"
        },
        "originProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project where the asset type exists.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project that owns the asset type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset type.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the asset type was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the asset type.</p>"
        }
      },
      "documentation":"<p>The details of the asset type.</p>"
    },
    "AssetTypesForRule":{
      "type":"structure",
      "required":["selectionMode"],
      "members":{
        "selectionMode":{
          "shape":"RuleScopeSelectionMode",
          "documentation":"<p>The selection mode for the rule.</p>"
        },
        "specificAssetTypes":{
          "shape":"RuleAssetTypeList",
          "documentation":"<p>The specific asset types that are included in the rule.</p>"
        }
      },
      "documentation":"<p>The asset type for the rule details.</p>"
    },
    "AssociateEnvironmentRoleInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "environmentRoleArn"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the environment role is associated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the Amazon DataZone environment.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "environmentRoleArn":{
          "shape":"String",
          "documentation":"<p>The ARN of the environment role.</p>",
          "location":"uri",
          "locationName":"environmentRoleArn"
        }
      }
    },
    "AssociateEnvironmentRoleOutput":{
      "type":"structure",
      "members":{}
    },
    "AssociateGovernedTermsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "governedGlossaryTerms"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where governed terms are to be associated with an asset.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of the asset with which you want to associate a governed term.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"GovernedEntityType",
          "documentation":"<p>The type of the asset with which you want to associate a governed term.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "governedGlossaryTerms":{
          "shape":"AssociateGovernedTermsInputGovernedGlossaryTermsList",
          "documentation":"<p>The glossary terms in a restricted glossary.</p>"
        }
      }
    },
    "AssociateGovernedTermsInputGovernedGlossaryTermsList":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":5,
      "min":1
    },
    "AssociateGovernedTermsOutput":{
      "type":"structure",
      "members":{}
    },
    "AthenaPropertiesInput":{
      "type":"structure",
      "members":{
        "workgroupName":{
          "shape":"AthenaPropertiesInputWorkgroupNameString",
          "documentation":"<p>The Amazon Athena workgroup name of a connection.</p>"
        }
      },
      "documentation":"<p>The Amazon Athena properties of a connection.</p>"
    },
    "AthenaPropertiesInputWorkgroupNameString":{
      "type":"string",
      "max":64,
      "min":0
    },
    "AthenaPropertiesOutput":{
      "type":"structure",
      "members":{
        "workgroupName":{
          "shape":"AthenaPropertiesOutputWorkgroupNameString",
          "documentation":"<p>The Amazon Athena workgroup name of a connection.</p>"
        }
      },
      "documentation":"<p>The Amazon Athena properties of a connection.</p>"
    },
    "AthenaPropertiesOutputWorkgroupNameString":{
      "type":"string",
      "max":64,
      "min":0
    },
    "AthenaPropertiesPatch":{
      "type":"structure",
      "members":{
        "workgroupName":{
          "shape":"AthenaPropertiesPatchWorkgroupNameString",
          "documentation":"<p>The Amazon Athena workgroup name of a connection.</p>"
        }
      },
      "documentation":"<p>The Amazon Athena properties patch of a connection.</p>"
    },
    "AthenaPropertiesPatchWorkgroupNameString":{
      "type":"string",
      "max":64,
      "min":0
    },
    "Attribute":{
      "type":"string",
      "max":128,
      "min":1
    },
    "AuthType":{
      "type":"string",
      "enum":[
        "IAM_IDC",
        "DISABLED"
      ]
    },
    "AuthenticationConfiguration":{
      "type":"structure",
      "members":{
        "authenticationType":{
          "shape":"AuthenticationType",
          "documentation":"<p>The authentication type of a connection.</p>"
        },
        "oAuth2Properties":{
          "shape":"OAuth2Properties",
          "documentation":"<p>The oAuth2 properties of a connection.</p>"
        },
        "secretArn":{
          "shape":"AuthenticationConfigurationSecretArnString",
          "documentation":"<p>The secret ARN of a connection.</p>"
        }
      },
      "documentation":"<p>The authentication configuration of a connection.</p>"
    },
    "AuthenticationConfigurationInput":{
      "type":"structure",
      "members":{
        "authenticationType":{
          "shape":"AuthenticationType",
          "documentation":"<p>The authentication type of a connection.</p>"
        },
        "basicAuthenticationCredentials":{
          "shape":"BasicAuthenticationCredentials",
          "documentation":"<p>The basic authentication credentials of a connection.</p>"
        },
        "customAuthenticationCredentials":{
          "shape":"CredentialMap",
          "documentation":"<p>The custom authentication credentials of a connection.</p>"
        },
        "kmsKeyArn":{
          "shape":"AuthenticationConfigurationInputKmsKeyArnString",
          "documentation":"<p>The KMS key ARN of a connection.</p>"
        },
        "oAuth2Properties":{
          "shape":"OAuth2Properties",
          "documentation":"<p>The oAuth2 properties of a connection.</p>"
        },
        "secretArn":{
          "shape":"AuthenticationConfigurationInputSecretArnString",
          "documentation":"<p>The secret ARN of a connection.</p>"
        }
      },
      "documentation":"<p>The authentication configuration of a connection.</p>"
    },
    "AuthenticationConfigurationInputKmsKeyArnString":{
      "type":"string",
      "pattern":"^$|arn:aws[a-z0-9-]*:kms:.*$"
    },
    "AuthenticationConfigurationInputSecretArnString":{
      "type":"string",
      "pattern":"^arn:aws(-(cn|us-gov|iso(-[bef])?))?:secretsmanager:.*$"
    },
    "AuthenticationConfigurationPatch":{
      "type":"structure",
      "members":{
        "basicAuthenticationCredentials":{
          "shape":"BasicAuthenticationCredentials",
          "documentation":"<p>The basic authentication credentials of a connection.</p>"
        },
        "secretArn":{
          "shape":"AuthenticationConfigurationPatchSecretArnString",
          "documentation":"<p>The secret ARN of a connection.</p>"
        }
      },
      "documentation":"<p>The authentication configuration patch of a connection. </p>"
    },
    "AuthenticationConfigurationPatchSecretArnString":{
      "type":"string",
      "pattern":"^arn:aws(-(cn|us-gov|iso(-[bef])?))?:secretsmanager:.*$"
    },
    "AuthenticationConfigurationSecretArnString":{
      "type":"string",
      "pattern":"^arn:aws(-(cn|us-gov|iso(-[bef])?))?:secretsmanager:.*$"
    },
    "AuthenticationType":{
      "type":"string",
      "enum":[
        "BASIC",
        "OAUTH2",
        "CUSTOM"
      ]
    },
    "AuthorizationCodeProperties":{
      "type":"structure",
      "members":{
        "authorizationCode":{
          "shape":"AuthorizationCodePropertiesAuthorizationCodeString",
          "documentation":"<p>The authorization code of a connection.</p>"
        },
        "redirectUri":{
          "shape":"AuthorizationCodePropertiesRedirectUriString",
          "documentation":"<p>The redirect URI of a connection.</p>"
        }
      },
      "documentation":"<p>The authorization code properties of a connection.</p>"
    },
    "AuthorizationCodePropertiesAuthorizationCodeString":{
      "type":"string",
      "max":4096,
      "min":1
    },
    "AuthorizationCodePropertiesRedirectUriString":{
      "type":"string",
      "max":512,
      "min":0
    },
    "AuthorizedPrincipalIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9:/._-]*$"
    },
    "AuthorizedPrincipalIdentifiers":{
      "type":"list",
      "member":{"shape":"AuthorizedPrincipalIdentifier"},
      "max":20,
      "min":1
    },
    "AwsAccount":{
      "type":"structure",
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The account ID of a project.</p>"
        },
        "awsAccountIdPath":{
          "shape":"ParameterStorePath",
          "documentation":"<p>The account ID path of a project.</p>"
        }
      },
      "documentation":"<p>The account ID of a project.</p>",
      "union":true
    },
    "AwsAccountId":{
      "type":"string",
      "pattern":"^\\d{12}$"
    },
    "AwsAccountName":{
      "type":"string",
      "max":256,
      "min":1,
      "sensitive":true
    },
    "AwsConsoleLinkParameters":{
      "type":"structure",
      "members":{
        "uri":{
          "shape":"String",
          "documentation":"<p>The URI of the console link specified as part of the environment action.</p>"
        }
      },
      "documentation":"<p>The parameters of the console link specified as part of the environment action.</p>"
    },
    "AwsLocation":{
      "type":"structure",
      "members":{
        "accessRole":{
          "shape":"AwsLocationAccessRoleString",
          "documentation":"<p>The access role of a connection.</p>"
        },
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The account ID of a connection.</p>"
        },
        "awsRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Region of a connection.</p>"
        },
        "iamConnectionId":{
          "shape":"ConnectionId",
          "documentation":"<p>The IAM connection ID of a connection.</p>"
        }
      },
      "documentation":"<p>The location of a project.</p>"
    },
    "AwsLocationAccessRoleString":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]*$"
    },
    "AwsRegion":{
      "type":"string",
      "pattern":"^[a-z]{2}-[a-z]{4,10}-\\d$"
    },
    "AwsRegionList":{
      "type":"list",
      "member":{"shape":"AwsRegion"},
      "max":3,
      "min":1
    },
    "BasicAuthenticationCredentials":{
      "type":"structure",
      "members":{
        "password":{
          "shape":"BasicAuthenticationCredentialsPasswordString",
          "documentation":"<p>The password for a connection.</p>"
        },
        "userName":{
          "shape":"BasicAuthenticationCredentialsUserNameString",
          "documentation":"<p>The user name for the connecion.</p>"
        }
      },
      "documentation":"<p>The basic authentication credentials of a connection.</p>",
      "sensitive":true
    },
    "BasicAuthenticationCredentialsPasswordString":{
      "type":"string",
      "max":512,
      "min":0,
      "pattern":"^.*$"
    },
    "BasicAuthenticationCredentialsUserNameString":{
      "type":"string",
      "max":512,
      "min":0,
      "pattern":"^\\S+$"
    },
    "Boolean":{
      "type":"boolean",
      "box":true
    },
    "BusinessNameGenerationConfiguration":{
      "type":"structure",
      "members":{
        "enabled":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the business name generation is enabled.</p>"
        }
      },
      "documentation":"<p>The configuration of the business name generation.</p>"
    },
    "CancelMetadataGenerationRunInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the metadata generation run is to be cancelled.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"MetadataGenerationRunIdentifier",
          "documentation":"<p>The ID of the metadata generation run.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "CancelMetadataGenerationRunOutput":{
      "type":"structure",
      "members":{}
    },
    "CancelSubscriptionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The unique identifier of the Amazon DataZone domain where the subscription request is being cancelled.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionId",
          "documentation":"<p>The unique identifier of the subscription that is being cancelled.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "CancelSubscriptionOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "status",
        "subscribedListing",
        "subscribedPrincipal",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp that specifies when the request to cancel the subscription was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>Specifies the Amazon DataZone user who is cancelling the subscription.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The unique identifier of the Amazon DataZone domain where the subscription is being cancelled.</p>"
        },
        "id":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subscription.</p>"
        },
        "retainPermissions":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the permissions to the asset are retained after the subscription is cancelled.</p>"
        },
        "status":{
          "shape":"SubscriptionStatus",
          "documentation":"<p>The status of the request to cancel the subscription.</p>"
        },
        "subscribedListing":{
          "shape":"SubscribedListing",
          "documentation":"<p>The asset to which a subscription is being cancelled.</p>"
        },
        "subscribedPrincipal":{
          "shape":"SubscribedPrincipal",
          "documentation":"<p>The Amazon DataZone user who is made a subscriber to the specified asset by the subscription that is being cancelled.</p>"
        },
        "subscriptionRequestId":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The unique ID of the subscripton request for the subscription that is being cancelled.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp that specifies when the subscription was cancelled.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user that cancelled the subscription.</p>"
        }
      }
    },
    "ChangeAction":{
      "type":"string",
      "enum":[
        "PUBLISH",
        "UNPUBLISH"
      ]
    },
    "ClientToken":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^[\\x21-\\x7E]+$"
    },
    "CloudFormationProperties":{
      "type":"structure",
      "required":["templateUrl"],
      "members":{
        "templateUrl":{
          "shape":"String",
          "documentation":"<p>The template URL of the cloud formation provisioning properties of the environment blueprint.</p>"
        }
      },
      "documentation":"<p>Part of the provisioning properties of the environment blueprint.</p>"
    },
    "ColumnFilterConfiguration":{
      "type":"structure",
      "members":{
        "includedColumnNames":{
          "shape":"ColumnNameList",
          "documentation":"<p>Specifies whether to include column names.</p>"
        }
      },
      "documentation":"<p>The column configuration of the asset filter.</p>"
    },
    "ColumnNameList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "ComputeEnvironments":{
      "type":"string",
      "enum":[
        "SPARK",
        "ATHENA",
        "PYTHON"
      ]
    },
    "ComputeEnvironmentsList":{
      "type":"list",
      "member":{"shape":"ComputeEnvironments"},
      "max":50,
      "min":1
    },
    "ConfigurableActionParameter":{
      "type":"structure",
      "members":{
        "key":{
          "shape":"String",
          "documentation":"<p>The key of the configurable action parameter.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value of the configurable action parameter.</p>"
        }
      },
      "documentation":"<p>The details of the parameters for the configurable environment action.</p>"
    },
    "ConfigurableActionParameterList":{
      "type":"list",
      "member":{"shape":"ConfigurableActionParameter"}
    },
    "ConfigurableActionTypeAuthorization":{
      "type":"string",
      "enum":[
        "IAM",
        "HTTPS"
      ]
    },
    "ConfigurableEnvironmentAction":{
      "type":"structure",
      "required":[
        "parameters",
        "type"
      ],
      "members":{
        "auth":{
          "shape":"ConfigurableActionTypeAuthorization",
          "documentation":"<p>The authentication type of a configurable action of a Amazon DataZone environment. </p>"
        },
        "parameters":{
          "shape":"ConfigurableActionParameterList",
          "documentation":"<p>The parameters of a configurable action in a Amazon DataZone environment.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of a configurable action in a Amazon DataZone environment.</p>"
        }
      },
      "documentation":"<p>The configurable action of a Amazon DataZone environment.</p>"
    },
    "ConflictException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>There is a conflict while performing this action.</p>",
      "error":{
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true
    },
    "ConnectionCredentials":{
      "type":"structure",
      "members":{
        "accessKeyId":{
          "shape":"String",
          "documentation":"<p>The access key ID of a connection.</p>"
        },
        "expiration":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The expiration of the connection credentials.</p>"
        },
        "secretAccessKey":{
          "shape":"String",
          "documentation":"<p>The secret access key of a connection.</p>"
        },
        "sessionToken":{
          "shape":"String",
          "documentation":"<p>The session token of a connection credentials.</p>"
        }
      },
      "documentation":"<p>The credentials of a connection.</p>",
      "sensitive":true
    },
    "ConnectionId":{
      "type":"string",
      "max":128,
      "min":0
    },
    "ConnectionName":{
      "type":"string",
      "max":64,
      "min":0
    },
    "ConnectionProperties":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"ConnectionPropertiesValueString"}
    },
    "ConnectionPropertiesInput":{
      "type":"structure",
      "members":{
        "athenaProperties":{
          "shape":"AthenaPropertiesInput",
          "documentation":"<p>The Amazon Athena properties of a connection.</p>"
        },
        "glueProperties":{
          "shape":"GluePropertiesInput",
          "documentation":"<p>The Amazon Web Services Glue properties of a connection.</p>"
        },
        "hyperPodProperties":{
          "shape":"HyperPodPropertiesInput",
          "documentation":"<p>The hyper pod properties of a connection.</p>"
        },
        "iamProperties":{
          "shape":"IamPropertiesInput",
          "documentation":"<p>The IAM properties of a connection.</p>"
        },
        "redshiftProperties":{
          "shape":"RedshiftPropertiesInput",
          "documentation":"<p>The Amazon Redshift properties of a connection.</p>"
        },
        "s3Properties":{
          "shape":"S3PropertiesInput",
          "documentation":"<p>The Amazon S3 properties of a connection.</p>"
        },
        "sparkEmrProperties":{
          "shape":"SparkEmrPropertiesInput",
          "documentation":"<p>The Spark EMR properties of a connection.</p>"
        },
        "sparkGlueProperties":{
          "shape":"SparkGluePropertiesInput",
          "documentation":"<p>The Spark Amazon Web Services Glue properties of a connection.</p>"
        }
      },
      "documentation":"<p>The properties of a connection.</p>",
      "union":true
    },
    "ConnectionPropertiesOutput":{
      "type":"structure",
      "members":{
        "athenaProperties":{
          "shape":"AthenaPropertiesOutput",
          "documentation":"<p>The Amazon Athena properties of a connection.</p>"
        },
        "glueProperties":{
          "shape":"GluePropertiesOutput",
          "documentation":"<p>The Amazon Web Services Glue properties of a connection.</p>"
        },
        "hyperPodProperties":{
          "shape":"HyperPodPropertiesOutput",
          "documentation":"<p>The hyper pod properties of a connection.</p>"
        },
        "iamProperties":{
          "shape":"IamPropertiesOutput",
          "documentation":"<p>The IAM properties of a connection.</p>"
        },
        "redshiftProperties":{
          "shape":"RedshiftPropertiesOutput",
          "documentation":"<p>The Amazon Redshift properties of a connection.</p>"
        },
        "s3Properties":{
          "shape":"S3PropertiesOutput",
          "documentation":"<p>The Amazon S3 properties of a connection.</p>"
        },
        "sparkEmrProperties":{
          "shape":"SparkEmrPropertiesOutput",
          "documentation":"<p>The Spark EMR properties of a connection.</p>"
        },
        "sparkGlueProperties":{
          "shape":"SparkGluePropertiesOutput",
          "documentation":"<p>The Spark Amazon Web Services Glue properties of a connection.</p>"
        }
      },
      "documentation":"<p>The properties of a connection.</p>",
      "union":true
    },
    "ConnectionPropertiesPatch":{
      "type":"structure",
      "members":{
        "athenaProperties":{
          "shape":"AthenaPropertiesPatch",
          "documentation":"<p>The Amazon Athena properties of a connection properties patch.</p>"
        },
        "glueProperties":{
          "shape":"GluePropertiesPatch",
          "documentation":"<p>The Amazon Web Services Glue properties of a connection properties patch.</p>"
        },
        "iamProperties":{
          "shape":"IamPropertiesPatch",
          "documentation":"<p>The IAM properties of a connection properties patch.</p>"
        },
        "redshiftProperties":{
          "shape":"RedshiftPropertiesPatch",
          "documentation":"<p>The Amazon Redshift properties of a connection properties patch.</p>"
        },
        "s3Properties":{
          "shape":"S3PropertiesPatch",
          "documentation":"<p>The Amazon S3 properties of a connection properties patch.</p>"
        },
        "sparkEmrProperties":{
          "shape":"SparkEmrPropertiesPatch",
          "documentation":"<p>The Spark EMR properties of a connection properties patch.</p>"
        }
      },
      "documentation":"<p>The connection properties patch.</p>",
      "union":true
    },
    "ConnectionPropertiesValueString":{
      "type":"string",
      "max":2048,
      "min":1
    },
    "ConnectionStatus":{
      "type":"string",
      "enum":[
        "CREATING",
        "CREATE_FAILED",
        "DELETING",
        "DELETE_FAILED",
        "READY",
        "UPDATING",
        "UPDATE_FAILED",
        "DELETED"
      ]
    },
    "ConnectionSummaries":{
      "type":"list",
      "member":{"shape":"ConnectionSummary"}
    },
    "ConnectionSummary":{
      "type":"structure",
      "required":[
        "connectionId",
        "domainId",
        "domainUnitId",
        "name",
        "physicalEndpoints",
        "type"
      ],
      "members":{
        "connectionId":{
          "shape":"ConnectionId",
          "documentation":"<p>The ID of a connection.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The domain ID of a connection.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The domain unit ID of a connection.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID of a connection.</p>"
        },
        "name":{
          "shape":"ConnectionName",
          "documentation":"<p>The connection name.</p>"
        },
        "physicalEndpoints":{
          "shape":"PhysicalEndpoints",
          "documentation":"<p>The connection physical endpoints.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The connection project ID.</p>"
        },
        "props":{
          "shape":"ConnectionPropertiesOutput",
          "documentation":"<p>The connection props.</p>"
        },
        "type":{
          "shape":"ConnectionType",
          "documentation":"<p>The connection type.</p>"
        }
      },
      "documentation":"<p>The summary of a connection.</p>"
    },
    "ConnectionType":{
      "type":"string",
      "enum":[
        "ATHENA",
        "BIGQUERY",
        "DATABRICKS",
        "DOCUMENTDB",
        "DYNAMODB",
        "HYPERPOD",
        "IAM",
        "MYSQL",
        "OPENSEARCH",
        "ORACLE",
        "POSTGRESQL",
        "REDSHIFT",
        "S3",
        "SAPHANA",
        "SNOWFLAKE",
        "SPARK",
        "SQLSERVER",
        "TERADATA",
        "VERTICA",
        "WORKFLOWS_MWAA"
      ]
    },
    "CreateAccountPoolInput":{
      "type":"structure",
      "required":[
        "accountSource",
        "domainIdentifier",
        "name",
        "resolutionStrategy"
      ],
      "members":{
        "accountSource":{
          "shape":"AccountSource",
          "documentation":"<p>The source of accounts for the account pool. In the current release, it's either a static list of accounts provided by the customer or a custom Amazon Web Services Lambda handler. </p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the account pool.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the account pool is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "name":{
          "shape":"AccountPoolName",
          "documentation":"<p>The name of the account pool.</p>"
        },
        "resolutionStrategy":{
          "shape":"ResolutionStrategy",
          "documentation":"<p>The mechanism used to resolve the account selection from the account pool.</p>"
        }
      }
    },
    "CreateAccountPoolOutput":{
      "type":"structure",
      "required":[
        "accountSource",
        "createdBy"
      ],
      "members":{
        "accountSource":{
          "shape":"AccountSource",
          "documentation":"<p>The source of accounts for the account pool. In the current release, it's either a static list of accounts provided by the customer or a custom Amazon Web Services Lambda handler. </p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp at which the account pool was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the account pool.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the account pool.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the account pool is created.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain where the account pool is created.</p>"
        },
        "id":{
          "shape":"AccountPoolId",
          "documentation":"<p>The ID of the account pool.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp at which the account pool was last updated.</p>"
        },
        "name":{
          "shape":"AccountPoolName",
          "documentation":"<p>The name of the account pool.</p>"
        },
        "resolutionStrategy":{
          "shape":"ResolutionStrategy",
          "documentation":"<p>The mechanism used to resolve the account selection from the account pool.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user who last updated the account pool.</p>"
        }
      }
    },
    "CreateAssetFilterInput":{
      "type":"structure",
      "required":[
        "assetIdentifier",
        "configuration",
        "domainIdentifier",
        "name"
      ],
      "members":{
        "assetIdentifier":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the data asset.</p>",
          "location":"uri",
          "locationName":"assetIdentifier"
        },
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "configuration":{
          "shape":"AssetFilterConfiguration",
          "documentation":"<p>The configuration of the asset filter.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the asset filter.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which you want to create an asset filter.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "name":{
          "shape":"FilterName",
          "documentation":"<p>The name of the asset filter.</p>"
        }
      }
    },
    "CreateAssetFilterOutput":{
      "type":"structure",
      "required":[
        "assetId",
        "configuration",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the asset.</p>"
        },
        "configuration":{
          "shape":"AssetFilterConfiguration",
          "documentation":"<p>The configuration of the asset filter.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the asset filter was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the asset filter.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the asset filter is created.</p>"
        },
        "effectiveColumnNames":{
          "shape":"ColumnNameList",
          "documentation":"<p>The column names in the asset filter.</p>"
        },
        "effectiveRowFilter":{
          "shape":"String",
          "documentation":"<p>The row filter in the asset filter.</p>"
        },
        "errorMessage":{
          "shape":"String",
          "documentation":"<p>The error message that is displayed if the asset filter is not created successfully.</p>"
        },
        "id":{
          "shape":"FilterId",
          "documentation":"<p>The ID of the asset filter.</p>"
        },
        "name":{
          "shape":"FilterName",
          "documentation":"<p>The name of the asset filter.</p>"
        },
        "status":{
          "shape":"FilterStatus",
          "documentation":"<p>The status of the asset filter.</p>"
        }
      }
    },
    "CreateAssetInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "name",
        "owningProjectIdentifier",
        "typeIdentifier"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>Asset description.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>Amazon DataZone domain where the asset is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "externalIdentifier":{
          "shape":"ExternalIdentifier",
          "documentation":"<p>The external identifier of the asset.</p> <p>If the value for the <code>externalIdentifier</code> parameter is specified, it must be a unique value.</p>"
        },
        "formsInput":{
          "shape":"FormInputList",
          "documentation":"<p>Metadata forms attached to the asset.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>Glossary terms attached to the asset.</p>"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>Asset name.</p>"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The unique identifier of the project that owns this asset.</p>"
        },
        "predictionConfiguration":{
          "shape":"PredictionConfiguration",
          "documentation":"<p>The configuration of the automatically generated business-friendly metadata for the asset.</p>"
        },
        "typeIdentifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The unique identifier of this asset's type.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of this asset's type.</p>"
        }
      }
    },
    "CreateAssetOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "id",
        "name",
        "owningProjectId",
        "revision",
        "typeIdentifier",
        "typeRevision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the asset was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user that created this asset in the catalog.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the created asset.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset was created.</p>"
        },
        "externalIdentifier":{
          "shape":"ExternalIdentifier",
          "documentation":"<p>The external identifier of the asset.</p>"
        },
        "firstRevisionCreatedAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the first revision of the asset took place.</p>"
        },
        "firstRevisionCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user that made the first revision of the asset.</p>"
        },
        "formsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms that are attached to the created asset.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms that are attached to the created asset.</p>"
        },
        "governedGlossaryTerms":{
          "shape":"CreateAssetOutputGovernedGlossaryTermsList",
          "documentation":"<p>The glossary terms in a restricted glossary.</p>"
        },
        "id":{
          "shape":"AssetId",
          "documentation":"<p>The unique identifier of the created asset.</p>"
        },
        "latestTimeSeriesDataPointFormsOutput":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The latest data point that was imported into the time series form for the asset. </p>"
        },
        "listing":{
          "shape":"AssetListingDetails",
          "documentation":"<p>The details of an asset published in an Amazon DataZone catalog.</p>"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>The name of the created asset.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project that owns the created asset. </p>"
        },
        "predictionConfiguration":{
          "shape":"PredictionConfiguration",
          "documentation":"<p>The configuration of the automatically generated business-friendly metadata for the asset.</p>"
        },
        "readOnlyFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The read-only metadata forms that are attached to the created asset.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset.</p>"
        },
        "typeIdentifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The identifier of the created asset type.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision type of the asset.</p>"
        }
      }
    },
    "CreateAssetOutputGovernedGlossaryTermsList":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":20,
      "min":0
    },
    "CreateAssetRevisionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier",
        "name"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The revised description of the asset.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The unique identifier of the domain where the asset is being revised.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "formsInput":{
          "shape":"FormInputList",
          "documentation":"<p>The metadata forms to be attached to the asset as part of asset revision.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms to be attached to the asset as part of asset revision.</p>"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>The identifier of the asset.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>Te revised name of the asset.</p>"
        },
        "predictionConfiguration":{
          "shape":"PredictionConfiguration",
          "documentation":"<p>The configuration of the automatically generated business-friendly metadata for the asset.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision type of the asset.</p>"
        }
      }
    },
    "CreateAssetRevisionOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "id",
        "name",
        "owningProjectId",
        "revision",
        "typeIdentifier",
        "typeRevision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the asset revision occured.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who performed the asset revision.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The revised asset description.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The unique identifier of the Amazon DataZone domain where the asset was revised.</p>"
        },
        "externalIdentifier":{
          "shape":"ExternalIdentifier",
          "documentation":"<p>The external identifier of the asset.</p>"
        },
        "firstRevisionCreatedAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the first asset revision occured.</p>"
        },
        "firstRevisionCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who performed the first asset revision.</p>"
        },
        "formsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms that were attached to the asset as part of the asset revision.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms that were attached to the asset as part of asset revision.</p>"
        },
        "governedGlossaryTerms":{
          "shape":"CreateAssetRevisionOutputGovernedGlossaryTermsList",
          "documentation":"<p>The glossary terms in a restricted glossary.</p>"
        },
        "id":{
          "shape":"AssetId",
          "documentation":"<p>The unique identifier of the asset revision.</p>"
        },
        "latestTimeSeriesDataPointFormsOutput":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The latest data point that was imported into the time series form for the asset. </p>"
        },
        "listing":{
          "shape":"AssetListingDetails",
          "documentation":"<p>The details of an asset published in an Amazon DataZone catalog. </p>"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>The revised name of the asset.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The unique identifier of the revised project that owns the asset.</p>"
        },
        "predictionConfiguration":{
          "shape":"PredictionConfiguration",
          "documentation":"<p>The configuration of the automatically generated business-friendly metadata for the asset.</p>"
        },
        "readOnlyFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The read-only metadata forms that were attached to the asset as part of the asset revision.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset.</p>"
        },
        "typeIdentifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The identifier of the revision type.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision type of the asset.</p>"
        }
      }
    },
    "CreateAssetRevisionOutputGovernedGlossaryTermsList":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":20,
      "min":0
    },
    "CreateAssetTypeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "formsInput",
        "name",
        "owningProjectIdentifier"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The descripton of the custom asset type.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The unique identifier of the Amazon DataZone domain where the custom asset type is being created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "formsInput":{
          "shape":"FormsInputMap",
          "documentation":"<p>The metadata forms that are to be attached to the custom asset type.</p>"
        },
        "name":{
          "shape":"TypeName",
          "documentation":"<p>The name of the custom asset type.</p>"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project that is to own the custom asset type.</p>"
        }
      }
    },
    "CreateAssetTypeOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "name",
        "revision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the asset type is to be created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who creates this custom asset type.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the custom asset type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset type was created.</p>"
        },
        "formsOutput":{
          "shape":"FormsOutputMap",
          "documentation":"<p>The metadata forms that are attached to the asset type.</p>"
        },
        "name":{
          "shape":"TypeName",
          "documentation":"<p>The name of the asset type.</p>"
        },
        "originDomainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where the asset type was originally created.</p>"
        },
        "originProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project where the asset type was originally created.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project that currently owns this asset type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the custom asset type.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the custom type was created.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user that created the custom asset type.</p>"
        }
      }
    },
    "CreateAssetTypePolicyGrantDetail":{
      "type":"structure",
      "members":{
        "includeChildDomainUnits":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the policy grant is applied to child domain units.</p>"
        }
      },
      "documentation":"<p>The details of the policy grant.</p>"
    },
    "CreateConnectionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "name"
      ],
      "members":{
        "awsLocation":{
          "shape":"AwsLocation",
          "documentation":"<p>The location where the connection is created.</p>"
        },
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"CreateConnectionInputDescriptionString",
          "documentation":"<p>A connection description.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the connection is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment where the connection is created.</p>"
        },
        "name":{
          "shape":"ConnectionName",
          "documentation":"<p>The connection name.</p>"
        },
        "props":{
          "shape":"ConnectionPropertiesInput",
          "documentation":"<p>The connection props.</p>"
        }
      }
    },
    "CreateConnectionInputDescriptionString":{
      "type":"string",
      "max":128,
      "min":0,
      "sensitive":true
    },
    "CreateConnectionOutput":{
      "type":"structure",
      "required":[
        "connectionId",
        "domainId",
        "domainUnitId",
        "name",
        "physicalEndpoints",
        "type"
      ],
      "members":{
        "connectionId":{
          "shape":"ConnectionId",
          "documentation":"<p>The ID of the connection.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The connection description.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the connection is created.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit where the connection is created.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment where the connection is created.</p>"
        },
        "name":{
          "shape":"ConnectionName",
          "documentation":"<p>The connection name.</p>"
        },
        "physicalEndpoints":{
          "shape":"PhysicalEndpoints",
          "documentation":"<p>The physical endpoints of the connection.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project where the connection is created.</p>"
        },
        "props":{
          "shape":"ConnectionPropertiesOutput",
          "documentation":"<p>The connection props.</p>"
        },
        "type":{
          "shape":"ConnectionType",
          "documentation":"<p>The connection type.</p>"
        }
      }
    },
    "CreateDataProductInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "name",
        "owningProjectIdentifier"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"DataProductDescription",
          "documentation":"<p>The description of the data product.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the data product is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "formsInput":{
          "shape":"FormInputList",
          "documentation":"<p>The metadata forms of the data product.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms of the data product.</p>"
        },
        "items":{
          "shape":"DataProductItems",
          "documentation":"<p>The data assets of the data product.</p>"
        },
        "name":{
          "shape":"DataProductName",
          "documentation":"<p>The name of the data product.</p>"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the owning project of the data product.</p>"
        }
      }
    },
    "CreateDataProductOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId",
        "revision",
        "status"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the data product was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the data product.</p>"
        },
        "description":{
          "shape":"DataProductDescription",
          "documentation":"<p>The description of the data product.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the data product lives.</p>"
        },
        "firstRevisionCreatedAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the first revision of the data product was created.</p>"
        },
        "firstRevisionCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the first revision of the data product.</p>"
        },
        "formsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms of the data product.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms of the data product.</p>"
        },
        "id":{
          "shape":"DataProductId",
          "documentation":"<p>The ID of the data product.</p>"
        },
        "items":{
          "shape":"DataProductItems",
          "documentation":"<p>The data assets of the data product.</p>"
        },
        "name":{
          "shape":"DataProductName",
          "documentation":"<p>The name of the data product.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the owning project of the data product.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the data product.</p>"
        },
        "status":{
          "shape":"DataProductStatus",
          "documentation":"<p>The status of the data product.</p>"
        }
      }
    },
    "CreateDataProductRevisionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier",
        "name"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"DataProductDescription",
          "documentation":"<p>The description of the data product revision.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the data product revision is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "formsInput":{
          "shape":"FormInputList",
          "documentation":"<p>The metadata forms of the data product revision.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms of the data product revision.</p>"
        },
        "identifier":{
          "shape":"DataProductId",
          "documentation":"<p>The ID of the data product revision.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "items":{
          "shape":"DataProductItems",
          "documentation":"<p>The data assets of the data product revision.</p>"
        },
        "name":{
          "shape":"DataProductName",
          "documentation":"<p>The name of the data product revision.</p>"
        }
      }
    },
    "CreateDataProductRevisionOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId",
        "revision",
        "status"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the data product revision is created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the data product revision.</p>"
        },
        "description":{
          "shape":"DataProductDescription",
          "documentation":"<p>The description of the data product revision.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where data product revision is created.</p>"
        },
        "firstRevisionCreatedAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the first revision of the data product is created.</p>"
        },
        "firstRevisionCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the first revision of the data product.</p>"
        },
        "formsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms of the data product revision.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms of the data product revision.</p>"
        },
        "id":{
          "shape":"DataProductId",
          "documentation":"<p>The ID of the data product revision.</p>"
        },
        "items":{
          "shape":"DataProductItems",
          "documentation":"<p>The data assets of the data product revision.</p>"
        },
        "name":{
          "shape":"DataProductName",
          "documentation":"<p>The name of the data product revision.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the owning project of the data product revision.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the data product revision.</p>"
        },
        "status":{
          "shape":"DataProductStatus",
          "documentation":"<p>The status of the data product revision.</p>"
        }
      }
    },
    "CreateDataSourceInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "name",
        "projectIdentifier",
        "type"
      ],
      "members":{
        "assetFormsInput":{
          "shape":"FormInputList",
          "documentation":"<p>The metadata forms that are to be attached to the assets that this data source works with.</p>"
        },
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "configuration":{
          "shape":"DataSourceConfigurationInput",
          "documentation":"<p>Specifies the configuration of the data source. It can be set to either <code>glueRunConfiguration</code> or <code>redshiftRunConfiguration</code>.</p>"
        },
        "connectionIdentifier":{
          "shape":"CreateDataSourceInputConnectionIdentifierString",
          "documentation":"<p>The ID of the connection.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the data source.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where the data source is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>Specifies whether the data source is enabled.</p>"
        },
        "environmentIdentifier":{
          "shape":"CreateDataSourceInputEnvironmentIdentifierString",
          "documentation":"<p>The unique identifier of the Amazon DataZone environment to which the data source publishes assets. </p>"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name of the data source.</p>"
        },
        "projectIdentifier":{
          "shape":"CreateDataSourceInputProjectIdentifierString",
          "documentation":"<p>The identifier of the Amazon DataZone project in which you want to add this data source.</p>"
        },
        "publishOnImport":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.</p>"
        },
        "recommendation":{
          "shape":"RecommendationConfiguration",
          "documentation":"<p>Specifies whether the business name generation is to be enabled for this data source.</p>"
        },
        "schedule":{
          "shape":"ScheduleConfiguration",
          "documentation":"<p>The schedule of the data source runs.</p>"
        },
        "type":{
          "shape":"DataSourceType",
          "documentation":"<p>The type of the data source. In Amazon DataZone, you can use data sources to import technical metadata of assets (data) from the source databases or data warehouses into Amazon DataZone. In the current release of Amazon DataZone, you can create and run data sources for Amazon Web Services Glue and Amazon Redshift.</p>"
        }
      }
    },
    "CreateDataSourceInputConnectionIdentifierString":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "CreateDataSourceInputEnvironmentIdentifierString":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "CreateDataSourceInputProjectIdentifierString":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "CreateDataSourceOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "projectId"
      ],
      "members":{
        "assetFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms attached to the assets that this data source creates.</p>"
        },
        "configuration":{
          "shape":"DataSourceConfigurationOutput",
          "documentation":"<p>Specifies the configuration of the data source. It can be set to either <code>glueRunConfiguration</code> or <code>redshiftRunConfiguration</code>.</p>"
        },
        "connectionId":{
          "shape":"String",
          "documentation":"<p>The ID of the connection.</p>"
        },
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the data source.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data source is created.</p>"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>Specifies whether the data source is enabled.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The unique identifier of the Amazon DataZone environment to which the data source publishes assets. </p>"
        },
        "errorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"DataSourceId",
          "documentation":"<p>The unique identifier of the data source.</p>"
        },
        "lastRunAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp that specifies when the data source was last run.</p>"
        },
        "lastRunErrorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "lastRunStatus":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the last run of this data source.</p>"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name of the data source.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project to which the data source is added.</p>"
        },
        "publishOnImport":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.</p>"
        },
        "recommendation":{
          "shape":"RecommendationConfiguration",
          "documentation":"<p>Specifies whether the business name generation is to be enabled for this data source.</p>"
        },
        "schedule":{
          "shape":"ScheduleConfiguration",
          "documentation":"<p>The schedule of the data source runs.</p>"
        },
        "status":{
          "shape":"DataSourceStatus",
          "documentation":"<p>The status of the data source.</p>"
        },
        "type":{
          "shape":"DataSourceType",
          "documentation":"<p>The type of the data source.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was updated.</p>"
        }
      }
    },
    "CreateDomainInput":{
      "type":"structure",
      "required":[
        "domainExecutionRole",
        "name"
      ],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the Amazon DataZone domain.</p>"
        },
        "domainExecutionRole":{
          "shape":"RoleArn",
          "documentation":"<p>The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the Amazon Web Services account that houses the Amazon DataZone domain.</p>"
        },
        "domainVersion":{
          "shape":"DomainVersion",
          "documentation":"<p>The version of the domain that is created.</p>"
        },
        "kmsKeyIdentifier":{
          "shape":"KmsKeyArn",
          "documentation":"<p>The identifier of the Amazon Web Services Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data. </p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the Amazon DataZone domain.</p>"
        },
        "serviceRole":{
          "shape":"RoleArn",
          "documentation":"<p>The service role of the domain that is created.</p>"
        },
        "singleSignOn":{
          "shape":"SingleSignOn",
          "documentation":"<p>The single-sign on configuration of the Amazon DataZone domain.</p>"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>The tags specified for the Amazon DataZone domain.</p>"
        }
      }
    },
    "CreateDomainOutput":{
      "type":"structure",
      "required":["id"],
      "members":{
        "arn":{
          "shape":"String",
          "documentation":"<p>The ARN of the Amazon DataZone domain.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the Amazon DataZone domain.</p>"
        },
        "domainExecutionRole":{
          "shape":"RoleArn",
          "documentation":"<p>The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the Amazon Web Services account that houses the Amazon DataZone domain.</p>"
        },
        "domainVersion":{
          "shape":"DomainVersion",
          "documentation":"<p>The version of the domain that is created.</p>"
        },
        "id":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>"
        },
        "kmsKeyIdentifier":{
          "shape":"KmsKeyArn",
          "documentation":"<p>The identifier of the Amazon Web Services Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data. </p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the Amazon DataZone domain.</p>"
        },
        "portalUrl":{
          "shape":"String",
          "documentation":"<p>The URL of the data portal for this Amazon DataZone domain.</p>"
        },
        "rootDomainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the root domain unit.</p>"
        },
        "serviceRole":{
          "shape":"RoleArn",
          "documentation":"<p>Te service role of the domain that is created.</p>"
        },
        "singleSignOn":{
          "shape":"SingleSignOn",
          "documentation":"<p>The single-sign on configuration of the Amazon DataZone domain.</p>"
        },
        "status":{
          "shape":"DomainStatus",
          "documentation":"<p>The status of the Amazon DataZone domain.</p>"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>The tags specified for the Amazon DataZone domain.</p>"
        }
      }
    },
    "CreateDomainUnitInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "name",
        "parentDomainUnitIdentifier"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"DomainUnitDescription",
          "documentation":"<p>The description of the domain unit.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to crate a domain unit.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "name":{
          "shape":"DomainUnitName",
          "documentation":"<p>The name of the domain unit.</p>"
        },
        "parentDomainUnitIdentifier":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the parent domain unit.</p>"
        }
      }
    },
    "CreateDomainUnitOutput":{
      "type":"structure",
      "required":[
        "ancestorDomainUnitIds",
        "domainId",
        "id",
        "name",
        "owners"
      ],
      "members":{
        "ancestorDomainUnitIds":{
          "shape":"DomainUnitIds",
          "documentation":"<p>The IDs of the ancestor domain units.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the domain unit was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the domain unit.</p>"
        },
        "description":{
          "shape":"DomainUnitDescription",
          "documentation":"<p>The description of the domain unit.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the domain unit was created.</p>"
        },
        "id":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit.</p>"
        },
        "name":{
          "shape":"DomainUnitName",
          "documentation":"<p>The name of the domain unit.</p>"
        },
        "owners":{
          "shape":"DomainUnitOwners",
          "documentation":"<p>The owners of the domain unit.</p>"
        },
        "parentDomainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the parent domain unit.</p>"
        }
      }
    },
    "CreateDomainUnitPolicyGrantDetail":{
      "type":"structure",
      "members":{
        "includeChildDomainUnits":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the policy grant is applied to child domain units.</p>"
        }
      },
      "documentation":"<p>The details of the policy grant.</p>"
    },
    "CreateEnvironmentActionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "name",
        "parameters"
      ],
      "members":{
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the environment action that is being created in the environment.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the environment action is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment in which the environment action is created.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the environment action.</p>"
        },
        "parameters":{
          "shape":"ActionParameters",
          "documentation":"<p>The parameters of the environment action.</p>"
        }
      }
    },
    "CreateEnvironmentActionOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentId",
        "id",
        "name",
        "parameters"
      ],
      "members":{
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the environment action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which the environment action is created.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment in which the environment is created.</p>"
        },
        "id":{
          "shape":"EnvironmentActionId",
          "documentation":"<p>The ID of the environment action.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the environment action.</p>"
        },
        "parameters":{
          "shape":"ActionParameters",
          "documentation":"<p>The parameters of the environment action.</p>"
        }
      }
    },
    "CreateEnvironmentBlueprintInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "name",
        "provisioningProperties"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the Amazon DataZone blueprint.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain in which this blueprint is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "name":{
          "shape":"EnvironmentBlueprintName",
          "documentation":"<p>The name of this Amazon DataZone blueprint.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties of this Amazon DataZone blueprint.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters of this Amazon DataZone blueprint.</p>"
        }
      }
    },
    "CreateEnvironmentBlueprintOutput":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "provider",
        "provisioningProperties"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp at which the environment blueprint was created.</p>"
        },
        "deploymentProperties":{
          "shape":"DeploymentProperties",
          "documentation":"<p>The deployment properties of this Amazon DataZone blueprint.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone blueprint.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms attached to this Amazon DataZone blueprint.</p>"
        },
        "id":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of this Amazon DataZone blueprint.</p>"
        },
        "name":{
          "shape":"EnvironmentBlueprintName",
          "documentation":"<p>The name of this Amazon DataZone blueprint.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of this Amazon DataZone blueprint.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties of this Amazon DataZone blueprint.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this blueprint was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters of this Amazon DataZone blueprint.</p>"
        }
      }
    },
    "CreateEnvironmentInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "name",
        "projectIdentifier"
      ],
      "members":{
        "deploymentOrder":{
          "shape":"Integer",
          "documentation":"<p>The deployment order of the environment.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the Amazon DataZone environment.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the environment is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentAccountIdentifier":{
          "shape":"String",
          "documentation":"<p>The ID of the account in which the environment is being created.</p>"
        },
        "environmentAccountRegion":{
          "shape":"String",
          "documentation":"<p>The region of the account in which the environment is being created.</p>"
        },
        "environmentBlueprintIdentifier":{
          "shape":"String",
          "documentation":"<p>The ID of the blueprint with which the environment is being created.</p>"
        },
        "environmentConfigurationId":{
          "shape":"String",
          "documentation":"<p>The configuration ID of the environment.</p>"
        },
        "environmentProfileIdentifier":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The identifier of the environment profile that is used to create this Amazon DataZone environment.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms that can be used in this Amazon DataZone environment.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the Amazon DataZone environment.</p>"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project in which this environment is created.</p>"
        },
        "userParameters":{
          "shape":"EnvironmentParametersList",
          "documentation":"<p>The user parameters of this Amazon DataZone environment.</p>"
        }
      }
    },
    "CreateEnvironmentOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "name",
        "projectId",
        "provider"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The Amazon Web Services account in which the Amazon DataZone environment is created.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region in which the Amazon DataZone environment is created.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created this environment.</p>"
        },
        "deploymentProperties":{
          "shape":"DeploymentProperties",
          "documentation":"<p>The deployment properties of this Amazon DataZone environment.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone environment.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the environment is created.</p>"
        },
        "environmentActions":{
          "shape":"EnvironmentActionList",
          "documentation":"<p>The configurable actions of this Amazon DataZone environment.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint with which this Amazon DataZone environment was created.</p>"
        },
        "environmentConfigurationId":{
          "shape":"EnvironmentConfigurationId",
          "documentation":"<p>The configuration ID of the environment.</p>"
        },
        "environmentProfileId":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The ID of the environment profile with which this Amazon DataZone environment was created.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms that can be used in this Amazon DataZone environment.</p>"
        },
        "id":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of this Amazon DataZone environment.</p>"
        },
        "lastDeployment":{
          "shape":"Deployment",
          "documentation":"<p>The details of the last deployment of this Amazon DataZone environment.</p>"
        },
        "name":{
          "shape":"EnvironmentName",
          "documentation":"<p>The name of this environment.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project in which this environment is created.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of this Amazon DataZone environment.</p>"
        },
        "provisionedResources":{
          "shape":"ResourceList",
          "documentation":"<p>The provisioned resources of this Amazon DataZone environment.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties of this Amazon DataZone environment.</p>"
        },
        "status":{
          "shape":"EnvironmentStatus",
          "documentation":"<p>The status of this Amazon DataZone environment.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this environment was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters of this Amazon DataZone environment.</p>"
        }
      }
    },
    "CreateEnvironmentProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentBlueprintIdentifier",
        "name",
        "projectIdentifier"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The Amazon Web Services account in which the Amazon DataZone environment is created.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region in which this environment profile is created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone environment profile.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this environment profile is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentBlueprintIdentifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint with which this environment profile is created.</p>"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p>The name of this Amazon DataZone environment profile.</p>"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project in which to create the environment profile.</p>"
        },
        "userParameters":{
          "shape":"EnvironmentParametersList",
          "documentation":"<p>The user parameters of this Amazon DataZone environment profile.</p>"
        }
      }
    },
    "CreateEnvironmentProfileOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "environmentBlueprintId",
        "id",
        "name"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The Amazon Web Services account ID in which this Amazon DataZone environment profile is created.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region in which this Amazon DataZone environment profile is created.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this environment profile was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created this environment profile.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone environment profile.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this environment profile is created.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint with which this environment profile is created.</p>"
        },
        "id":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The ID of this Amazon DataZone environment profile.</p>"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p>The name of this Amazon DataZone environment profile.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project in which this environment profile is created.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this environment profile was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters of this Amazon DataZone environment profile.</p>"
        }
      }
    },
    "CreateEnvironmentProfilePolicyGrantDetail":{
      "type":"structure",
      "members":{
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit.</p>"
        }
      },
      "documentation":"<p>The details of the policy grant.</p>"
    },
    "CreateFormTypeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "model",
        "name",
        "owningProjectIdentifier"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone metadata form type.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this metadata form type is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "model":{
          "shape":"Model",
          "documentation":"<p>The model of this Amazon DataZone metadata form type.</p>"
        },
        "name":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of this Amazon DataZone metadata form type.</p>"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project that owns this metadata form type.</p>"
        },
        "status":{
          "shape":"FormTypeStatus",
          "documentation":"<p>The status of this Amazon DataZone metadata form type.</p>"
        }
      }
    },
    "CreateFormTypeOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "name",
        "revision"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone metadata form type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this metadata form type is created.</p>"
        },
        "name":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of this Amazon DataZone metadata form type.</p>"
        },
        "originDomainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this metadata form type was originally created.</p>"
        },
        "originProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project in which this Amazon DataZone metadata form type was originally created.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns this Amazon DataZone metadata form type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of this Amazon DataZone metadata form type.</p>"
        }
      }
    },
    "CreateFormTypePolicyGrantDetail":{
      "type":"structure",
      "members":{
        "includeChildDomainUnits":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the policy grant is applied to child domain units.</p>"
        }
      },
      "documentation":"<p>The details of the policy grant.</p>"
    },
    "CreateGlossaryInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "name",
        "owningProjectIdentifier"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"GlossaryDescription",
          "documentation":"<p>The description of this business glossary.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "name":{
          "shape":"GlossaryName",
          "documentation":"<p>The name of this business glossary.</p>"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that currently owns business glossary.</p>"
        },
        "status":{
          "shape":"GlossaryStatus",
          "documentation":"<p>The status of this business glossary.</p>"
        },
        "usageRestrictions":{
          "shape":"GlossaryUsageRestrictions",
          "documentation":"<p>The usage restriction of the restricted glossary.</p>"
        }
      }
    },
    "CreateGlossaryOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId"
      ],
      "members":{
        "description":{
          "shape":"GlossaryDescription",
          "documentation":"<p>The description of this business glossary.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary is created.</p>"
        },
        "id":{
          "shape":"GlossaryId",
          "documentation":"<p>The ID of this business glossary.</p>"
        },
        "name":{
          "shape":"GlossaryName",
          "documentation":"<p>The name of this business glossary.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that currently owns this business glossary.</p>"
        },
        "status":{
          "shape":"GlossaryStatus",
          "documentation":"<p>The status of this business glossary.</p>"
        },
        "usageRestrictions":{
          "shape":"GlossaryUsageRestrictions",
          "documentation":"<p>The usage restriction of the restricted glossary.</p>"
        }
      }
    },
    "CreateGlossaryPolicyGrantDetail":{
      "type":"structure",
      "members":{
        "includeChildDomainUnits":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the policy grant is applied to child domain units.</p>"
        }
      },
      "documentation":"<p>The details of the policy grant.</p>"
    },
    "CreateGlossaryTermInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "glossaryIdentifier",
        "name"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary term is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "glossaryIdentifier":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The ID of the business glossary in which this term is created.</p>"
        },
        "longDescription":{
          "shape":"LongDescription",
          "documentation":"<p>The long description of this business glossary term.</p>"
        },
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name of this business glossary term.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The short description of this business glossary term.</p>"
        },
        "status":{
          "shape":"GlossaryTermStatus",
          "documentation":"<p>The status of this business glossary term.</p>"
        },
        "termRelations":{
          "shape":"TermRelations",
          "documentation":"<p>The term relations of this business glossary term.</p>"
        }
      }
    },
    "CreateGlossaryTermOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "glossaryId",
        "id",
        "name",
        "status"
      ],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary term is created.</p>"
        },
        "glossaryId":{
          "shape":"GlossaryId",
          "documentation":"<p>The ID of the business glossary in which this term is created.</p>"
        },
        "id":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The ID of this business glossary term.</p>"
        },
        "longDescription":{
          "shape":"LongDescription",
          "documentation":"<p>The long description of this business glossary term.</p>"
        },
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name of this business glossary term.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The short description of this business glossary term.</p>"
        },
        "status":{
          "shape":"GlossaryTermStatus",
          "documentation":"<p>The status of this business glossary term.</p>"
        },
        "termRelations":{
          "shape":"TermRelations",
          "documentation":"<p>The term relations of this business glossary term.</p>"
        },
        "usageRestrictions":{
          "shape":"GlossaryUsageRestrictions",
          "documentation":"<p>The usage restriction of the restricted glossary.</p>"
        }
      }
    },
    "CreateGroupProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "groupIdentifier"
      ],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p> A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the group profile is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "groupIdentifier":{
          "shape":"GroupIdentifier",
          "documentation":"<p>The identifier of the group for which the group profile is created.</p>"
        }
      }
    },
    "CreateGroupProfileOutput":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the group profile is created.</p>"
        },
        "groupName":{
          "shape":"GroupProfileName",
          "documentation":"<p>The name of the group for which group profile is created.</p>"
        },
        "id":{
          "shape":"GroupProfileId",
          "documentation":"<p>The identifier of the group profile.</p>"
        },
        "status":{
          "shape":"GroupProfileStatus",
          "documentation":"<p>The status of the group profile.</p>"
        }
      }
    },
    "CreateListingChangeSetInput":{
      "type":"structure",
      "required":[
        "action",
        "domainIdentifier",
        "entityIdentifier",
        "entityType"
      ],
      "members":{
        "action":{
          "shape":"ChangeAction",
          "documentation":"<p>Specifies whether to publish or unpublish a listing.</p>"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of the asset.</p>"
        },
        "entityRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of an asset.</p>"
        },
        "entityType":{
          "shape":"EntityType",
          "documentation":"<p>The type of an entity.</p>"
        }
      }
    },
    "CreateListingChangeSetOutput":{
      "type":"structure",
      "required":[
        "listingId",
        "listingRevision",
        "status"
      ],
      "members":{
        "listingId":{
          "shape":"ListingId",
          "documentation":"<p>The ID of the listing (a record of an asset at a given time).</p>"
        },
        "listingRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of a listing.</p>"
        },
        "status":{
          "shape":"ListingStatus",
          "documentation":"<p>Specifies the status of the listing.</p>"
        }
      }
    },
    "CreateProjectFromProjectProfilePolicyGrantDetail":{
      "type":"structure",
      "members":{
        "includeChildDomainUnits":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether to include child domain units when creating a project from project profile policy grant details</p>"
        },
        "projectProfiles":{
          "shape":"ProjectProfileList",
          "documentation":"<p>Specifies project profiles when creating a project from project profile policy grant details</p>"
        }
      },
      "documentation":"<p>Specifies whether to create a project from project profile policy grant details.</p>"
    },
    "CreateProjectInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "name"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the Amazon DataZone project.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this project is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit. This parameter is not required and if it is not specified, then the project is created at the root domain unit level.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms that can be used in this Amazon DataZone project.</p>"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of the Amazon DataZone project.</p>"
        },
        "projectProfileId":{
          "shape":"ProjectProfileId",
          "documentation":"<p>The ID of the project profile.</p>"
        },
        "userParameters":{
          "shape":"EnvironmentConfigurationUserParametersList",
          "documentation":"<p>The user parameters of the project.</p>"
        }
      }
    },
    "CreateProjectMembershipInput":{
      "type":"structure",
      "required":[
        "designation",
        "domainIdentifier",
        "member",
        "projectIdentifier"
      ],
      "members":{
        "designation":{
          "shape":"UserDesignation",
          "documentation":"<p>The designation of the project membership.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which project membership is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "member":{
          "shape":"Member",
          "documentation":"<p>The project member whose project membership was created.</p>"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project for which this project membership was created.</p>",
          "location":"uri",
          "locationName":"projectIdentifier"
        }
      }
    },
    "CreateProjectMembershipOutput":{
      "type":"structure",
      "members":{}
    },
    "CreateProjectOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the project.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the project.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the project was created.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit.</p>"
        },
        "environmentDeploymentDetails":{
          "shape":"EnvironmentDeploymentDetails",
          "documentation":"<p>The environment deployment details.</p>"
        },
        "failureReasons":{
          "shape":"FailureReasons",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms that can be used in the project.</p>"
        },
        "id":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was last updated.</p>"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of the project.</p>"
        },
        "projectProfileId":{
          "shape":"ProjectProfileId",
          "documentation":"<p>The project profile ID.</p>"
        },
        "projectStatus":{
          "shape":"ProjectStatus",
          "documentation":"<p>The status of the Amazon DataZone project that was created.</p>"
        },
        "userParameters":{
          "shape":"EnvironmentConfigurationUserParametersList",
          "documentation":"<p>The user parameters of the project.</p>"
        }
      }
    },
    "CreateProjectPolicyGrantDetail":{
      "type":"structure",
      "members":{
        "includeChildDomainUnits":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the policy grant is applied to child domain units.</p>"
        }
      },
      "documentation":"<p>The details of the policy grant.</p>"
    },
    "CreateProjectProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "name"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>A description of a project profile.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>A domain ID of the project profile.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "domainUnitIdentifier":{
          "shape":"DomainUnitId",
          "documentation":"<p>A domain unit ID of the project profile.</p>"
        },
        "environmentConfigurations":{
          "shape":"EnvironmentConfigurationsList",
          "documentation":"<p>Environment configurations of the project profile.</p>"
        },
        "name":{
          "shape":"ProjectProfileName",
          "documentation":"<p>Project profile name.</p>"
        },
        "status":{
          "shape":"Status",
          "documentation":"<p>Project profile status.</p>"
        }
      }
    },
    "CreateProjectProfileOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>A timestamp at which a project profile is created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>A user who created a project profile.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>A project profile description.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where a project profile is created.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit where a project profile is created.</p>"
        },
        "environmentConfigurations":{
          "shape":"EnvironmentConfigurationsList",
          "documentation":"<p>Environment configurations of a project profile.</p>"
        },
        "id":{
          "shape":"ProjectProfileId",
          "documentation":"<p>Project profile ID.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>A timestamp when a project profile was last updated.</p>"
        },
        "name":{
          "shape":"ProjectProfileName",
          "documentation":"<p>Project profile name.</p>"
        },
        "status":{
          "shape":"Status",
          "documentation":"<p>Project profile status.</p>"
        }
      }
    },
    "CreateRuleInput":{
      "type":"structure",
      "required":[
        "action",
        "detail",
        "domainIdentifier",
        "name",
        "scope",
        "target"
      ],
      "members":{
        "action":{
          "shape":"RuleAction",
          "documentation":"<p>The action of the rule.</p>"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the rule.</p>"
        },
        "detail":{
          "shape":"RuleDetail",
          "documentation":"<p>The detail of the rule.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the rule is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "name":{
          "shape":"RuleName",
          "documentation":"<p>The name of the rule.</p>"
        },
        "scope":{
          "shape":"RuleScope",
          "documentation":"<p>The scope of the rule.</p>"
        },
        "target":{
          "shape":"RuleTarget",
          "documentation":"<p>The target of the rule.</p>"
        }
      }
    },
    "CreateRuleOutput":{
      "type":"structure",
      "required":[
        "action",
        "createdAt",
        "createdBy",
        "detail",
        "identifier",
        "name",
        "ruleType",
        "scope",
        "target"
      ],
      "members":{
        "action":{
          "shape":"RuleAction",
          "documentation":"<p>The action of the rule.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the rule is created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who creates the rule.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the rule.</p>"
        },
        "detail":{
          "shape":"RuleDetail",
          "documentation":"<p>The detail of the rule.</p>"
        },
        "identifier":{
          "shape":"RuleId",
          "documentation":"<p>The ID of the rule.</p>"
        },
        "name":{
          "shape":"RuleName",
          "documentation":"<p>The name of the rule.</p>"
        },
        "ruleType":{
          "shape":"RuleType",
          "documentation":"<p>The type of the rule.</p>"
        },
        "scope":{
          "shape":"RuleScope",
          "documentation":"<p>The scope of the rule.</p>"
        },
        "target":{
          "shape":"RuleTarget",
          "documentation":"<p>The target of the rule.</p>"
        },
        "targetType":{
          "shape":"RuleTargetType",
          "documentation":"<p>The target type of the rule.</p>"
        }
      }
    },
    "CreateSubscriptionGrantInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "grantedEntity"
      ],
      "members":{
        "assetTargetNames":{
          "shape":"AssetTargetNames",
          "documentation":"<p>The names of the assets for which the subscription grant is created.</p>"
        },
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription grant is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment in which the subscription grant is created.</p>"
        },
        "grantedEntity":{
          "shape":"GrantedEntityInput",
          "documentation":"<p>The entity to which the subscription is to be granted.</p>"
        },
        "subscriptionTargetIdentifier":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target for which the subscription grant is created.</p>"
        }
      }
    },
    "CreateSubscriptionGrantOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "grantedEntity",
        "id",
        "status",
        "subscriptionTargetId",
        "updatedAt"
      ],
      "members":{
        "assets":{
          "shape":"SubscribedAssets",
          "documentation":"<p>The assets for which the subscription grant is created.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>A timestamp of when the subscription grant is created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription grant.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription grant is created.</p>"
        },
        "grantedEntity":{
          "shape":"GrantedEntity",
          "documentation":"<p>The entity to which the subscription is granted.</p>"
        },
        "id":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The ID of the subscription grant.</p>"
        },
        "status":{
          "shape":"SubscriptionGrantOverallStatus",
          "documentation":"<p>The status of the subscription grant.</p>"
        },
        "subscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subscription grant.</p>",
          "deprecated":true,
          "deprecatedMessage":"Multiple subscriptions can exist for a single grant"
        },
        "subscriptionTargetId":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target for which the subscription grant is created.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>A timestamp of when the subscription grant was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription grant.</p>"
        }
      }
    },
    "CreateSubscriptionRequestInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "requestReason",
        "subscribedListings",
        "subscribedPrincipals"
      ],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription request is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "metadataForms":{
          "shape":"MetadataFormInputs",
          "documentation":"<p>The metadata form included in the subscription request.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"SubscribedListingInputs",
          "documentation":"<p>The published asset for which the subscription grant is to be created.</p>"
        },
        "subscribedPrincipals":{
          "shape":"SubscribedPrincipalInputs",
          "documentation":"<p>The Amazon DataZone principals for whom the subscription request is created.</p>"
        }
      }
    },
    "CreateSubscriptionRequestOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "requestReason",
        "status",
        "subscribedListings",
        "subscribedPrincipals",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>A timestamp of when the subscription request is created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription request.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>The decision comment of the subscription request.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in whcih the subscription request is created.</p>"
        },
        "existingSubscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The ID of the existing subscription.</p>"
        },
        "id":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The ID of the subscription request.</p>"
        },
        "metadataForms":{
          "shape":"MetadataForms",
          "documentation":"<p>The metadata form included in the subscription request.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the subscription request.</p>"
        },
        "reviewerId":{
          "shape":"String",
          "documentation":"<p>The ID of the reviewer of the subscription request.</p>"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>The status of the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"CreateSubscriptionRequestOutputSubscribedListingsList",
          "documentation":"<p>The published asset for which the subscription grant is to be created.</p>"
        },
        "subscribedPrincipals":{
          "shape":"CreateSubscriptionRequestOutputSubscribedPrincipalsList",
          "documentation":"<p>The subscribed principals of the subscription request.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription request was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription request.</p>"
        }
      }
    },
    "CreateSubscriptionRequestOutputSubscribedListingsList":{
      "type":"list",
      "member":{"shape":"SubscribedListing"},
      "max":1,
      "min":1
    },
    "CreateSubscriptionRequestOutputSubscribedPrincipalsList":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipal"},
      "max":1,
      "min":1
    },
    "CreateSubscriptionTargetInput":{
      "type":"structure",
      "required":[
        "applicableAssetTypes",
        "authorizedPrincipals",
        "domainIdentifier",
        "environmentIdentifier",
        "manageAccessRole",
        "name",
        "subscriptionTargetConfig",
        "type"
      ],
      "members":{
        "applicableAssetTypes":{
          "shape":"ApplicableAssetTypes",
          "documentation":"<p>The asset types that can be included in the subscription target.</p>"
        },
        "authorizedPrincipals":{
          "shape":"AuthorizedPrincipalIdentifiers",
          "documentation":"<p>The authorized principals of the subscription target.</p>"
        },
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which subscription target is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment in which subscription target is created.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "manageAccessRole":{
          "shape":"IamRoleArn",
          "documentation":"<p>The manage access role that is used to create the subscription target.</p>"
        },
        "name":{
          "shape":"SubscriptionTargetName",
          "documentation":"<p>The name of the subscription target.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the subscription target.</p>"
        },
        "subscriptionTargetConfig":{
          "shape":"SubscriptionTargetForms",
          "documentation":"<p>The configuration of the subscription target.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of the subscription target.</p>"
        }
      }
    },
    "CreateSubscriptionTargetOutput":{
      "type":"structure",
      "required":[
        "applicableAssetTypes",
        "authorizedPrincipals",
        "createdAt",
        "createdBy",
        "domainId",
        "environmentId",
        "id",
        "name",
        "projectId",
        "provider",
        "subscriptionTargetConfig",
        "type"
      ],
      "members":{
        "applicableAssetTypes":{
          "shape":"ApplicableAssetTypes",
          "documentation":"<p>The asset types that can be included in the subscription target.</p>"
        },
        "authorizedPrincipals":{
          "shape":"AuthorizedPrincipalIdentifiers",
          "documentation":"<p>The authorised principals of the subscription target.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription target was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription target.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription target was created.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment in which the subscription target was created.</p>"
        },
        "id":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target.</p>"
        },
        "manageAccessRole":{
          "shape":"IamRoleArn",
          "documentation":"<p>The manage access role with which the subscription target was created.</p>"
        },
        "name":{
          "shape":"SubscriptionTargetName",
          "documentation":"<p>The name of the subscription target.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>???</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the subscription target.</p>"
        },
        "subscriptionTargetConfig":{
          "shape":"SubscriptionTargetForms",
          "documentation":"<p>The configuration of the subscription target.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of the subscription target.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription target was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription target.</p>"
        }
      }
    },
    "CreateUserProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "userIdentifier"
      ],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a user profile is created.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "userIdentifier":{
          "shape":"UserIdentifier",
          "documentation":"<p>The identifier of the user for which the user profile is created.</p>"
        },
        "userType":{
          "shape":"UserType",
          "documentation":"<p>The user type of the user for which the user profile is created.</p>"
        }
      }
    },
    "CreateUserProfileOutput":{
      "type":"structure",
      "members":{
        "details":{"shape":"UserProfileDetails"},
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a user profile is created.</p>"
        },
        "id":{
          "shape":"UserProfileId",
          "documentation":"<p>The identifier of the user profile.</p>"
        },
        "status":{
          "shape":"UserProfileStatus",
          "documentation":"<p>The status of the user profile.</p>"
        },
        "type":{
          "shape":"UserProfileType",
          "documentation":"<p>The type of the user profile.</p>"
        }
      }
    },
    "CreatedAt":{"type":"timestamp"},
    "CreatedBy":{"type":"string"},
    "CredentialMap":{
      "type":"map",
      "key":{"shape":"CredentialMapKeyString"},
      "value":{"shape":"CredentialMapValueString"},
      "sensitive":true
    },
    "CredentialMapKeyString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "CredentialMapValueString":{
      "type":"string",
      "max":2048,
      "min":1
    },
    "CronString":{
      "type":"string",
      "max":256,
      "min":1,
      "pattern":"cron\\((\\b[0-5]?[0-9]\\b) (\\b2[0-3]\\b|\\b[0-1]?[0-9]\\b) ([-?*,/\\dLW]){1,83} ([-*,/\\d]|[a-zA-Z]{3}){1,23} ([-?#*,/\\dL]|[a-zA-Z]{3}){1,13} ([^\\)]+)\\)"
    },
    "CustomAccountPoolHandler":{
      "type":"structure",
      "required":["lambdaFunctionArn"],
      "members":{
        "lambdaExecutionRoleArn":{
          "shape":"LambdaExecutionRoleArn",
          "documentation":"<p>The ARN of the IAM role that enables Amazon SageMaker Unified Studio to invoke the Amazon Web Services Lambda funtion if the account source is the custom account pool handler.</p>"
        },
        "lambdaFunctionArn":{
          "shape":"LambdaFunctionArn",
          "documentation":"<p>The ARN of the Amazon Web Services Lambda function for the custom Amazon Web Services Lambda handler.</p>"
        }
      },
      "documentation":"<p>The custom Amazon Web Services Lambda handler within an account pool.</p>"
    },
    "CustomParameter":{
      "type":"structure",
      "required":[
        "fieldType",
        "keyName"
      ],
      "members":{
        "defaultValue":{
          "shape":"String",
          "documentation":"<p>The default value of the parameter.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the parameter.</p>"
        },
        "fieldType":{
          "shape":"String",
          "documentation":"<p>The filed type of the parameter.</p>"
        },
        "isEditable":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the parameter is editable.</p>"
        },
        "isOptional":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the custom parameter is optional.</p>"
        },
        "isUpdateSupported":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether a parameter value can be updated after creation. </p>"
        },
        "keyName":{
          "shape":"CustomParameterKeyNameString",
          "documentation":"<p>The key name of the parameter.</p>"
        }
      },
      "documentation":"<p>The details of user parameters of an environment blueprint.</p>"
    },
    "CustomParameterKeyNameString":{
      "type":"string",
      "pattern":"^[a-zA-Z_][a-zA-Z0-9_]*$"
    },
    "CustomParameterList":{
      "type":"list",
      "member":{"shape":"CustomParameter"}
    },
    "DataAssetActivityStatus":{
      "type":"string",
      "enum":[
        "FAILED",
        "PUBLISHING_FAILED",
        "SUCCEEDED_CREATED",
        "SUCCEEDED_UPDATED",
        "SKIPPED_ALREADY_IMPORTED",
        "SKIPPED_ARCHIVED",
        "SKIPPED_NO_ACCESS",
        "UNCHANGED"
      ]
    },
    "DataPointIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{0,36}$"
    },
    "DataProductDescription":{
      "type":"string",
      "max":4096,
      "min":1,
      "sensitive":true
    },
    "DataProductId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "DataProductItem":{
      "type":"structure",
      "required":[
        "identifier",
        "itemType"
      ],
      "members":{
        "glossaryTerms":{
          "shape":"ItemGlossaryTerms",
          "documentation":"<p>The glossary terms of the data product.</p>"
        },
        "identifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of the data product.</p>"
        },
        "itemType":{
          "shape":"DataProductItemType",
          "documentation":"<p>The type of the data product.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the data product.</p>"
        }
      },
      "documentation":"<p>The data product.</p>"
    },
    "DataProductItemAdditionalAttributes":{
      "type":"structure",
      "members":{
        "matchRationale":{
          "shape":"MatchRationale",
          "documentation":"<p>List of rationales indicating why this item was matched by search.</p>"
        }
      },
      "documentation":"<p>The additional attributes of an Amazon DataZone data product.</p>"
    },
    "DataProductItemType":{
      "type":"string",
      "enum":["ASSET"]
    },
    "DataProductItems":{
      "type":"list",
      "member":{"shape":"DataProductItem"},
      "min":1
    },
    "DataProductListing":{
      "type":"structure",
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the data product listing was created.</p>"
        },
        "dataProductId":{
          "shape":"DataProductId",
          "documentation":"<p>The ID of the data product listing.</p>"
        },
        "dataProductRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the data product listing.</p>"
        },
        "forms":{
          "shape":"Forms",
          "documentation":"<p>The metadata forms of the data product listing.</p>"
        },
        "glossaryTerms":{
          "shape":"DetailedGlossaryTerms",
          "documentation":"<p>The glossary terms of the data product listing.</p>"
        },
        "items":{
          "shape":"ListingSummaries",
          "documentation":"<p>The data assets of the data product listing.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the owning project of the data product listing.</p>"
        }
      },
      "documentation":"<p>The data product listing.</p>"
    },
    "DataProductListingItem":{
      "type":"structure",
      "members":{
        "additionalAttributes":{
          "shape":"DataProductListingItemAdditionalAttributes",
          "documentation":"<p>The additional attributes of the asset of the data product.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the asset of the data product listing was created. </p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the asset of the asset of the data product. </p>"
        },
        "entityId":{
          "shape":"DataProductId",
          "documentation":"<p>The entity ID of the asset of the asset of the data product. </p>"
        },
        "entityRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset of the asset of the data product. </p>"
        },
        "glossaryTerms":{
          "shape":"DetailedGlossaryTerms",
          "documentation":"<p>The glossary terms of the asset of the asset of the data product. </p>"
        },
        "items":{
          "shape":"ListingSummaryItems",
          "documentation":"<p>The data of the asset of the data product. </p>"
        },
        "listingCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The timestamp at which the listing was created.</p>"
        },
        "listingId":{
          "shape":"ListingId",
          "documentation":"<p>The ID of the listing.</p>"
        },
        "listingRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the listing.</p>"
        },
        "listingUpdatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user who updated the listing.</p>"
        },
        "name":{
          "shape":"DataProductName",
          "documentation":"<p>The name of the asset of the data product. </p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the owning project of the asset of the data product. </p>"
        }
      },
      "documentation":"<p>The asset of the data product listing.</p>"
    },
    "DataProductListingItemAdditionalAttributes":{
      "type":"structure",
      "members":{
        "forms":{
          "shape":"Forms",
          "documentation":"<p>The metadata forms of the asset of the data product. </p>"
        },
        "matchRationale":{
          "shape":"MatchRationale",
          "documentation":"<p>List of rationales indicating why this item was matched by search.</p>"
        }
      },
      "documentation":"<p>The additional attributes of the asset of the data product. </p>"
    },
    "DataProductName":{
      "type":"string",
      "max":64,
      "min":1,
      "sensitive":true
    },
    "DataProductResultItem":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId"
      ],
      "members":{
        "additionalAttributes":{
          "shape":"DataProductItemAdditionalAttributes",
          "documentation":"<p>The additional attributes of an Amazon DataZone data product.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the data product was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the data product.</p>"
        },
        "description":{
          "shape":"DataProductDescription",
          "documentation":"<p>The description of the data product.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the data product lives.</p>"
        },
        "firstRevisionCreatedAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which first revision of the data product was created.</p>"
        },
        "firstRevisionCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the first revision of the data product.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms of the data product.</p>"
        },
        "id":{
          "shape":"DataProductId",
          "documentation":"<p>The ID of the data product.</p>"
        },
        "name":{
          "shape":"DataProductName",
          "documentation":"<p>The name of the data product.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the owning project of the data product.</p>"
        }
      },
      "documentation":"<p>The data product.</p>"
    },
    "DataProductRevision":{
      "type":"structure",
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the data product revision was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the data product revision.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the data product revision lives.</p>"
        },
        "id":{
          "shape":"DataProductId",
          "documentation":"<p>The ID of the data product revision.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The data product revision.</p>"
        }
      },
      "documentation":"<p>The data product revision.</p>"
    },
    "DataProductRevisions":{
      "type":"list",
      "member":{"shape":"DataProductRevision"}
    },
    "DataProductStatus":{
      "type":"string",
      "enum":[
        "CREATED",
        "CREATING",
        "CREATE_FAILED"
      ]
    },
    "DataSourceConfigurationInput":{
      "type":"structure",
      "members":{
        "glueRunConfiguration":{
          "shape":"GlueRunConfigurationInput",
          "documentation":"<p>The configuration of the Amazon Web Services Glue data source.</p>"
        },
        "redshiftRunConfiguration":{
          "shape":"RedshiftRunConfigurationInput",
          "documentation":"<p>The configuration of the Amazon Redshift data source.</p>"
        },
        "sageMakerRunConfiguration":{
          "shape":"SageMakerRunConfigurationInput",
          "documentation":"<p>The Amazon SageMaker run configuration.</p>"
        }
      },
      "documentation":"<p>The configuration of the data source.</p>",
      "union":true
    },
    "DataSourceConfigurationOutput":{
      "type":"structure",
      "members":{
        "glueRunConfiguration":{
          "shape":"GlueRunConfigurationOutput",
          "documentation":"<p>The configuration of the Amazon Web Services Glue data source.</p>"
        },
        "redshiftRunConfiguration":{
          "shape":"RedshiftRunConfigurationOutput",
          "documentation":"<p>The configuration of the Amazon Redshift data source.</p>"
        },
        "sageMakerRunConfiguration":{
          "shape":"SageMakerRunConfigurationOutput",
          "documentation":"<p>The Amazon SageMaker run configuration.</p>"
        }
      },
      "documentation":"<p>The configuration of the data source.</p>",
      "union":true
    },
    "DataSourceErrorMessage":{
      "type":"structure",
      "required":["errorType"],
      "members":{
        "errorDetail":{
          "shape":"String",
          "documentation":"<p>The details of the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "errorType":{
          "shape":"DataSourceErrorType",
          "documentation":"<p>The type of the error message that is returned if the operation cannot be successfully completed.</p>"
        }
      },
      "documentation":"<p>The details of the error message that is returned if the operation cannot be successfully completed.</p>"
    },
    "DataSourceErrorType":{
      "type":"string",
      "enum":[
        "ACCESS_DENIED_EXCEPTION",
        "CONFLICT_EXCEPTION",
        "INTERNAL_SERVER_EXCEPTION",
        "RESOURCE_NOT_FOUND_EXCEPTION",
        "SERVICE_QUOTA_EXCEEDED_EXCEPTION",
        "THROTTLING_EXCEPTION",
        "VALIDATION_EXCEPTION"
      ]
    },
    "DataSourceId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "DataSourceRunActivities":{
      "type":"list",
      "member":{"shape":"DataSourceRunActivity"}
    },
    "DataSourceRunActivity":{
      "type":"structure",
      "required":[
        "createdAt",
        "dataAssetStatus",
        "dataSourceRunId",
        "database",
        "projectId",
        "technicalName",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when data source run activity was created.</p>"
        },
        "dataAssetId":{
          "shape":"String",
          "documentation":"<p>The identifier of the asset included in the data source run activity.</p>"
        },
        "dataAssetStatus":{
          "shape":"DataAssetActivityStatus",
          "documentation":"<p>The status of the asset included in the data source run activity.</p>"
        },
        "dataSourceRunId":{
          "shape":"DataSourceRunId",
          "documentation":"<p>The identifier of the data source for the data source run activity.</p>"
        },
        "database":{
          "shape":"Name",
          "documentation":"<p>The database included in the data source run activity.</p>"
        },
        "errorMessage":{"shape":"DataSourceErrorMessage"},
        "lineageSummary":{
          "shape":"LineageInfo",
          "documentation":"<p>The data lineage summary.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The project ID included in the data source run activity.</p>"
        },
        "technicalDescription":{
          "shape":"Description",
          "documentation":"<p>The technical description included in the data source run activity.</p>"
        },
        "technicalName":{
          "shape":"Name",
          "documentation":"<p>The technical name included in the data source run activity.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when data source run activity was updated.</p>"
        }
      },
      "documentation":"<p>The activity details of the data source run.</p>"
    },
    "DataSourceRunId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "DataSourceRunLineageSummary":{
      "type":"structure",
      "members":{
        "importStatus":{
          "shape":"LineageImportStatus",
          "documentation":"<p>The import status that's part of the run lineage summary of a data source.</p>"
        }
      },
      "documentation":"<p>The run lineage summary of a data source.</p>"
    },
    "DataSourceRunStatus":{
      "type":"string",
      "enum":[
        "REQUESTED",
        "RUNNING",
        "FAILED",
        "PARTIALLY_SUCCEEDED",
        "SUCCESS"
      ]
    },
    "DataSourceRunSummaries":{
      "type":"list",
      "member":{"shape":"DataSourceRunSummary"}
    },
    "DataSourceRunSummary":{
      "type":"structure",
      "required":[
        "createdAt",
        "dataSourceId",
        "id",
        "projectId",
        "status",
        "type",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when a data source run was created.</p>"
        },
        "dataSourceId":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source of the data source run.</p>"
        },
        "errorMessage":{"shape":"DataSourceErrorMessage"},
        "id":{
          "shape":"DataSourceRunId",
          "documentation":"<p>The identifier of the data source run.</p>"
        },
        "lineageSummary":{
          "shape":"DataSourceRunLineageSummary",
          "documentation":"<p>The run lineage summary of a data source.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The project ID of the data source run.</p>"
        },
        "runStatisticsForAssets":{"shape":"RunStatisticsForAssets"},
        "startedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when a data source run was started.</p>"
        },
        "status":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the data source run.</p>"
        },
        "stoppedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when a data source run was stopped.</p>"
        },
        "type":{
          "shape":"DataSourceRunType",
          "documentation":"<p>The type of the data source run.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when a data source run was updated.</p>"
        }
      },
      "documentation":"<p>The details of a data source run.</p>"
    },
    "DataSourceRunType":{
      "type":"string",
      "enum":[
        "PRIORITIZED",
        "SCHEDULED"
      ]
    },
    "DataSourceStatus":{
      "type":"string",
      "enum":[
        "CREATING",
        "FAILED_CREATION",
        "READY",
        "UPDATING",
        "FAILED_UPDATE",
        "RUNNING",
        "DELETING",
        "FAILED_DELETION"
      ]
    },
    "DataSourceSummaries":{
      "type":"list",
      "member":{"shape":"DataSourceSummary"}
    },
    "DataSourceSummary":{
      "type":"structure",
      "required":[
        "dataSourceId",
        "domainId",
        "name",
        "status",
        "type"
      ],
      "members":{
        "connectionId":{
          "shape":"String",
          "documentation":"<p>The connection ID that's part of the data source summary.</p>"
        },
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was created.</p>"
        },
        "dataSourceId":{
          "shape":"DataSourceId",
          "documentation":"<p>The ID of the data source.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The data source description.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data source exists.</p>"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>Specifies whether the data source is enabled.</p>"
        },
        "environmentId":{
          "shape":"String",
          "documentation":"<p>The ID of the environment in which the data source exists.</p>"
        },
        "lastRunAssetCount":{
          "shape":"Integer",
          "documentation":"<p>The count of the assets created during the last data source run.</p>"
        },
        "lastRunAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source run was last performed.</p>"
        },
        "lastRunErrorMessage":{"shape":"DataSourceErrorMessage"},
        "lastRunStatus":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the last data source run.</p>"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name of the data source.</p>"
        },
        "schedule":{"shape":"ScheduleConfiguration"},
        "status":{
          "shape":"DataSourceStatus",
          "documentation":"<p>The status of the data source.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of the data source.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was updated.</p>"
        }
      },
      "documentation":"<p>The details of the data source.</p>"
    },
    "DataSourceType":{
      "type":"string",
      "max":256,
      "min":1
    },
    "DataZoneEntityType":{
      "type":"string",
      "enum":["DOMAIN_UNIT"]
    },
    "DateTime":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "DecisionComment":{
      "type":"string",
      "max":4096,
      "min":1,
      "sensitive":true
    },
    "DeleteAccountPoolInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the account pool is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AccountPoolId",
          "documentation":"<p>The ID of the account pool to be deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteAccountPoolOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteAssetFilterInput":{
      "type":"structure",
      "required":[
        "assetIdentifier",
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "assetIdentifier":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the data asset.</p>",
          "location":"uri",
          "locationName":"assetIdentifier"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to delete an asset filter.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"FilterId",
          "documentation":"<p>The ID of the asset filter that you want to delete.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteAssetInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>The identifier of the asset that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteAssetOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteAssetTypeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset type is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The identifier of the asset type that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteAssetTypeOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteConnectionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the connection is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ConnectionId",
          "documentation":"<p>The ID of the connection that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteConnectionOutput":{
      "type":"structure",
      "members":{
        "status":{
          "shape":"String",
          "documentation":"<p>The status of the action.</p>"
        }
      }
    },
    "DeleteDataProductInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data product is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DataProductId",
          "documentation":"<p>The identifier of the data product that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteDataProductOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteDataSourceInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "deprecated":true,
          "deprecatedMessage":"This field is no longer required for idempotency.",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"clientToken"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data source is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "retainPermissionsOnRevokeFailure":{
          "shape":"Boolean",
          "documentation":"<p>Specifies that the granted permissions are retained in case of a self-subscribe functionality failure for a data source.</p>",
          "location":"querystring",
          "locationName":"retainPermissionsOnRevokeFailure"
        }
      }
    },
    "DeleteDataSourceOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "projectId"
      ],
      "members":{
        "assetFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The asset data forms associated with this data source.</p>"
        },
        "configuration":{
          "shape":"DataSourceConfigurationOutput",
          "documentation":"<p>The configuration of the data source that is deleted.</p>"
        },
        "connectionId":{
          "shape":"String",
          "documentation":"<p>The ID of the connection that is deleted.</p>"
        },
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when this data source was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the data source that is deleted.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data source is deleted.</p>"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>The enable setting of the data source that specifies whether the data source is enabled or disabled.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environemnt associated with this data source.</p>"
        },
        "errorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"DataSourceId",
          "documentation":"<p>The ID of the data source that is deleted.</p>"
        },
        "lastRunAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was last run.</p>"
        },
        "lastRunErrorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "lastRunStatus":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the last run of this data source.</p>"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name of the data source that is deleted.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project in which this data source exists and from which it's deleted.</p>"
        },
        "publishOnImport":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.</p>"
        },
        "retainPermissionsOnRevokeFailure":{
          "shape":"Boolean",
          "documentation":"<p>Specifies that the granted permissions are retained in case of a self-subscribe functionality failure for a data source.</p>"
        },
        "schedule":{
          "shape":"ScheduleConfiguration",
          "documentation":"<p>The schedule of runs for this data source.</p>"
        },
        "selfGrantStatus":{
          "shape":"SelfGrantStatusOutput",
          "documentation":"<p>Specifies the status of the self-granting functionality.</p>"
        },
        "status":{
          "shape":"DataSourceStatus",
          "documentation":"<p>The status of this data source.</p>"
        },
        "type":{
          "shape":"DataSourceType",
          "documentation":"<p>The type of this data source.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when this data source was updated.</p>"
        }
      }
    },
    "DeleteDomainInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"clientToken"
        },
        "identifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon Web Services domain that is to be deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "skipDeletionCheck":{
          "shape":"Boolean",
          "documentation":"<p>Specifies the optional flag to delete all child entities within the domain.</p>",
          "location":"querystring",
          "locationName":"skipDeletionCheck"
        }
      }
    },
    "DeleteDomainOutput":{
      "type":"structure",
      "required":["status"],
      "members":{
        "status":{
          "shape":"DomainStatus",
          "documentation":"<p>The status of the domain.</p>"
        }
      }
    },
    "DeleteDomainUnitInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to delete a domain unit.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit that you want to delete.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteDomainUnitOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteEnvironmentActionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which an environment action is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment where an environment action is deleted.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "identifier":{
          "shape":"String",
          "documentation":"<p>The ID of the environment action that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteEnvironmentBlueprintConfigurationInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentBlueprintIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the blueprint configuration is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentBlueprintIdentifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint the configuration of which is deleted.</p>",
          "location":"uri",
          "locationName":"environmentBlueprintIdentifier"
        }
      }
    },
    "DeleteEnvironmentBlueprintConfigurationOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteEnvironmentBlueprintInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the blueprint is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteEnvironmentInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the environment is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment that is to be deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteEnvironmentProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the environment profile is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The ID of the environment profile that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteFormTypeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "formTypeIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the metadata form type is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "formTypeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The ID of the metadata form type that is deleted.</p>",
          "location":"uri",
          "locationName":"formTypeIdentifier"
        }
      }
    },
    "DeleteFormTypeOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteGlossaryInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the business glossary is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"GlossaryId",
          "documentation":"<p>The ID of the business glossary that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteGlossaryOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteGlossaryTermInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the business glossary term is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The ID of the business glossary term that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteGlossaryTermOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteListingInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ListingId",
          "documentation":"<p>The ID of the listing to be deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteListingOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteProjectInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the project is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that is to be deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "skipDeletionCheck":{
          "shape":"Boolean",
          "documentation":"<p>Specifies the optional flag to delete all child entities within the project.</p>",
          "location":"querystring",
          "locationName":"skipDeletionCheck"
        }
      }
    },
    "DeleteProjectMembershipInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "member",
        "projectIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where project membership is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "member":{
          "shape":"Member",
          "documentation":"<p>The project member whose project membership is deleted.</p>"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project the membership to which is deleted.</p>",
          "location":"uri",
          "locationName":"projectIdentifier"
        }
      }
    },
    "DeleteProjectMembershipOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteProjectOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteProjectProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where a project profile is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ProjectProfileId",
          "documentation":"<p>The ID of the project profile that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteProjectProfileOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteRuleInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain that where the rule is to be deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"RuleId",
          "documentation":"<p>The ID of the rule that is to be deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteRuleOutput":{
      "type":"structure",
      "members":{}
    },
    "DeleteSubscriptionGrantInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where the subscription grant is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The ID of the subscription grant that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteSubscriptionGrantOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "grantedEntity",
        "id",
        "status",
        "subscriptionTargetId",
        "updatedAt"
      ],
      "members":{
        "assets":{
          "shape":"SubscribedAssets",
          "documentation":"<p>The assets for which the subsctiption grant that is deleted gave access.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription grant that is deleted was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription grant that is deleted.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription grant is deleted.</p>"
        },
        "grantedEntity":{
          "shape":"GrantedEntity",
          "documentation":"<p>The entity to which the subscription is deleted.</p>"
        },
        "id":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The ID of the subscription grant that is deleted.</p>"
        },
        "status":{
          "shape":"SubscriptionGrantOverallStatus",
          "documentation":"<p>The status of the subscription grant that is deleted.</p>"
        },
        "subscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subsctiption whose subscription grant is to be deleted.</p>",
          "deprecated":true,
          "deprecatedMessage":"Multiple subscriptions can exist for a single grant"
        },
        "subscriptionTargetId":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target associated with the subscription grant that is deleted.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription grant that is deleted was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription grant that is deleted.</p>"
        }
      }
    },
    "DeleteSubscriptionRequestInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription request is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The ID of the subscription request that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteSubscriptionTargetInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription target is deleted.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the Amazon DataZone environment in which the subscription target is deleted.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target that is deleted.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "DeleteTimeSeriesDataPointsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "formName"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier to ensure idempotency of the request. This field is automatically populated if not provided.</p>",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"clientToken"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain that houses the asset for which you want to delete a time series form.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of the asset for which you want to delete a time series form.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"TimeSeriesEntityType",
          "documentation":"<p>The type of the asset for which you want to delete a time series form.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series form that you want to delete.</p>",
          "location":"querystring",
          "locationName":"formName"
        }
      }
    },
    "DeleteTimeSeriesDataPointsOutput":{
      "type":"structure",
      "members":{}
    },
    "Deployment":{
      "type":"structure",
      "members":{
        "deploymentId":{
          "shape":"String",
          "documentation":"<p>The identifier of the last deployment of the environment.</p>"
        },
        "deploymentStatus":{
          "shape":"DeploymentStatus",
          "documentation":"<p>The status of the last deployment of the environment.</p>"
        },
        "deploymentType":{
          "shape":"DeploymentType",
          "documentation":"<p>The type of the last deployment of the environment.</p>"
        },
        "failureReason":{
          "shape":"EnvironmentError",
          "documentation":"<p>The failure reason of the last deployment of the environment.</p>"
        },
        "isDeploymentComplete":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the last deployment of the environment is complete.</p>"
        },
        "messages":{
          "shape":"DeploymentMessagesList",
          "documentation":"<p>The messages of the last deployment of the environment.</p>"
        }
      },
      "documentation":"<p>The details of the last deployment of the environment.</p>"
    },
    "DeploymentMessage":{"type":"string"},
    "DeploymentMessagesList":{
      "type":"list",
      "member":{"shape":"DeploymentMessage"}
    },
    "DeploymentMode":{
      "type":"string",
      "enum":[
        "ON_CREATE",
        "ON_DEMAND"
      ]
    },
    "DeploymentOrder":{
      "type":"integer",
      "box":true,
      "max":16,
      "min":0
    },
    "DeploymentProperties":{
      "type":"structure",
      "members":{
        "endTimeoutMinutes":{
          "shape":"DeploymentPropertiesEndTimeoutMinutesInteger",
          "documentation":"<p>The end timeout of the environment blueprint deployment.</p>"
        },
        "startTimeoutMinutes":{
          "shape":"DeploymentPropertiesStartTimeoutMinutesInteger",
          "documentation":"<p>The start timeout of the environment blueprint deployment.</p>"
        }
      },
      "documentation":"<p>The deployment properties of the Amazon DataZone blueprint.</p>"
    },
    "DeploymentPropertiesEndTimeoutMinutesInteger":{
      "type":"integer",
      "box":true,
      "max":225,
      "min":1
    },
    "DeploymentPropertiesStartTimeoutMinutesInteger":{
      "type":"integer",
      "box":true,
      "max":225,
      "min":1
    },
    "DeploymentStatus":{
      "type":"string",
      "enum":[
        "IN_PROGRESS",
        "SUCCESSFUL",
        "FAILED",
        "PENDING_DEPLOYMENT"
      ]
    },
    "DeploymentType":{
      "type":"string",
      "enum":[
        "CREATE",
        "UPDATE",
        "DELETE"
      ]
    },
    "Description":{
      "type":"string",
      "max":2048,
      "min":0,
      "sensitive":true
    },
    "DetailedGlossaryTerm":{
      "type":"structure",
      "members":{
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name of a glossary term attached to the inventory asset.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The shoft description of a glossary term attached to the inventory asset.</p>"
        }
      },
      "documentation":"<p>Details of a glossary term attached to the inventory asset.</p>"
    },
    "DetailedGlossaryTerms":{
      "type":"list",
      "member":{"shape":"DetailedGlossaryTerm"}
    },
    "DisassociateEnvironmentRoleInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "environmentRoleArn"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which an environment role is disassociated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "environmentRoleArn":{
          "shape":"String",
          "documentation":"<p>The ARN of the environment role.</p>",
          "location":"uri",
          "locationName":"environmentRoleArn"
        }
      }
    },
    "DisassociateEnvironmentRoleOutput":{
      "type":"structure",
      "members":{}
    },
    "DisassociateGovernedTermsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "governedGlossaryTerms"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to disassociate restricted terms from an asset.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of an asset from which you want to disassociate restricted terms.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"GovernedEntityType",
          "documentation":"<p>The type of the asset from which you want to disassociate restricted terms.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "governedGlossaryTerms":{
          "shape":"DisassociateGovernedTermsInputGovernedGlossaryTermsList",
          "documentation":"<p>The restricted glossary terms that you want to disassociate from an asset.</p>"
        }
      }
    },
    "DisassociateGovernedTermsInputGovernedGlossaryTermsList":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":5,
      "min":1
    },
    "DisassociateGovernedTermsOutput":{
      "type":"structure",
      "members":{}
    },
    "DomainDescription":{
      "type":"string",
      "sensitive":true
    },
    "DomainId":{
      "type":"string",
      "pattern":"^dzd[-_][a-zA-Z0-9_-]{1,36}$"
    },
    "DomainName":{
      "type":"string",
      "sensitive":true
    },
    "DomainStatus":{
      "type":"string",
      "enum":[
        "CREATING",
        "AVAILABLE",
        "CREATION_FAILED",
        "DELETING",
        "DELETED",
        "DELETION_FAILED"
      ]
    },
    "DomainSummaries":{
      "type":"list",
      "member":{"shape":"DomainSummary"}
    },
    "DomainSummary":{
      "type":"structure",
      "required":[
        "arn",
        "createdAt",
        "id",
        "managedAccountId",
        "name",
        "status"
      ],
      "members":{
        "arn":{
          "shape":"String",
          "documentation":"<p>The ARN of the Amazon DataZone domain.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>A timestamp of when a Amazon DataZone domain was created.</p>"
        },
        "description":{
          "shape":"DomainDescription",
          "documentation":"<p>A description of an Amazon DataZone domain.</p>"
        },
        "domainVersion":{
          "shape":"DomainVersion",
          "documentation":"<p>The domain version.</p>"
        },
        "id":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain.</p>"
        },
        "lastUpdatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>A timestamp of when a Amazon DataZone domain was last updated.</p>"
        },
        "managedAccountId":{
          "shape":"String",
          "documentation":"<p>The identifier of the Amazon Web Services account that manages the domain.</p>"
        },
        "name":{
          "shape":"DomainName",
          "documentation":"<p>A name of an Amazon DataZone domain.</p>"
        },
        "portalUrl":{
          "shape":"String",
          "documentation":"<p>The data portal URL for the Amazon DataZone domain.</p>"
        },
        "status":{
          "shape":"DomainStatus",
          "documentation":"<p>The status of the Amazon DataZone domain.</p>"
        }
      },
      "documentation":"<p>A summary of a Amazon DataZone domain.</p>"
    },
    "DomainUnitDescription":{
      "type":"string",
      "max":2048,
      "min":0,
      "sensitive":true
    },
    "DomainUnitDesignation":{
      "type":"string",
      "enum":["OWNER"]
    },
    "DomainUnitFilterForProject":{
      "type":"structure",
      "required":["domainUnit"],
      "members":{
        "domainUnit":{
          "shape":"DomainUnitId",
          "documentation":"<p>The domain unit ID to use in the filter.</p>"
        },
        "includeChildDomainUnits":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether to include child domain units.</p>",
          "box":true
        }
      },
      "documentation":"<p>The domain unit filter of the project grant filter.</p>"
    },
    "DomainUnitGrantFilter":{
      "type":"structure",
      "members":{
        "allDomainUnitsGrantFilter":{
          "shape":"AllDomainUnitsGrantFilter",
          "documentation":"<p>Specifies a grant filter containing all domain units.</p>"
        }
      },
      "documentation":"<p>The grant filter for the domain unit. In the current release of Amazon DataZone, the only supported filter is the <code>allDomainUnitsGrantFilter</code>.</p>",
      "union":true
    },
    "DomainUnitGroupProperties":{
      "type":"structure",
      "members":{
        "groupId":{
          "shape":"String",
          "documentation":"<p>The ID of the domain unit group.</p>"
        }
      },
      "documentation":"<p>The properties of a domain unit group.</p>"
    },
    "DomainUnitId":{
      "type":"string",
      "max":256,
      "min":1,
      "pattern":"^[a-z0-9_\\-]+$"
    },
    "DomainUnitIds":{
      "type":"list",
      "member":{"shape":"DomainUnitId"}
    },
    "DomainUnitName":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^[\\w -]+$",
      "sensitive":true
    },
    "DomainUnitOwnerProperties":{
      "type":"structure",
      "members":{
        "group":{
          "shape":"DomainUnitGroupProperties",
          "documentation":"<p>Indicates that the domain unit owner is a group.</p>"
        },
        "user":{
          "shape":"DomainUnitUserProperties",
          "documentation":"<p>Indicates that the domain unit owner is a user.</p>"
        }
      },
      "documentation":"<p>The properties of the domain unit owner.</p>",
      "union":true
    },
    "DomainUnitOwners":{
      "type":"list",
      "member":{"shape":"DomainUnitOwnerProperties"},
      "max":20,
      "min":0
    },
    "DomainUnitPolicyGrantPrincipal":{
      "type":"structure",
      "required":["domainUnitDesignation"],
      "members":{
        "domainUnitDesignation":{
          "shape":"DomainUnitDesignation",
          "documentation":"<p>Specifes the designation of the domain unit users.</p>"
        },
        "domainUnitGrantFilter":{
          "shape":"DomainUnitGrantFilter",
          "documentation":"<p>The grant filter for the domain unit.</p>"
        },
        "domainUnitIdentifier":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit.</p>"
        }
      },
      "documentation":"<p>The domain unit principal to whom the policy is granted.</p>"
    },
    "DomainUnitSummaries":{
      "type":"list",
      "member":{"shape":"DomainUnitSummary"}
    },
    "DomainUnitSummary":{
      "type":"structure",
      "required":[
        "id",
        "name"
      ],
      "members":{
        "id":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit summary.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the domain unit summary.</p>"
        }
      },
      "documentation":"<p>The summary of the domain unit.</p>"
    },
    "DomainUnitTarget":{
      "type":"structure",
      "required":["domainUnitId"],
      "members":{
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit.</p>"
        },
        "includeChildDomainUnits":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether to apply a rule to the child domain units.</p>"
        }
      },
      "documentation":"<p>The target for the domain unit.</p>"
    },
    "DomainUnitUserProperties":{
      "type":"structure",
      "members":{
        "userId":{
          "shape":"String",
          "documentation":"<p>The ID of teh domain unit user.</p>"
        }
      },
      "documentation":"<p>The properties of the domain unit user.</p>"
    },
    "DomainVersion":{
      "type":"string",
      "enum":[
        "V1",
        "V2"
      ]
    },
    "EdgeDirection":{
      "type":"string",
      "enum":[
        "UPSTREAM",
        "DOWNSTREAM"
      ]
    },
    "EditedValue":{
      "type":"string",
      "max":5000,
      "min":1,
      "sensitive":true
    },
    "EnableSetting":{
      "type":"string",
      "enum":[
        "ENABLED",
        "DISABLED"
      ]
    },
    "EnabledRegionList":{
      "type":"list",
      "member":{"shape":"RegionName"},
      "min":0
    },
    "EntityId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "EntityIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "EntityOwners":{
      "type":"list",
      "member":{"shape":"OwnerPropertiesOutput"}
    },
    "EntityType":{
      "type":"string",
      "enum":[
        "ASSET",
        "DATA_PRODUCT"
      ]
    },
    "EnvironmentActionId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "EnvironmentActionList":{
      "type":"list",
      "member":{"shape":"ConfigurableEnvironmentAction"}
    },
    "EnvironmentActionSummary":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentId",
        "id",
        "name",
        "parameters"
      ],
      "members":{
        "description":{
          "shape":"String",
          "documentation":"<p>The environment action description.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The Amazon DataZone domain ID of the environment action.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID of the environment action.</p>"
        },
        "id":{
          "shape":"EnvironmentActionId",
          "documentation":"<p>The ID of the environment action.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the environment action.</p>"
        },
        "parameters":{
          "shape":"ActionParameters",
          "documentation":"<p>The parameters of the environment action.</p>"
        }
      },
      "documentation":"<p>The details about the specified action configured for an environment. For example, the details of the specified console links for an analytics tool that is available in this environment.</p>"
    },
    "EnvironmentBlueprintConfigurationItem":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentBlueprintId"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when an environment blueprint was created.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which an environment blueprint exists.</p>"
        },
        "enabledRegions":{
          "shape":"EnabledRegionList",
          "documentation":"<p>The enabled Amazon Web Services Regions specified in a blueprint configuration.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the environment blueprint.</p>"
        },
        "environmentRolePermissionBoundary":{
          "shape":"PolicyArn",
          "documentation":"<p>The environment role permission boundary.</p>"
        },
        "manageAccessRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the manage access role specified in the environment blueprint configuration.</p>"
        },
        "provisioningConfigurations":{
          "shape":"ProvisioningConfigurationList",
          "documentation":"<p>The provisioning configuration of a blueprint.</p>"
        },
        "provisioningRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the provisioning role specified in the environment blueprint configuration.</p>"
        },
        "regionalParameters":{
          "shape":"RegionalParameterMap",
          "documentation":"<p>The regional parameters of the environment blueprint.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment blueprint was updated.</p>"
        }
      },
      "documentation":"<p>The configuration details of an environment blueprint.</p>"
    },
    "EnvironmentBlueprintConfigurations":{
      "type":"list",
      "member":{"shape":"EnvironmentBlueprintConfigurationItem"}
    },
    "EnvironmentBlueprintId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "EnvironmentBlueprintName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[\\w -]+$"
    },
    "EnvironmentBlueprintSummaries":{
      "type":"list",
      "member":{"shape":"EnvironmentBlueprintSummary"}
    },
    "EnvironmentBlueprintSummary":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "provider",
        "provisioningProperties"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when an environment blueprint was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of a blueprint.</p>"
        },
        "id":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the blueprint.</p>"
        },
        "name":{
          "shape":"EnvironmentBlueprintName",
          "documentation":"<p>The name of the blueprint.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the blueprint.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties of the blueprint.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the blueprint was enabled.</p>"
        }
      },
      "documentation":"<p>The details of an environment blueprint summary.</p>"
    },
    "EnvironmentConfiguration":{
      "type":"structure",
      "required":[
        "environmentBlueprintId",
        "name"
      ],
      "members":{
        "accountPools":{
          "shape":"AccountPoolList",
          "documentation":"<p>The account pools used by a custom project profile.</p>"
        },
        "awsAccount":{
          "shape":"AwsAccount",
          "documentation":"<p>The Amazon Web Services account of the environment.</p>"
        },
        "awsRegion":{
          "shape":"Region",
          "documentation":"<p>The Amazon Web Services Region of the environment.</p>"
        },
        "configurationParameters":{
          "shape":"EnvironmentConfigurationParametersDetails",
          "documentation":"<p>The configuration parameters of the environment.</p>"
        },
        "deploymentMode":{
          "shape":"DeploymentMode",
          "documentation":"<p>The deployment mode of the environment.</p>"
        },
        "deploymentOrder":{
          "shape":"DeploymentOrder",
          "documentation":"<p>The deployment order of the environment.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The environment description.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The environment blueprint ID.</p>"
        },
        "id":{
          "shape":"EnvironmentConfigurationId",
          "documentation":"<p>The environment ID.</p>"
        },
        "name":{
          "shape":"EnvironmentConfigurationName",
          "documentation":"<p>The environment name.</p>"
        }
      },
      "documentation":"<p>The configuration of an environment.</p>"
    },
    "EnvironmentConfigurationId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$",
      "sensitive":true
    },
    "EnvironmentConfigurationName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[\\w -]+$",
      "sensitive":true
    },
    "EnvironmentConfigurationParameter":{
      "type":"structure",
      "members":{
        "isEditable":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the environment parameter is editable.</p>"
        },
        "name":{
          "shape":"EnvironmentConfigurationParameterName",
          "documentation":"<p>The name of the environment configuration parameter.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value of the environment configuration parameter.</p>"
        }
      },
      "documentation":"<p>The environment configuration parameter.</p>"
    },
    "EnvironmentConfigurationParameterName":{
      "type":"string",
      "pattern":"^[a-zA-Z_][a-zA-Z0-9_]*$"
    },
    "EnvironmentConfigurationParametersDetails":{
      "type":"structure",
      "members":{
        "parameterOverrides":{
          "shape":"EnvironmentConfigurationParametersList",
          "documentation":"<p>The parameter overrides.</p>"
        },
        "resolvedParameters":{
          "shape":"EnvironmentConfigurationParametersList",
          "documentation":"<p>The resolved environment configuration parameters.</p>"
        },
        "ssmPath":{
          "shape":"ParameterStorePath",
          "documentation":"<p>Ssm path environment configuration parameters.</p>"
        }
      },
      "documentation":"<p>The details of the environment configuration parameter.</p>"
    },
    "EnvironmentConfigurationParametersList":{
      "type":"list",
      "member":{"shape":"EnvironmentConfigurationParameter"}
    },
    "EnvironmentConfigurationUserParameter":{
      "type":"structure",
      "members":{
        "environmentConfigurationName":{
          "shape":"EnvironmentConfigurationName",
          "documentation":"<p>The environment configuration name.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment.</p>"
        },
        "environmentParameters":{
          "shape":"EnvironmentParametersList",
          "documentation":"<p>The environment parameters.</p>"
        },
        "environmentResolvedAccount":{
          "shape":"EnvironmentResolvedAccount",
          "documentation":"<p>Specifies the account/Region that is to be used during project creation for a particular blueprint.</p>"
        }
      },
      "documentation":"<p>The environment configuration user parameters.</p>"
    },
    "EnvironmentConfigurationUserParametersList":{
      "type":"list",
      "member":{"shape":"EnvironmentConfigurationUserParameter"}
    },
    "EnvironmentConfigurationsList":{
      "type":"list",
      "member":{"shape":"EnvironmentConfiguration"}
    },
    "EnvironmentDeploymentDetails":{
      "type":"structure",
      "members":{
        "environmentFailureReasons":{
          "shape":"EnvironmentFailureReasons",
          "documentation":"<p>Environment failure reasons.</p>"
        },
        "overallDeploymentStatus":{
          "shape":"OverallDeploymentStatus",
          "documentation":"<p>The overall deployment status of the environment.</p>"
        }
      },
      "documentation":"<p>The environment deployment details.</p>"
    },
    "EnvironmentError":{
      "type":"structure",
      "required":["message"],
      "members":{
        "code":{
          "shape":"String",
          "documentation":"<p>The error code for the failure reason for the environment deployment.</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>The error message for the failure reason for the environment deployment.</p>"
        }
      },
      "documentation":"<p>The failure reasons for the environment deployment.</p>"
    },
    "EnvironmentFailureReasons":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"EnvironmentFailureReasonsList"}
    },
    "EnvironmentFailureReasonsList":{
      "type":"list",
      "member":{"shape":"EnvironmentError"}
    },
    "EnvironmentId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "EnvironmentName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[\\w -]+$",
      "sensitive":true
    },
    "EnvironmentParameter":{
      "type":"structure",
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of an environment profile parameter.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value of an environment profile parameter.</p>"
        }
      },
      "documentation":"<p>The parameter details of an evironment profile.</p>"
    },
    "EnvironmentParametersList":{
      "type":"list",
      "member":{"shape":"EnvironmentParameter"}
    },
    "EnvironmentProfileId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{0,36}$"
    },
    "EnvironmentProfileName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[\\w -]+$",
      "sensitive":true
    },
    "EnvironmentProfileSummaries":{
      "type":"list",
      "member":{"shape":"EnvironmentProfileSummary"}
    },
    "EnvironmentProfileSummary":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "environmentBlueprintId",
        "id",
        "name"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The identifier of an Amazon Web Services account in which an environment profile exists.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services Region in which an environment profile exists.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when an environment profile was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created the environment profile.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the environment profile.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the environment profile exists.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of a blueprint with which an environment profile is created.</p>"
        },
        "id":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The identifier of the environment profile.</p>"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p>The name of the environment profile.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of a project in which an environment profile exists.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment profile was updated.</p>"
        }
      },
      "documentation":"<p>The details of an environment profile.</p>"
    },
    "EnvironmentResolvedAccount":{
      "type":"structure",
      "required":[
        "awsAccountId",
        "regionName"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The ID of the resolved account.</p>"
        },
        "regionName":{
          "shape":"AwsRegion",
          "documentation":"<p>The name of the resolved Region.</p>"
        },
        "sourceAccountPoolId":{
          "shape":"AccountPoolId",
          "documentation":"<p>The ID of the account pool.</p>"
        }
      },
      "documentation":"<p>Specifies the account/Region that is to be used during project creation for a particular blueprint.</p>"
    },
    "EnvironmentStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "CREATING",
        "UPDATING",
        "DELETING",
        "CREATE_FAILED",
        "UPDATE_FAILED",
        "DELETE_FAILED",
        "VALIDATION_FAILED",
        "SUSPENDED",
        "DISABLED",
        "EXPIRED",
        "DELETED",
        "INACCESSIBLE"
      ]
    },
    "EnvironmentSummaries":{
      "type":"list",
      "member":{"shape":"EnvironmentSummary"}
    },
    "EnvironmentSummary":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "name",
        "projectId",
        "provider"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The identifier of the Amazon Web Services account in which an environment exists.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services Region in which an environment exists.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created the environment.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the environment.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the environment exists.</p>"
        },
        "environmentConfigurationId":{
          "shape":"EnvironmentConfigurationId",
          "documentation":"<p>The configuration ID with which the environment is created.</p>"
        },
        "environmentProfileId":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The identifier of the environment profile with which the environment was created.</p>"
        },
        "id":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment.</p>"
        },
        "name":{
          "shape":"EnvironmentName",
          "documentation":"<p>The name of the environment.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project in which the environment exists.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the environment.</p>"
        },
        "status":{
          "shape":"EnvironmentStatus",
          "documentation":"<p>The status of the environment.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment was updated.</p>"
        }
      },
      "documentation":"<p>The details of an environment.</p>"
    },
    "EqualToExpression":{
      "type":"structure",
      "required":[
        "columnName",
        "value"
      ],
      "members":{
        "columnName":{
          "shape":"String",
          "documentation":"<p>The name of the column.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value that might be equal to an expression.</p>"
        }
      },
      "documentation":"<p>Specifies whether the value is equal to an expression.</p>"
    },
    "ErrorMessage":{"type":"string"},
    "EventSummary":{
      "type":"structure",
      "members":{
        "openLineageRunEventSummary":{
          "shape":"OpenLineageRunEventSummary",
          "documentation":"<p>The open lineage run event summary.</p>"
        }
      },
      "documentation":"<p>The event summary.</p>",
      "union":true
    },
    "ExternalIdentifier":{
      "type":"string",
      "max":600,
      "min":1
    },
    "FailedQueryProcessingErrorMessages":{
      "type":"list",
      "member":{"shape":"String"},
      "max":10,
      "min":0
    },
    "FailureCause":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>The description of the error message.</p>"
        }
      },
      "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
    },
    "FailureReasons":{
      "type":"list",
      "member":{"shape":"ProjectDeletionError"}
    },
    "Filter":{
      "type":"structure",
      "required":[
        "attribute",
        "value"
      ],
      "members":{
        "attribute":{
          "shape":"Attribute",
          "documentation":"<p>A search filter attribute in Amazon DataZone.</p>"
        },
        "value":{
          "shape":"FilterValueString",
          "documentation":"<p>A search filter value in Amazon DataZone.</p>"
        }
      },
      "documentation":"<p>A search filter in Amazon DataZone.</p>"
    },
    "FilterClause":{
      "type":"structure",
      "members":{
        "and":{
          "shape":"FilterList",
          "documentation":"<p>The 'and' search filter clause in Amazon DataZone.</p>"
        },
        "filter":{
          "shape":"Filter",
          "documentation":"<p>A search filter in Amazon DataZone.</p>"
        },
        "or":{
          "shape":"FilterList",
          "documentation":"<p>The 'or' search filter clause in Amazon DataZone.</p>"
        }
      },
      "documentation":"<p>A search filter clause in Amazon DataZone.</p>",
      "union":true
    },
    "FilterExpression":{
      "type":"structure",
      "required":[
        "expression",
        "type"
      ],
      "members":{
        "expression":{
          "shape":"FilterExpressionExpressionString",
          "documentation":"<p>The search filter expression.</p>"
        },
        "type":{
          "shape":"FilterExpressionType",
          "documentation":"<p>The search filter explresison type.</p>"
        }
      },
      "documentation":"<p>A filter expression in Amazon DataZone.</p>"
    },
    "FilterExpressionExpressionString":{
      "type":"string",
      "max":2048,
      "min":1
    },
    "FilterExpressionType":{
      "type":"string",
      "enum":[
        "INCLUDE",
        "EXCLUDE"
      ]
    },
    "FilterExpressions":{
      "type":"list",
      "member":{"shape":"FilterExpression"}
    },
    "FilterId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "FilterIds":{
      "type":"list",
      "member":{"shape":"FilterId"}
    },
    "FilterList":{
      "type":"list",
      "member":{"shape":"FilterClause"},
      "max":100,
      "min":1
    },
    "FilterName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[\\w -]+$",
      "sensitive":true
    },
    "FilterStatus":{
      "type":"string",
      "enum":[
        "VALID",
        "INVALID"
      ]
    },
    "FilterValueString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "FirstName":{
      "type":"string",
      "sensitive":true
    },
    "Float":{
      "type":"float",
      "box":true
    },
    "FormEntryInput":{
      "type":"structure",
      "required":[
        "typeIdentifier",
        "typeRevision"
      ],
      "members":{
        "required":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether a form entry is required.</p>"
        },
        "typeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The type ID of the form entry.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The type revision of the form entry.</p>"
        }
      },
      "documentation":"<p>The details of the form entry.</p>"
    },
    "FormEntryOutput":{
      "type":"structure",
      "required":[
        "typeName",
        "typeRevision"
      ],
      "members":{
        "required":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether a form entry is required.</p>"
        },
        "typeName":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of the type of the form entry.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The type revision of the form entry.</p>"
        }
      },
      "documentation":"<p>The details of the form entry.</p>"
    },
    "FormInput":{
      "type":"structure",
      "required":["formName"],
      "members":{
        "content":{
          "shape":"FormInputContentString",
          "documentation":"<p>The content of the metadata form.</p>"
        },
        "formName":{
          "shape":"FormName",
          "documentation":"<p>The name of the metadata form.</p>"
        },
        "typeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The ID of the metadata form type.</p>"
        },
        "typeRevision":{
          "shape":"RevisionInput",
          "documentation":"<p>The revision of the metadata form type.</p>"
        }
      },
      "documentation":"<p>The details of a metadata form.</p>",
      "sensitive":true
    },
    "FormInputContentString":{
      "type":"string",
      "max":300000,
      "min":0
    },
    "FormInputList":{
      "type":"list",
      "member":{"shape":"FormInput"},
      "max":10,
      "min":0,
      "sensitive":true
    },
    "FormName":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^(?![0-9_])\\w+$|^_\\w*[a-zA-Z0-9]\\w*$"
    },
    "FormOutput":{
      "type":"structure",
      "required":["formName"],
      "members":{
        "content":{
          "shape":"String",
          "documentation":"<p>The content of the metadata form.</p>"
        },
        "formName":{
          "shape":"FormName",
          "documentation":"<p>The name of the metadata form.</p>"
        },
        "typeName":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of the metadata form type.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the metadata form type.</p>"
        }
      },
      "documentation":"<p>The details of a metadata form.</p>"
    },
    "FormOutputList":{
      "type":"list",
      "member":{"shape":"FormOutput"},
      "max":10,
      "min":0
    },
    "FormTypeData":{
      "type":"structure",
      "required":[
        "domainId",
        "name",
        "revision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the metadata form type was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created teh metadata form type.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the metadata form type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the form type exists.</p>"
        },
        "imports":{
          "shape":"ImportList",
          "documentation":"<p>The imports specified in the form type.</p>"
        },
        "model":{
          "shape":"Model",
          "documentation":"<p>The model of the form type.</p>"
        },
        "name":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of the form type.</p>"
        },
        "originDomainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the form type was originally created.</p>"
        },
        "originProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project in which the form type was originally created.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that owns the form type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the form type.</p>"
        },
        "status":{
          "shape":"FormTypeStatus",
          "documentation":"<p>The status of the form type.</p>"
        }
      },
      "documentation":"<p>The details of the metadata form type.</p>"
    },
    "FormTypeIdentifier":{
      "type":"string",
      "max":385,
      "min":1,
      "pattern":"^(?!\\.)[\\w\\.]*\\w$"
    },
    "FormTypeName":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^(amazon.datazone.)?(?![0-9_])\\w+$|^_\\w*[a-zA-Z0-9]\\w*$",
      "sensitive":true
    },
    "FormTypeStatus":{
      "type":"string",
      "enum":[
        "ENABLED",
        "DISABLED"
      ]
    },
    "Forms":{"type":"string"},
    "FormsInputMap":{
      "type":"map",
      "key":{"shape":"FormName"},
      "value":{"shape":"FormEntryInput"},
      "max":10,
      "min":0
    },
    "FormsOutputMap":{
      "type":"map",
      "key":{"shape":"FormName"},
      "value":{"shape":"FormEntryOutput"},
      "max":10,
      "min":0
    },
    "GetAccountPoolInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which the account pool lives whose details are to be displayed.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AccountPoolId",
          "documentation":"<p>The ID of the account pool whose details are to be displayed.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetAccountPoolOutput":{
      "type":"structure",
      "required":[
        "accountSource",
        "createdBy"
      ],
      "members":{
        "accountSource":{
          "shape":"AccountSource",
          "documentation":"<p>The source of accounts for the account pool. In the current release, it's either a static list of accounts provided by the customer or a custom Amazon Web Services Lambda handler. </p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp at which the account pool was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the account pool.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the account pool.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which the account pool lives whose details are to be displayed.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The domain unit ID of the account pool.</p>"
        },
        "id":{
          "shape":"AccountPoolId",
          "documentation":"<p>The ID of the account pool.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp at which the account pool was last updated.</p>"
        },
        "name":{
          "shape":"AccountPoolName",
          "documentation":"<p>The name of the account pool.</p>"
        },
        "resolutionStrategy":{
          "shape":"ResolutionStrategy",
          "documentation":"<p>The mechanism used to resolve the account selection from the account pool.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user who last updated the account pool.</p>"
        }
      }
    },
    "GetAssetFilterInput":{
      "type":"structure",
      "required":[
        "assetIdentifier",
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "assetIdentifier":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the data asset.</p>",
          "location":"uri",
          "locationName":"assetIdentifier"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to get an asset filter.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"FilterId",
          "documentation":"<p>The ID of the asset filter.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetAssetFilterOutput":{
      "type":"structure",
      "required":[
        "assetId",
        "configuration",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the data asset.</p>"
        },
        "configuration":{
          "shape":"AssetFilterConfiguration",
          "documentation":"<p>The configuration of the asset filter.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the asset filter was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the asset filter.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to get an asset filter.</p>"
        },
        "effectiveColumnNames":{
          "shape":"ColumnNameList",
          "documentation":"<p>The column names of the asset filter.</p>"
        },
        "effectiveRowFilter":{
          "shape":"String",
          "documentation":"<p>The row filter of the asset filter.</p>"
        },
        "errorMessage":{
          "shape":"String",
          "documentation":"<p>The error message that is displayed if the action does not complete successfully.</p>"
        },
        "id":{
          "shape":"FilterId",
          "documentation":"<p>The ID of the asset filter.</p>"
        },
        "name":{
          "shape":"FilterName",
          "documentation":"<p>The name of the asset filter.</p>"
        },
        "status":{
          "shape":"FilterStatus",
          "documentation":"<p>The status of the asset filter.</p>"
        }
      }
    },
    "GetAssetInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain to which the asset belongs.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>The ID of the Amazon DataZone asset.</p> <p>This parameter supports either the value of <code>assetId</code> or <code>externalIdentifier</code> as input. If you are passing the value of <code>externalIdentifier</code>, you must prefix this value with <code>externalIdentifer%2F</code>.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the Amazon DataZone asset.</p>",
          "location":"querystring",
          "locationName":"revision"
        }
      }
    },
    "GetAssetOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "id",
        "name",
        "owningProjectId",
        "revision",
        "typeIdentifier",
        "typeRevision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the asset was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the asset.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the Amazon DataZone asset.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain to which the asset belongs.</p>"
        },
        "externalIdentifier":{
          "shape":"ExternalIdentifier",
          "documentation":"<p>The external ID of the asset.</p>"
        },
        "firstRevisionCreatedAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the first revision of the asset was created.</p>"
        },
        "firstRevisionCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the first revision of the asset.</p>"
        },
        "formsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms attached to the asset.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The business glossary terms attached to the asset.</p>"
        },
        "governedGlossaryTerms":{
          "shape":"GetAssetOutputGovernedGlossaryTermsList",
          "documentation":"<p>The restricted glossary terms attached to an asset.</p>"
        },
        "id":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the asset.</p>"
        },
        "latestTimeSeriesDataPointFormsOutput":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The latest data point that was imported into the time series form for the asset. </p>"
        },
        "listing":{
          "shape":"AssetListingDetails",
          "documentation":"<p>The listing of the asset.</p>"
        },
        "name":{
          "shape":"AssetName",
          "documentation":"<p>The name of the asset.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns the asset.</p>"
        },
        "readOnlyFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The read-only metadata forms attached to the asset.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset.</p>"
        },
        "typeIdentifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The ID of the asset type.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset type.</p>"
        }
      }
    },
    "GetAssetOutputGovernedGlossaryTermsList":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":20,
      "min":0
    },
    "GetAssetTypeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset type exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetTypeIdentifier",
          "documentation":"<p>The ID of the asset type.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset type.</p>",
          "location":"querystring",
          "locationName":"revision"
        }
      }
    },
    "GetAssetTypeOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "name",
        "owningProjectId",
        "revision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the asset type was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the asset type.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the asset type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset type exists.</p>"
        },
        "formsOutput":{
          "shape":"FormsOutputMap",
          "documentation":"<p>The metadata forms attached to the asset type.</p>"
        },
        "name":{
          "shape":"TypeName",
          "documentation":"<p>The name of the asset type.</p>"
        },
        "originDomainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the asset type was originally created.</p>"
        },
        "originProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project in which the asset type was originally created.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project that owns the asset type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset type.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the asset type was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user that updated the asset type.</p>"
        }
      }
    },
    "GetConnectionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where we get the connection.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ConnectionId",
          "documentation":"<p>The connection ID.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "withSecret":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether a connection has a secret.</p>",
          "location":"querystring",
          "locationName":"withSecret"
        }
      }
    },
    "GetConnectionOutput":{
      "type":"structure",
      "required":[
        "connectionId",
        "domainId",
        "domainUnitId",
        "name",
        "physicalEndpoints",
        "type"
      ],
      "members":{
        "connectionCredentials":{
          "shape":"ConnectionCredentials",
          "documentation":"<p>Connection credentials.</p>"
        },
        "connectionId":{
          "shape":"ConnectionId",
          "documentation":"<p>The ID of the connection.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>Connection description.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The domain ID of the connection.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The domain unit ID of the connection.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment.</p>"
        },
        "environmentUserRole":{
          "shape":"String",
          "documentation":"<p>The environment user role.</p>"
        },
        "name":{
          "shape":"ConnectionName",
          "documentation":"<p>The name of the connection.</p>"
        },
        "physicalEndpoints":{
          "shape":"PhysicalEndpoints",
          "documentation":"<p>The physical endpoints of the connection.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project.</p>"
        },
        "props":{
          "shape":"ConnectionPropertiesOutput",
          "documentation":"<p>Connection props.</p>"
        },
        "type":{
          "shape":"ConnectionType",
          "documentation":"<p>The type of the connection.</p>"
        }
      }
    },
    "GetDataProductInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the data product lives.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DataProductId",
          "documentation":"<p>The ID of the data product.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the data product.</p>",
          "location":"querystring",
          "locationName":"revision"
        }
      }
    },
    "GetDataProductOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId",
        "revision",
        "status"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the data product is created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the data product.</p>"
        },
        "description":{
          "shape":"DataProductDescription",
          "documentation":"<p>The description of the data product.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the data product lives.</p>"
        },
        "firstRevisionCreatedAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the first revision of the data product is created.</p>"
        },
        "firstRevisionCreatedBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the first revision of the data product.</p>"
        },
        "formsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms of the data product.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms of the data product.</p>"
        },
        "id":{
          "shape":"DataProductId",
          "documentation":"<p>The ID of the data product.</p>"
        },
        "items":{
          "shape":"DataProductItems",
          "documentation":"<p>The data assets of the data product.</p>"
        },
        "name":{
          "shape":"DataProductName",
          "documentation":"<p>The name of the data product.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the owning project of the data product.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the data product.</p>"
        },
        "status":{
          "shape":"DataProductStatus",
          "documentation":"<p>The status of the data product.</p>"
        }
      }
    },
    "GetDataSourceInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data source exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DataSourceId",
          "documentation":"<p>The ID of the Amazon DataZone data source.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetDataSourceOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "projectId"
      ],
      "members":{
        "assetFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata forms attached to the assets created by this data source.</p>"
        },
        "configuration":{
          "shape":"DataSourceConfigurationOutput",
          "documentation":"<p>The configuration of the data source.</p>"
        },
        "connectionId":{
          "shape":"String",
          "documentation":"<p>The ID of the connection.</p>"
        },
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the data source.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the data source exists.</p>"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>Specifies whether this data source is enabled or not.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment where this data source creates and publishes assets,</p>"
        },
        "errorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"DataSourceId",
          "documentation":"<p>The ID of the data source.</p>"
        },
        "lastRunAssetCount":{
          "shape":"Integer",
          "documentation":"<p>The number of assets created by the data source during its last run.</p>"
        },
        "lastRunAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of the last run of the data source.</p>"
        },
        "lastRunErrorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "lastRunStatus":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the last run of the data source.</p>"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name of the data source.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project where the data source creates and publishes assets.</p>"
        },
        "publishOnImport":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.</p>"
        },
        "recommendation":{
          "shape":"RecommendationConfiguration",
          "documentation":"<p>The recommendation configuration of the data source.</p>"
        },
        "schedule":{
          "shape":"ScheduleConfiguration",
          "documentation":"<p>The schedule of the data source runs.</p>"
        },
        "selfGrantStatus":{
          "shape":"SelfGrantStatusOutput",
          "documentation":"<p>Specifies the status of the self-granting functionality.</p>"
        },
        "status":{
          "shape":"DataSourceStatus",
          "documentation":"<p>The status of the data source.</p>"
        },
        "type":{
          "shape":"DataSourceType",
          "documentation":"<p>The type of the data source.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was updated.</p>"
        }
      }
    },
    "GetDataSourceRunInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which this data source run was performed.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DataSourceRunId",
          "documentation":"<p>The ID of the data source run.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetDataSourceRunOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "dataSourceId",
        "domainId",
        "id",
        "projectId",
        "status",
        "type",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source run was created.</p>"
        },
        "dataSourceConfigurationSnapshot":{
          "shape":"String",
          "documentation":"<p>The configuration snapshot of the data source run.</p>"
        },
        "dataSourceId":{
          "shape":"DataSourceId",
          "documentation":"<p>The ID of the data source for this data source run.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which this data source run was performed.</p>"
        },
        "errorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"DataSourceRunId",
          "documentation":"<p>The ID of the data source run.</p>"
        },
        "lineageSummary":{
          "shape":"DataSourceRunLineageSummary",
          "documentation":"<p>The summary of the data lineage.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project in which this data source run occured.</p>"
        },
        "runStatisticsForAssets":{
          "shape":"RunStatisticsForAssets",
          "documentation":"<p>The asset statistics from this data source run.</p>"
        },
        "startedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when this data source run started.</p>"
        },
        "status":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of this data source run.</p>"
        },
        "stoppedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when this data source run stopped.</p>"
        },
        "type":{
          "shape":"DataSourceRunType",
          "documentation":"<p>The type of this data source run.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when this data source run was updated.</p>"
        }
      }
    },
    "GetDomainInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the specified Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetDomainOutput":{
      "type":"structure",
      "required":[
        "domainExecutionRole",
        "id",
        "status"
      ],
      "members":{
        "arn":{
          "shape":"String",
          "documentation":"<p>The ARN of the specified Amazon DataZone domain.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the Amazon DataZone domain was created.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the Amazon DataZone domain.</p>"
        },
        "domainExecutionRole":{
          "shape":"RoleArn",
          "documentation":"<p>The domain execution role with which the Amazon DataZone domain is created.</p>"
        },
        "domainVersion":{
          "shape":"DomainVersion",
          "documentation":"<p>The version of the domain.</p>"
        },
        "id":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the specified Amazon DataZone domain.</p>"
        },
        "kmsKeyIdentifier":{
          "shape":"KmsKeyArn",
          "documentation":"<p>The identifier of the Amazon Web Services Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data. </p>"
        },
        "lastUpdatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the Amazon DataZone domain was last updated.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the Amazon DataZone domain.</p>"
        },
        "portalUrl":{
          "shape":"String",
          "documentation":"<p>The URL of the data portal for this Amazon DataZone domain.</p>"
        },
        "rootDomainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the root domain in Amazon Datazone.</p>"
        },
        "serviceRole":{
          "shape":"RoleArn",
          "documentation":"<p>The service role of the domain.</p>"
        },
        "singleSignOn":{
          "shape":"SingleSignOn",
          "documentation":"<p>The single sing-on option of the specified Amazon DataZone domain.</p>"
        },
        "status":{
          "shape":"DomainStatus",
          "documentation":"<p>The status of the specified Amazon DataZone domain.</p>"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>The tags specified for the Amazon DataZone domain.</p>"
        }
      }
    },
    "GetDomainUnitInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to get a domain unit.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DomainUnitId",
          "documentation":"<p>The identifier of the domain unit that you want to get.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetDomainUnitOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owners"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The time stamp at which the domain unit was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the domain unit.</p>"
        },
        "description":{
          "shape":"DomainUnitDescription",
          "documentation":"<p>The description of the domain unit.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which the domain unit lives.</p>"
        },
        "id":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit.</p>"
        },
        "lastUpdatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp at which the domain unit was last updated.</p>"
        },
        "lastUpdatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user who last updated the domain unit.</p>"
        },
        "name":{
          "shape":"DomainUnitName",
          "documentation":"<p>The name of the domain unit.</p>"
        },
        "owners":{
          "shape":"DomainUnitOwners",
          "documentation":"<p>The owners of the domain unit.</p>"
        },
        "parentDomainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the parent domain unit.</p>"
        }
      }
    },
    "GetEnvironmentActionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the <code>GetEnvironmentAction</code> API is invoked. </p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID of the environment action.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "identifier":{
          "shape":"String",
          "documentation":"<p>The ID of the environment action</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetEnvironmentActionOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentId",
        "id",
        "name",
        "parameters"
      ],
      "members":{
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the environment action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the environment action lives.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID of the environment action.</p>"
        },
        "id":{
          "shape":"EnvironmentActionId",
          "documentation":"<p>The ID of the environment action.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the environment action.</p>"
        },
        "parameters":{
          "shape":"ActionParameters",
          "documentation":"<p>The parameters of the environment action.</p>"
        }
      }
    },
    "GetEnvironmentBlueprintConfigurationInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentBlueprintIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where this blueprint exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentBlueprintIdentifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>He ID of the blueprint.</p>",
          "location":"uri",
          "locationName":"environmentBlueprintIdentifier"
        }
      }
    },
    "GetEnvironmentBlueprintConfigurationOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentBlueprintId"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this blueprint was created.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where this blueprint exists.</p>"
        },
        "enabledRegions":{
          "shape":"EnabledRegionList",
          "documentation":"<p>The Amazon Web Services regions in which this blueprint is enabled.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint.</p>"
        },
        "environmentRolePermissionBoundary":{
          "shape":"PolicyArn",
          "documentation":"<p>The environment role permissions boundary.</p>"
        },
        "manageAccessRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the manage access role with which this blueprint is created.</p>"
        },
        "provisioningConfigurations":{
          "shape":"ProvisioningConfigurationList",
          "documentation":"<p>The provisioning configuration of a blueprint.</p>"
        },
        "provisioningRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the provisioning role with which this blueprint is created.</p>"
        },
        "regionalParameters":{
          "shape":"RegionalParameterMap",
          "documentation":"<p>The regional parameters of the blueprint.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this blueprint was upated.</p>"
        }
      }
    },
    "GetEnvironmentBlueprintInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain in which this blueprint exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of this Amazon DataZone blueprint.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetEnvironmentBlueprintOutput":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "provider",
        "provisioningProperties"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>A timestamp of when this blueprint was created.</p>"
        },
        "deploymentProperties":{
          "shape":"DeploymentProperties",
          "documentation":"<p>The deployment properties of this Amazon DataZone blueprint.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of this Amazon DataZone blueprint.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms attached to this Amazon DataZone blueprint.</p>"
        },
        "id":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of this Amazon DataZone blueprint.</p>"
        },
        "name":{
          "shape":"EnvironmentBlueprintName",
          "documentation":"<p>The name of this Amazon DataZone blueprint.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of this Amazon DataZone blueprint.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties of this Amazon DataZone blueprint.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this blueprint was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters of this blueprint.</p>"
        }
      }
    },
    "GetEnvironmentCredentialsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this environment and its credentials exist.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment whose credentials this operation gets.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        }
      }
    },
    "GetEnvironmentCredentialsOutput":{
      "type":"structure",
      "members":{
        "accessKeyId":{
          "shape":"String",
          "documentation":"<p>The access key ID of the environment.</p>"
        },
        "expiration":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The expiration timestamp of the environment credentials.</p>"
        },
        "secretAccessKey":{
          "shape":"String",
          "documentation":"<p>The secret access key of the environment credentials.</p>"
        },
        "sessionToken":{
          "shape":"String",
          "documentation":"<p>The session token of the environment credentials.</p>"
        }
      },
      "sensitive":true
    },
    "GetEnvironmentInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where the environment exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the Amazon DataZone environment.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetEnvironmentOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "name",
        "projectId",
        "provider"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The ID of the Amazon Web Services account where the environment exists.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region where the environment exists.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created the environment.</p>"
        },
        "deploymentProperties":{
          "shape":"DeploymentProperties",
          "documentation":"<p>The deployment properties of the environment.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the environment.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where the environment exists.</p>"
        },
        "environmentActions":{
          "shape":"EnvironmentActionList",
          "documentation":"<p>The actions of the environment.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The blueprint with which the environment is created.</p>"
        },
        "environmentConfigurationId":{
          "shape":"EnvironmentConfigurationId",
          "documentation":"<p>The configuration ID that is used to create the environment.</p>"
        },
        "environmentProfileId":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The ID of the environment profile with which the environment is created.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The business glossary terms that can be used in this environment.</p>"
        },
        "id":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment.</p>"
        },
        "lastDeployment":{
          "shape":"Deployment",
          "documentation":"<p>The details of the last deployment of the environment.</p>"
        },
        "name":{
          "shape":"EnvironmentName",
          "documentation":"<p>The name of the environment.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project in which this environment is created.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of this Amazon DataZone environment.</p>"
        },
        "provisionedResources":{
          "shape":"ResourceList",
          "documentation":"<p>The provisioned resources of this Amazon DataZone environment.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties of this Amazon DataZone environment.</p>"
        },
        "status":{
          "shape":"EnvironmentStatus",
          "documentation":"<p>The status of this Amazon DataZone environment.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this environment was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters of this Amazon DataZone environment.</p>"
        }
      }
    },
    "GetEnvironmentProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this environment profile exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The ID of the environment profile.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetEnvironmentProfileOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "environmentBlueprintId",
        "id",
        "name"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The ID of the Amazon Web Services account where this environment profile exists.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region where this environment profile exists.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this environment profile was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created this environment profile.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the environment profile.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this environment profile exists.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The ID of the blueprint with which this environment profile is created.</p>"
        },
        "id":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The ID of the environment profile.</p>"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p>The name of the environment profile.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the Amazon DataZone project in which this environment profile is created.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when this environment profile was upated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters of the environment profile.</p>"
        }
      }
    },
    "GetFormTypeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "formTypeIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this metadata form type exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "formTypeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The ID of the metadata form type.</p>",
          "location":"uri",
          "locationName":"formTypeIdentifier"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of this metadata form type.</p>",
          "location":"querystring",
          "locationName":"revision"
        }
      }
    },
    "GetFormTypeOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "model",
        "name",
        "revision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when this metadata form type was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created this metadata form type.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the metadata form type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this metadata form type exists.</p>"
        },
        "imports":{
          "shape":"ImportList",
          "documentation":"<p>The imports of the metadata form type.</p>"
        },
        "model":{
          "shape":"Model",
          "documentation":"<p>The model of the metadata form type.</p>"
        },
        "name":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of the metadata form type.</p>"
        },
        "originDomainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the metadata form type was originally created.</p>"
        },
        "originProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project in which this metadata form type was originally created.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns this metadata form type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the metadata form type.</p>"
        },
        "status":{
          "shape":"FormTypeStatus",
          "documentation":"<p>The status of the metadata form type.</p>"
        }
      }
    },
    "GetGlossaryInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"GlossaryId",
          "documentation":"<p>The ID of the business glossary.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetGlossaryOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId",
        "status"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when this business glossary was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created this business glossary.</p>"
        },
        "description":{
          "shape":"GlossaryDescription",
          "documentation":"<p>The description of the business glossary.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary exists.</p>"
        },
        "id":{
          "shape":"GlossaryId",
          "documentation":"<p>The ID of the business glossary.</p>"
        },
        "name":{
          "shape":"GlossaryName",
          "documentation":"<p>The name of the business glossary.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns this business glossary.</p>"
        },
        "status":{
          "shape":"GlossaryStatus",
          "documentation":"<p>The status of the business glossary.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the business glossary was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the business glossary.</p>"
        },
        "usageRestrictions":{
          "shape":"GlossaryUsageRestrictions",
          "documentation":"<p>The usage restriction of the restricted glossary.</p>"
        }
      }
    },
    "GetGlossaryTermInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary term exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The ID of the business glossary term.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetGlossaryTermOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "glossaryId",
        "id",
        "name",
        "status"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the business glossary term was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the business glossary.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which this business glossary term exists.</p>"
        },
        "glossaryId":{
          "shape":"GlossaryId",
          "documentation":"<p>The ID of the business glossary to which this term belongs.</p>"
        },
        "id":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The ID of the business glossary term.</p>"
        },
        "longDescription":{
          "shape":"LongDescription",
          "documentation":"<p>The long description of the business glossary term.</p>"
        },
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name of the business glossary term.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The short decription of the business glossary term.</p>"
        },
        "status":{
          "shape":"GlossaryTermStatus",
          "documentation":"<p>The status of the business glossary term.</p>"
        },
        "termRelations":{
          "shape":"TermRelations",
          "documentation":"<p>The relations of the business glossary term.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the business glossary term was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the business glossary term.</p>"
        },
        "usageRestrictions":{
          "shape":"GlossaryUsageRestrictions",
          "documentation":"<p>The usage restriction of a term within a restricted glossary.</p>"
        }
      }
    },
    "GetGroupProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "groupIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the group profile exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "groupIdentifier":{
          "shape":"GroupIdentifier",
          "documentation":"<p>The identifier of the group profile.</p>",
          "location":"uri",
          "locationName":"groupIdentifier"
        }
      }
    },
    "GetGroupProfileOutput":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the group profile exists.</p>"
        },
        "groupName":{
          "shape":"GroupProfileName",
          "documentation":"<p>The name of the group for which the specified group profile exists.</p>"
        },
        "id":{
          "shape":"GroupProfileId",
          "documentation":"<p>The identifier of the group profile.</p>"
        },
        "status":{
          "shape":"GroupProfileStatus",
          "documentation":"<p>The identifier of the group profile.</p>"
        }
      }
    },
    "GetIamPortalLoginUrlInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>the ID of the Amazon DataZone domain the data portal of which you want to get.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        }
      }
    },
    "GetIamPortalLoginUrlOutput":{
      "type":"structure",
      "required":["userProfileId"],
      "members":{
        "authCodeUrl":{
          "shape":"String",
          "documentation":"<p>The data portal URL of the specified Amazon DataZone domain.</p>"
        },
        "userProfileId":{
          "shape":"String",
          "documentation":"<p>The ID of the user profile.</p>"
        }
      }
    },
    "GetJobRunInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"RunIdentifier",
          "documentation":"<p>The ID of the job run.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetJobRunOutput":{
      "type":"structure",
      "members":{
        "createdAt":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of when the job run was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The user who created the job run.</p>"
        },
        "details":{
          "shape":"JobRunDetails",
          "documentation":"<p>The details of the job run.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain.</p>"
        },
        "endTime":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of when the job run ended.</p>"
        },
        "error":{
          "shape":"JobRunError",
          "documentation":"<p>The error generated if the action is not completed successfully.</p>"
        },
        "id":{
          "shape":"String",
          "documentation":"<p>The ID of the job run.</p>"
        },
        "jobId":{
          "shape":"String",
          "documentation":"<p>The ID of the job run.</p>"
        },
        "jobType":{
          "shape":"JobType",
          "documentation":"<p>The type of the job run.</p>"
        },
        "runMode":{
          "shape":"JobRunMode",
          "documentation":"<p>The mode of the job run.</p>"
        },
        "startTime":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of when the job run started.</p>"
        },
        "status":{
          "shape":"JobRunStatus",
          "documentation":"<p>The status of the job run.</p>"
        }
      }
    },
    "GetLineageEventInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"LineageEventIdentifier",
          "documentation":"<p>The ID of the lineage event.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetLineageEventOutput":{
      "type":"structure",
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the lineage event was created.</p>",
          "location":"header",
          "locationName":"Created-At"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the lineage event.</p>",
          "location":"header",
          "locationName":"Created-By"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain.</p>",
          "location":"header",
          "locationName":"Domain-Id"
        },
        "event":{
          "shape":"LineageEvent",
          "documentation":"<p>The lineage event details.</p>"
        },
        "eventTime":{
          "shape":"Timestamp",
          "documentation":"<p>The time of the lineage event.</p>",
          "location":"header",
          "locationName":"Event-Time"
        },
        "id":{
          "shape":"LineageEventIdentifier",
          "documentation":"<p>The ID of the lineage event.</p>",
          "location":"header",
          "locationName":"Id"
        },
        "processingStatus":{
          "shape":"LineageEventProcessingStatus",
          "documentation":"<p>The progressing status of the lineage event.</p>",
          "location":"header",
          "locationName":"Processing-Status"
        }
      },
      "payload":"event"
    },
    "GetLineageNodeInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which you want to get the data lineage node.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "eventTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The event time stamp for which you want to get the data lineage node.</p>",
          "location":"querystring",
          "locationName":"timestamp"
        },
        "identifier":{
          "shape":"LineageNodeIdentifier",
          "documentation":"<p>The ID of the data lineage node that you want to get.</p> <p>Both, a lineage node identifier generated by Amazon DataZone and a <code>sourceIdentifier</code> of the lineage node are supported. If <code>sourceIdentifier</code> is greater than 1800 characters, you can use lineage node identifier generated by Amazon DataZone to get the node details.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetLineageNodeOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "typeName"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the data lineage node was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the data lineage node.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the data lineage node.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you're getting the data lineage node.</p>"
        },
        "downstreamNodes":{
          "shape":"LineageNodeReferenceList",
          "documentation":"<p>The downsteam nodes of the specified data lineage node.</p>"
        },
        "eventTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of the event described in the data lineage node.</p>"
        },
        "formsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The metadata of the specified data lineage node.</p>"
        },
        "id":{
          "shape":"LineageNodeId",
          "documentation":"<p>The ID of the data lineage node.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the data lineage node.</p>"
        },
        "sourceIdentifier":{
          "shape":"String",
          "documentation":"<p>The source identifier of the data lineage node.</p>"
        },
        "typeName":{
          "shape":"String",
          "documentation":"<p>The name of the type of the specified data lineage node.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision type of the specified data lineage node.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp at which the data lineage node was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user who updated the data lineage node.</p>"
        },
        "upstreamNodes":{
          "shape":"LineageNodeReferenceList",
          "documentation":"<p>The upstream nodes of the specified data lineage node.</p>"
        }
      }
    },
    "GetListingInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ListingId",
          "documentation":"<p>The ID of the listing.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "listingRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the listing.</p>",
          "location":"querystring",
          "locationName":"listingRevision"
        }
      }
    },
    "GetListingOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "listingRevision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the listing was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the listing.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the listing.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain.</p>"
        },
        "id":{
          "shape":"ListingId",
          "documentation":"<p>The ID of the listing.</p>"
        },
        "item":{
          "shape":"ListingItem",
          "documentation":"<p>The details of a listing.</p>"
        },
        "listingRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of a listing.</p>"
        },
        "name":{
          "shape":"ListingName",
          "documentation":"<p>The name of the listing.</p>"
        },
        "status":{
          "shape":"ListingStatus",
          "documentation":"<p>The status of the listing.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the listing was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the listing.</p>"
        }
      }
    },
    "GetMetadataGenerationRunInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain the metadata generation run of which you want to get.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"MetadataGenerationRunIdentifier",
          "documentation":"<p>The identifier of the metadata generation run.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetMetadataGenerationRunOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "owningProjectId"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the metadata generation run was start.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who started the metadata generation run.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain the metadata generation run of which you want to get.</p>"
        },
        "id":{
          "shape":"MetadataGenerationRunIdentifier",
          "documentation":"<p>The ID of the metadata generation run.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns the assets for which you're running metadata generation.</p>"
        },
        "status":{
          "shape":"MetadataGenerationRunStatus",
          "documentation":"<p>The status of the metadata generation run.</p>"
        },
        "target":{
          "shape":"MetadataGenerationRunTarget",
          "documentation":"<p>The asset for which you're generating metadata.</p>"
        },
        "type":{
          "shape":"MetadataGenerationRunType",
          "documentation":"<p>The type of metadata generation run.</p>"
        }
      }
    },
    "GetProjectInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the project exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetProjectOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the project.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the project.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the project exists.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit.</p>"
        },
        "environmentDeploymentDetails":{
          "shape":"EnvironmentDeploymentDetails",
          "documentation":"<p>The environment deployment status of a project.</p>"
        },
        "failureReasons":{
          "shape":"FailureReasons",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The business glossary terms that can be used in the project.</p>"
        },
        "id":{
          "shape":"ProjectId",
          "documentation":"<p>&gt;The ID of the project.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was last updated.</p>"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of the project.</p>"
        },
        "projectProfileId":{
          "shape":"ProjectProfileId",
          "documentation":"<p>The ID of the project profile of a project.</p>"
        },
        "projectStatus":{
          "shape":"ProjectStatus",
          "documentation":"<p>The status of the project.</p>"
        },
        "userParameters":{
          "shape":"EnvironmentConfigurationUserParametersList",
          "documentation":"<p>The user parameters of a project.</p>"
        }
      }
    },
    "GetProjectProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ProjectProfileId",
          "documentation":"<p>The ID of the project profile.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetProjectProfileOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project profile was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the project profile.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the project profile.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain of the project profile.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit of the project profile.</p>"
        },
        "environmentConfigurations":{
          "shape":"EnvironmentConfigurationsList",
          "documentation":"<p>The environment configurations of the project profile.</p>"
        },
        "id":{
          "shape":"ProjectProfileId",
          "documentation":"<p>The ID of the project profile.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when project profile was last updated.</p>"
        },
        "name":{
          "shape":"ProjectProfileName",
          "documentation":"<p>The name of the project profile.</p>"
        },
        "status":{
          "shape":"Status",
          "documentation":"<p>The status of the project profile.</p>"
        }
      }
    },
    "GetRuleInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the <code>GetRule</code> action is to be invoked.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"RuleId",
          "documentation":"<p>The ID of the rule.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the rule.</p>",
          "location":"querystring",
          "locationName":"revision"
        }
      }
    },
    "GetRuleOutput":{
      "type":"structure",
      "required":[
        "action",
        "createdAt",
        "createdBy",
        "detail",
        "identifier",
        "lastUpdatedBy",
        "name",
        "revision",
        "ruleType",
        "scope",
        "target",
        "updatedAt"
      ],
      "members":{
        "action":{
          "shape":"RuleAction",
          "documentation":"<p>The action of the rule.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the rule was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the rule.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the rule.</p>"
        },
        "detail":{
          "shape":"RuleDetail",
          "documentation":"<p>The detail of the rule.</p>"
        },
        "identifier":{
          "shape":"RuleId",
          "documentation":"<p>The ID of the rule.</p>"
        },
        "lastUpdatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The timestamp at which the rule was last updated.</p>"
        },
        "name":{
          "shape":"RuleName",
          "documentation":"<p>The name of the rule.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the rule.</p>"
        },
        "ruleType":{
          "shape":"RuleType",
          "documentation":"<p>The type of the rule.</p>"
        },
        "scope":{
          "shape":"RuleScope",
          "documentation":"<p>The scope of the rule.</p>"
        },
        "target":{
          "shape":"RuleTarget",
          "documentation":"<p>The target of the rule.</p>"
        },
        "targetType":{
          "shape":"RuleTargetType",
          "documentation":"<p>The target type of the rule.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp at which the rule was last updated.</p>"
        }
      }
    },
    "GetSubscriptionGrantInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription grant exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The ID of the subscription grant.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetSubscriptionGrantOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "grantedEntity",
        "id",
        "status",
        "subscriptionTargetId",
        "updatedAt"
      ],
      "members":{
        "assets":{
          "shape":"SubscribedAssets",
          "documentation":"<p>The assets for which the subscription grant is created.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription grant is created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription grant.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription grant exists.</p>"
        },
        "grantedEntity":{
          "shape":"GrantedEntity",
          "documentation":"<p>The entity to which the subscription is granted.</p>"
        },
        "id":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The ID of the subscription grant.</p>"
        },
        "status":{
          "shape":"SubscriptionGrantOverallStatus",
          "documentation":"<p>The status of the subscription grant.</p>"
        },
        "subscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subscription.</p>",
          "deprecated":true,
          "deprecatedMessage":"Multiple subscriptions can exist for a single grant"
        },
        "subscriptionTargetId":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The subscription target ID associated with the subscription grant.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription grant was upated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription grant.</p>"
        }
      }
    },
    "GetSubscriptionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionId",
          "documentation":"<p>The ID of the subscription.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetSubscriptionOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "status",
        "subscribedListing",
        "subscribedPrincipal",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription exists.</p>"
        },
        "id":{
          "shape":"SubscriptionId",
          "documentation":"<p>The ID of the subscription.</p>"
        },
        "retainPermissions":{
          "shape":"Boolean",
          "documentation":"<p>The retain permissions of the subscription.</p>"
        },
        "status":{
          "shape":"SubscriptionStatus",
          "documentation":"<p>The status of the subscription.</p>"
        },
        "subscribedListing":{
          "shape":"SubscribedListing",
          "documentation":"<p>The details of the published asset for which the subscription grant is created.</p>"
        },
        "subscribedPrincipal":{
          "shape":"SubscribedPrincipal",
          "documentation":"<p>The principal that owns the subscription.</p>"
        },
        "subscriptionRequestId":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The ID of the subscription request.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription.</p>"
        }
      }
    },
    "GetSubscriptionRequestDetailsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to get the subscription request details.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request the details of which to get.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetSubscriptionRequestDetailsOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "requestReason",
        "status",
        "subscribedListings",
        "subscribedPrincipals",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the specified subscription request was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription request.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>The decision comment of the subscription request.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The Amazon DataZone domain of the subscription request.</p>"
        },
        "existingSubscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The ID of the existing subscription.</p>"
        },
        "id":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request.</p>"
        },
        "metadataForms":{
          "shape":"MetadataForms",
          "documentation":"<p>The metadata forms included in the subscription request.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the subscription request.</p>"
        },
        "reviewerId":{
          "shape":"String",
          "documentation":"<p>The identifier of the Amazon DataZone user who reviewed the subscription request.</p>"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>The status of the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"GetSubscriptionRequestDetailsOutputSubscribedListingsList",
          "documentation":"<p>The subscribed listings in the subscription request.</p>"
        },
        "subscribedPrincipals":{
          "shape":"GetSubscriptionRequestDetailsOutputSubscribedPrincipalsList",
          "documentation":"<p>The subscribed principals in the subscription request.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription request was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription request.</p>"
        }
      }
    },
    "GetSubscriptionRequestDetailsOutputSubscribedListingsList":{
      "type":"list",
      "member":{"shape":"SubscribedListing"},
      "max":1,
      "min":1
    },
    "GetSubscriptionRequestDetailsOutputSubscribedPrincipalsList":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipal"},
      "max":1,
      "min":1
    },
    "GetSubscriptionTargetInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription target exists.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment associated with the subscription target.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetSubscriptionTargetOutput":{
      "type":"structure",
      "required":[
        "applicableAssetTypes",
        "authorizedPrincipals",
        "createdAt",
        "createdBy",
        "domainId",
        "environmentId",
        "id",
        "name",
        "projectId",
        "provider",
        "subscriptionTargetConfig",
        "type"
      ],
      "members":{
        "applicableAssetTypes":{
          "shape":"ApplicableAssetTypes",
          "documentation":"<p>The asset types associated with the subscription target.</p>"
        },
        "authorizedPrincipals":{
          "shape":"AuthorizedPrincipalIdentifiers",
          "documentation":"<p>The authorized principals of the subscription target.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription target was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription target.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the subscription target exists.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment associated with the subscription target.</p>"
        },
        "id":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The ID of the subscription target.</p>"
        },
        "manageAccessRole":{
          "shape":"IamRoleArn",
          "documentation":"<p>The manage access role with which the subscription target was created.</p>"
        },
        "name":{
          "shape":"SubscriptionTargetName",
          "documentation":"<p>The name of the subscription target.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project associated with the subscription target.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the subscription target.</p>"
        },
        "subscriptionTargetConfig":{
          "shape":"SubscriptionTargetForms",
          "documentation":"<p>The configuration of teh subscription target.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of the subscription target.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription target was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription target.</p>"
        }
      }
    },
    "GetTimeSeriesDataPointInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "formName",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain that houses the asset for which you want to get the data point.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of the asset for which you want to get the data point.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"TimeSeriesEntityType",
          "documentation":"<p>The type of the asset for which you want to get the data point.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series form that houses the data point that you want to get.</p>",
          "location":"querystring",
          "locationName":"formName"
        },
        "identifier":{
          "shape":"TimeSeriesDataPointIdentifier",
          "documentation":"<p>The ID of the data point that you want to get.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "GetTimeSeriesDataPointOutput":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain that houses the asset data point that you want to get.</p>"
        },
        "entityId":{
          "shape":"EntityId",
          "documentation":"<p>The ID of the asset for which you want to get the data point.</p>"
        },
        "entityType":{
          "shape":"TimeSeriesEntityType",
          "documentation":"<p>The type of the asset for which you want to get the data point.</p>"
        },
        "form":{
          "shape":"TimeSeriesDataPointFormOutput",
          "documentation":"<p>The time series form that houses the data point that you want to get.</p>"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series form that houses the data point that you want to get.</p>"
        }
      }
    },
    "GetUserProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "userIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>the ID of the Amazon DataZone domain the data portal of which you want to get.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "type":{
          "shape":"UserProfileType",
          "documentation":"<p>The type of the user profile.</p>",
          "location":"querystring",
          "locationName":"type"
        },
        "userIdentifier":{
          "shape":"UserIdentifier",
          "documentation":"<p>The identifier of the user for which you want to get the user profile.</p>",
          "location":"uri",
          "locationName":"userIdentifier"
        }
      }
    },
    "GetUserProfileOutput":{
      "type":"structure",
      "members":{
        "details":{"shape":"UserProfileDetails"},
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>the identifier of the Amazon DataZone domain of which you want to get the user profile.</p>"
        },
        "id":{
          "shape":"UserProfileId",
          "documentation":"<p>The identifier of the user profile.</p>"
        },
        "status":{
          "shape":"UserProfileStatus",
          "documentation":"<p>The status of the user profile.</p>"
        },
        "type":{
          "shape":"UserProfileType",
          "documentation":"<p>The type of the user profile.</p>"
        }
      }
    },
    "GlobalParameterMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "GlossaryDescription":{
      "type":"string",
      "max":4096,
      "min":0,
      "sensitive":true
    },
    "GlossaryId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "GlossaryItem":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId",
        "status"
      ],
      "members":{
        "additionalAttributes":{
          "shape":"GlossaryItemAdditionalAttributes",
          "documentation":"<p>The additional attributes of an Amazon DataZone glossary.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the glossary was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the glossary.</p>"
        },
        "description":{
          "shape":"GlossaryDescription",
          "documentation":"<p>The business glossary description.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the business glossary exists.</p>"
        },
        "id":{
          "shape":"GlossaryId",
          "documentation":"<p>The identifier of the glossary.</p>"
        },
        "name":{
          "shape":"GlossaryName",
          "documentation":"<p>The name of the glossary.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that owns the business glosary.</p>"
        },
        "status":{
          "shape":"GlossaryStatus",
          "documentation":"<p>The business glossary status.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the business glossary was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the business glossary.</p>"
        },
        "usageRestrictions":{
          "shape":"GlossaryUsageRestrictions",
          "documentation":"<p>The usage restrictions associated with a goverened glossary term.</p>"
        }
      },
      "documentation":"<p>The details of a business glossary.</p>"
    },
    "GlossaryItemAdditionalAttributes":{
      "type":"structure",
      "members":{
        "matchRationale":{
          "shape":"MatchRationale",
          "documentation":"<p>List of rationales indicating why this item was matched by search.</p>"
        }
      },
      "documentation":"<p>The additional attributes of an Amazon DataZone glossary.</p>"
    },
    "GlossaryName":{
      "type":"string",
      "max":256,
      "min":1,
      "sensitive":true
    },
    "GlossaryStatus":{
      "type":"string",
      "enum":[
        "DISABLED",
        "ENABLED"
      ]
    },
    "GlossaryTermId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "GlossaryTermItem":{
      "type":"structure",
      "required":[
        "domainId",
        "glossaryId",
        "id",
        "name",
        "status"
      ],
      "members":{
        "additionalAttributes":{
          "shape":"GlossaryTermItemAdditionalAttributes",
          "documentation":"<p>The additional attributes of an Amazon DataZone glossary term.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when a business glossary term was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the business glossary.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the business glossary exists.</p>"
        },
        "glossaryId":{
          "shape":"GlossaryId",
          "documentation":"<p>The identifier of the business glossary to which the term belongs.</p>"
        },
        "id":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The identifier of the business glossary term.</p>"
        },
        "longDescription":{
          "shape":"LongDescription",
          "documentation":"<p>The long description of the business glossary term.</p>"
        },
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name of the business glossary term.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The short description of the business glossary term.</p>"
        },
        "status":{
          "shape":"GlossaryTermStatus",
          "documentation":"<p>The status of the business glossary term.</p>"
        },
        "termRelations":{
          "shape":"TermRelations",
          "documentation":"<p>The relations of the business glossary term.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when a business glossary term was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the business glossary term.</p>"
        },
        "usageRestrictions":{
          "shape":"GlossaryUsageRestrictions",
          "documentation":"<p>The usage restrictions associated with a goverened glossary term.</p>"
        }
      },
      "documentation":"<p>The details of a business glossary term.</p>"
    },
    "GlossaryTermItemAdditionalAttributes":{
      "type":"structure",
      "members":{
        "matchRationale":{
          "shape":"MatchRationale",
          "documentation":"<p>List of rationales indicating why this item was matched by search.</p>"
        }
      },
      "documentation":"<p>The additional attributes of an Amazon DataZone glossary term.</p>"
    },
    "GlossaryTermName":{
      "type":"string",
      "max":256,
      "min":1,
      "sensitive":true
    },
    "GlossaryTermStatus":{
      "type":"string",
      "enum":[
        "ENABLED",
        "DISABLED"
      ]
    },
    "GlossaryTerms":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":20,
      "min":1
    },
    "GlossaryUsageRestriction":{
      "type":"string",
      "enum":["ASSET_GOVERNED_TERMS"]
    },
    "GlossaryUsageRestrictions":{
      "type":"list",
      "member":{"shape":"GlossaryUsageRestriction"},
      "max":1,
      "min":1
    },
    "GlueConnection":{
      "type":"structure",
      "members":{
        "athenaProperties":{
          "shape":"PropertyMap",
          "documentation":"<p>The Amazon Athena properties of the Amazon Web Services Glue connection.</p>"
        },
        "authenticationConfiguration":{
          "shape":"AuthenticationConfiguration",
          "documentation":"<p>The authentication configuration of the Amazon Web Services Glue connection.</p>"
        },
        "compatibleComputeEnvironments":{
          "shape":"ComputeEnvironmentsList",
          "documentation":"<p>The compatible compute environments of the Amazon Web Services Glue connection.</p>"
        },
        "connectionProperties":{
          "shape":"ConnectionProperties",
          "documentation":"<p>The properties of the Amazon Web Services Glue connection.</p>"
        },
        "connectionSchemaVersion":{
          "shape":"GlueConnectionConnectionSchemaVersionInteger",
          "documentation":"<p>The connection schema version of the Amazon Web Services Glue connection.</p>"
        },
        "connectionType":{
          "shape":"ConnectionType",
          "documentation":"<p>The type of the Amazon Web Services Glue connection.</p>"
        },
        "creationTime":{
          "shape":"Timestamp",
          "documentation":"<p>The creation time of the Amazon Web Services Glue connection.</p>"
        },
        "description":{
          "shape":"GlueConnectionDescriptionString",
          "documentation":"<p>The description of the Amazon Web Services Glue connection.</p>"
        },
        "lastConnectionValidationTime":{
          "shape":"Timestamp",
          "documentation":"<p>The last validation time of the Amazon Web Services Glue connection.</p>"
        },
        "lastUpdatedBy":{
          "shape":"String",
          "documentation":"<p>The user who last updated the Amazon Web Services Glue connection.</p>"
        },
        "lastUpdatedTime":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp at which the Amazon Web Services Glue connection was last updated.</p>"
        },
        "matchCriteria":{
          "shape":"MatchCriteria",
          "documentation":"<p>The match criteria of the Amazon Web Services Glue connection.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the Amazon Web Services Glue connection.</p>"
        },
        "physicalConnectionRequirements":{
          "shape":"PhysicalConnectionRequirements",
          "documentation":"<p>The physical connection requirements of the Amazon Web Services Glue connection.</p>"
        },
        "pythonProperties":{
          "shape":"PropertyMap",
          "documentation":"<p>The Python properties of the Amazon Web Services Glue connection.</p>"
        },
        "sparkProperties":{
          "shape":"PropertyMap",
          "documentation":"<p>The Spark properties of the Amazon Web Services Glue connection.</p>"
        },
        "status":{
          "shape":"ConnectionStatus",
          "documentation":"<p>The status of the Amazon Web Services Glue connection.</p>"
        },
        "statusReason":{
          "shape":"GlueConnectionStatusReasonString",
          "documentation":"<p>The status reason of the Amazon Web Services Glue connection.</p>"
        }
      },
      "documentation":"<p>The Amazon Web Services Glue connection.</p>"
    },
    "GlueConnectionConnectionSchemaVersionInteger":{
      "type":"integer",
      "box":true,
      "max":2,
      "min":1
    },
    "GlueConnectionDescriptionString":{
      "type":"string",
      "max":2048,
      "min":0
    },
    "GlueConnectionInput":{
      "type":"structure",
      "members":{
        "athenaProperties":{
          "shape":"PropertyMap",
          "documentation":"<p>The Amazon Athena properties of the Amazon Web Services Glue connection.</p>"
        },
        "authenticationConfiguration":{
          "shape":"AuthenticationConfigurationInput",
          "documentation":"<p>The authentication configuration of the Amazon Web Services Glue connection.</p>"
        },
        "connectionProperties":{
          "shape":"ConnectionProperties",
          "documentation":"<p>The connection properties of the Amazon Web Services Glue connection.</p>"
        },
        "connectionType":{
          "shape":"GlueConnectionType",
          "documentation":"<p>The connection type of the Amazon Web Services Glue connection.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the Amazon Web Services Glue connection.</p>"
        },
        "matchCriteria":{
          "shape":"GlueConnectionInputMatchCriteriaString",
          "documentation":"<p>The match criteria of the Amazon Web Services Glue connection.</p>"
        },
        "name":{
          "shape":"GlueConnectionInputNameString",
          "documentation":"<p>The name of the Amazon Web Services Glue connection.</p>"
        },
        "physicalConnectionRequirements":{
          "shape":"PhysicalConnectionRequirements",
          "documentation":"<p>The physical connection requirements for the Amazon Web Services Glue connection.</p>"
        },
        "pythonProperties":{
          "shape":"PropertyMap",
          "documentation":"<p>The Python properties of the Amazon Web Services Glue connection.</p>"
        },
        "sparkProperties":{
          "shape":"PropertyMap",
          "documentation":"<p>The Spark properties of the Amazon Web Services Glue connection.</p>"
        },
        "validateCredentials":{
          "shape":"Boolean",
          "documentation":"<p>Speciefies whether to validate credentials of the Amazon Web Services Glue connection.</p>"
        },
        "validateForComputeEnvironments":{
          "shape":"ComputeEnvironmentsList",
          "documentation":"<p>Speciefies whether to validate for compute environments of the Amazon Web Services Glue connection.</p>"
        }
      },
      "documentation":"<p>The Amazon Web Services Glue connecton input.</p>"
    },
    "GlueConnectionInputMatchCriteriaString":{
      "type":"string",
      "max":10,
      "min":0
    },
    "GlueConnectionInputNameString":{
      "type":"string",
      "max":255,
      "min":1
    },
    "GlueConnectionPatch":{
      "type":"structure",
      "members":{
        "authenticationConfiguration":{
          "shape":"AuthenticationConfigurationPatch",
          "documentation":"<p>The authentication configuration of the Amazon Web Services Glue connection patch.</p>"
        },
        "connectionProperties":{
          "shape":"ConnectionProperties",
          "documentation":"<p>The properties of the Amazon Web Services Glue connection patch.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the Amazon Web Services Glue connection patch.</p>"
        }
      },
      "documentation":"<p>The Amazon Web Services Glue connection patch.</p>"
    },
    "GlueConnectionStatusReasonString":{
      "type":"string",
      "max":16384,
      "min":1
    },
    "GlueConnectionType":{
      "type":"string",
      "enum":[
        "SNOWFLAKE",
        "BIGQUERY",
        "DOCUMENTDB",
        "DYNAMODB",
        "MYSQL",
        "OPENSEARCH",
        "ORACLE",
        "POSTGRESQL",
        "REDSHIFT",
        "SAPHANA",
        "SQLSERVER",
        "TERADATA",
        "VERTICA"
      ]
    },
    "GlueOAuth2Credentials":{
      "type":"structure",
      "members":{
        "accessToken":{
          "shape":"GlueOAuth2CredentialsAccessTokenString",
          "documentation":"<p>The access token of a connection.</p>"
        },
        "jwtToken":{
          "shape":"GlueOAuth2CredentialsJwtTokenString",
          "documentation":"<p>The jwt token of the connection.</p>"
        },
        "refreshToken":{
          "shape":"GlueOAuth2CredentialsRefreshTokenString",
          "documentation":"<p>The refresh token of the connection.</p>"
        },
        "userManagedClientApplicationClientSecret":{
          "shape":"GlueOAuth2CredentialsUserManagedClientApplicationClientSecretString",
          "documentation":"<p>The user managed client application client secret of the connection. </p>"
        }
      },
      "documentation":"<p>The GlueOAuth2 credentials of a connection.</p>",
      "sensitive":true
    },
    "GlueOAuth2CredentialsAccessTokenString":{
      "type":"string",
      "max":4096,
      "min":0,
      "pattern":"^[\\x20-\\x7E]*$"
    },
    "GlueOAuth2CredentialsJwtTokenString":{
      "type":"string",
      "max":8000,
      "min":0,
      "pattern":"^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_\\-\\+\\/=]*)$"
    },
    "GlueOAuth2CredentialsRefreshTokenString":{
      "type":"string",
      "max":4096,
      "min":0,
      "pattern":"^[\\x20-\\x7E]*$"
    },
    "GlueOAuth2CredentialsUserManagedClientApplicationClientSecretString":{
      "type":"string",
      "max":512,
      "min":0,
      "pattern":"^[\\x20-\\x7E]*$"
    },
    "GluePropertiesInput":{
      "type":"structure",
      "members":{
        "glueConnectionInput":{
          "shape":"GlueConnectionInput",
          "documentation":"<p>The Amazon Web Services Glue connection.</p>"
        }
      },
      "documentation":"<p>The Amazon Web Services Glue properties of a connection.</p>"
    },
    "GluePropertiesOutput":{
      "type":"structure",
      "members":{
        "errorMessage":{
          "shape":"String",
          "documentation":"<p>The error message generated if the action is not completed successfully.</p>"
        },
        "status":{
          "shape":"ConnectionStatus",
          "documentation":"<p>The status of a connection.</p>"
        }
      },
      "documentation":"<p>The properties of the Amazon Web Services Glue connection.</p>"
    },
    "GluePropertiesPatch":{
      "type":"structure",
      "members":{
        "glueConnectionInput":{
          "shape":"GlueConnectionPatch",
          "documentation":"<p>The Amazon Web Services Glue properties patch of a connection.</p>"
        }
      },
      "documentation":"<p>The Amazon Web Services Glue properties patch of a connection.</p>"
    },
    "GlueRunConfigurationInput":{
      "type":"structure",
      "required":["relationalFilterConfigurations"],
      "members":{
        "autoImportDataQualityResult":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether to automatically import data quality metrics as part of the data source run.</p>"
        },
        "catalogName":{
          "shape":"GlueRunConfigurationInputCatalogNameString",
          "documentation":"<p>The catalog name in the Amazon Web Services Glue run configuration.</p>"
        },
        "dataAccessRole":{
          "shape":"GlueRunConfigurationInputDataAccessRoleString",
          "documentation":"<p>The data access role included in the configuration details of the Amazon Web Services Glue data source.</p>"
        },
        "relationalFilterConfigurations":{
          "shape":"RelationalFilterConfigurations",
          "documentation":"<p>The relational filter configurations included in the configuration details of the Amazon Web Services Glue data source.</p>"
        }
      },
      "documentation":"<p>The configuration details of the Amazon Web Services Glue data source.</p>"
    },
    "GlueRunConfigurationInputCatalogNameString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "GlueRunConfigurationInputDataAccessRoleString":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]{1,128}$"
    },
    "GlueRunConfigurationOutput":{
      "type":"structure",
      "required":["relationalFilterConfigurations"],
      "members":{
        "accountId":{
          "shape":"GlueRunConfigurationOutputAccountIdString",
          "documentation":"<p>The Amazon Web Services account ID included in the configuration details of the Amazon Web Services Glue data source. </p>"
        },
        "autoImportDataQualityResult":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether to automatically import data quality metrics as part of the data source run.</p>"
        },
        "catalogName":{
          "shape":"GlueRunConfigurationOutputCatalogNameString",
          "documentation":"<p>The catalog name in the Amazon Web Services Glue run configuration.</p>"
        },
        "dataAccessRole":{
          "shape":"GlueRunConfigurationOutputDataAccessRoleString",
          "documentation":"<p>The data access role included in the configuration details of the Amazon Web Services Glue data source. </p>"
        },
        "region":{
          "shape":"GlueRunConfigurationOutputRegionString",
          "documentation":"<p>The Amazon Web Services region included in the configuration details of the Amazon Web Services Glue data source. </p>"
        },
        "relationalFilterConfigurations":{
          "shape":"RelationalFilterConfigurations",
          "documentation":"<p>The relational filter configurations included in the configuration details of the Amazon Web Services Glue data source.</p>"
        }
      },
      "documentation":"<p>The configuration details of the Amazon Web Services Glue data source.</p>"
    },
    "GlueRunConfigurationOutputAccountIdString":{
      "type":"string",
      "max":12,
      "min":12,
      "pattern":"^\\d{12}$"
    },
    "GlueRunConfigurationOutputCatalogNameString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "GlueRunConfigurationOutputDataAccessRoleString":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]{1,128}$"
    },
    "GlueRunConfigurationOutputRegionString":{
      "type":"string",
      "max":16,
      "min":4,
      "pattern":"[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]"
    },
    "GlueSelfGrantStatusOutput":{
      "type":"structure",
      "required":["selfGrantStatusDetails"],
      "members":{
        "selfGrantStatusDetails":{
          "shape":"SelfGrantStatusDetails",
          "documentation":"<p>The details for the self granting status for a Glue data source.</p>"
        }
      },
      "documentation":"<p>The details of the self granting status.</p>"
    },
    "GovernanceType":{
      "type":"string",
      "enum":[
        "AWS_MANAGED",
        "USER_MANAGED"
      ]
    },
    "GovernedEntityType":{
      "type":"string",
      "enum":["ASSET"]
    },
    "GrantIdentifier":{
      "type":"string",
      "pattern":"^[A-Za-z0-9+/]{10}$"
    },
    "GrantedEntity":{
      "type":"structure",
      "members":{
        "listing":{
          "shape":"ListingRevision",
          "documentation":"<p>The listing for which a subscription is granted.</p>"
        }
      },
      "documentation":"<p>The details of a listing for which a subscription is granted.</p>",
      "union":true
    },
    "GrantedEntityInput":{
      "type":"structure",
      "members":{
        "listing":{
          "shape":"ListingRevisionInput",
          "documentation":"<p>The listing for which a subscription is to be granted.</p>"
        }
      },
      "documentation":"<p>The details of a listing for which a subscription is to be granted.</p>",
      "union":true
    },
    "GreaterThanExpression":{
      "type":"structure",
      "required":[
        "columnName",
        "value"
      ],
      "members":{
        "columnName":{
          "shape":"String",
          "documentation":"<p>The name of the column.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value that might be greater than an expression.</p>"
        }
      },
      "documentation":"<p>Specifies whether the value is greater than an expression.</p>"
    },
    "GreaterThanOrEqualToExpression":{
      "type":"structure",
      "required":[
        "columnName",
        "value"
      ],
      "members":{
        "columnName":{
          "shape":"String",
          "documentation":"<p>The name of the column.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value that might be greater than or equal to an expression.</p>"
        }
      },
      "documentation":"<p>Specifies whether the value is greater than or equal to an expression.</p>"
    },
    "GroupDetails":{
      "type":"structure",
      "required":["groupId"],
      "members":{
        "groupId":{
          "shape":"String",
          "documentation":"<p>The identifier of the group in Amazon DataZone.</p>"
        }
      },
      "documentation":"<p>The details of a group in Amazon DataZone.</p>"
    },
    "GroupIdentifier":{
      "type":"string",
      "pattern":"(^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$|[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\t\\n\\r  ]+)"
    },
    "GroupPolicyGrantPrincipal":{
      "type":"structure",
      "members":{
        "groupIdentifier":{
          "shape":"GroupIdentifier",
          "documentation":"<p>The ID Of the group of the group principal.</p>"
        }
      },
      "documentation":"<p>The group principal to whom the policy is granted.</p>",
      "union":true
    },
    "GroupProfileId":{
      "type":"string",
      "pattern":"^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$"
    },
    "GroupProfileName":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"^[a-zA-Z_0-9+=,.@-]+$",
      "sensitive":true
    },
    "GroupProfileStatus":{
      "type":"string",
      "enum":[
        "ASSIGNED",
        "NOT_ASSIGNED"
      ]
    },
    "GroupProfileSummaries":{
      "type":"list",
      "member":{"shape":"GroupProfileSummary"}
    },
    "GroupProfileSummary":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain of a group profile.</p>"
        },
        "groupName":{
          "shape":"GroupProfileName",
          "documentation":"<p>The group name of a group profile.</p>"
        },
        "id":{
          "shape":"GroupProfileId",
          "documentation":"<p>The ID of a group profile.</p>"
        },
        "status":{
          "shape":"GroupProfileStatus",
          "documentation":"<p>The status of a group profile.</p>"
        }
      },
      "documentation":"<p>The details of a group profile.</p>"
    },
    "GroupSearchText":{
      "type":"string",
      "max":1024,
      "min":0,
      "sensitive":true
    },
    "GroupSearchType":{
      "type":"string",
      "enum":[
        "SSO_GROUP",
        "DATAZONE_SSO_GROUP"
      ]
    },
    "HyperPodOrchestrator":{
      "type":"string",
      "enum":[
        "EKS",
        "SLURM"
      ]
    },
    "HyperPodPropertiesInput":{
      "type":"structure",
      "required":["clusterName"],
      "members":{
        "clusterName":{
          "shape":"HyperPodPropertiesInputClusterNameString",
          "documentation":"<p>The cluster name the hyper pod properties.</p>"
        }
      },
      "documentation":"<p>The hyper pod properties of a Amazon Web Services Glue properties patch.</p>"
    },
    "HyperPodPropertiesInputClusterNameString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "HyperPodPropertiesOutput":{
      "type":"structure",
      "required":["clusterName"],
      "members":{
        "clusterArn":{
          "shape":"String",
          "documentation":"<p>The cluster ARN of the hyper pod properties.</p>"
        },
        "clusterName":{
          "shape":"String",
          "documentation":"<p>The cluster name the hyper pod properties.</p>"
        },
        "orchestrator":{
          "shape":"HyperPodOrchestrator",
          "documentation":"<p>The orchestrator of the hyper pod properties.</p>"
        }
      },
      "documentation":"<p>The hyper pod properties of a Amazon Web Services Glue properties patch.</p>"
    },
    "IamPropertiesInput":{
      "type":"structure",
      "members":{
        "glueLineageSyncEnabled":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether Amazon Web Services Glue lineage sync is enabled for a connection.</p>"
        }
      },
      "documentation":"<p>The IAM properties of a connection.</p>"
    },
    "IamPropertiesOutput":{
      "type":"structure",
      "members":{
        "environmentId":{
          "shape":"String",
          "documentation":"<p>The environment ID of the connection.</p>"
        },
        "glueLineageSyncEnabled":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether Amazon Web Services Glue lineage sync is enabled for a connection.</p>"
        }
      },
      "documentation":"<p>The IAM properties of a connection.</p>"
    },
    "IamPropertiesPatch":{
      "type":"structure",
      "members":{
        "glueLineageSyncEnabled":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether Amazon Web Services Glue lineage sync is enabled for a connection.</p>"
        }
      },
      "documentation":"<p>The IAM properties patch of a connection.</p>"
    },
    "IamRoleArn":{
      "type":"string",
      "pattern":"^arn:aws(|-cn|-us-gov):iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]*$"
    },
    "IamUserProfileDetails":{
      "type":"structure",
      "members":{
        "arn":{
          "shape":"String",
          "documentation":"<p>The ARN of an IAM user profile in Amazon DataZone.</p>"
        },
        "principalId":{
          "shape":"String",
          "documentation":"<p>Principal ID of the IAM user.</p>"
        }
      },
      "documentation":"<p>The details of an IAM user profile in Amazon DataZone.</p>"
    },
    "Import":{
      "type":"structure",
      "required":[
        "name",
        "revision"
      ],
      "members":{
        "name":{
          "shape":"FormTypeName",
          "documentation":"<p>The name of the import.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the import.</p>"
        }
      },
      "documentation":"<p>The details of the import of the metadata form type.</p>"
    },
    "ImportList":{
      "type":"list",
      "member":{"shape":"Import"},
      "max":10,
      "min":1
    },
    "InExpression":{
      "type":"structure",
      "required":[
        "columnName",
        "values"
      ],
      "members":{
        "columnName":{
          "shape":"String",
          "documentation":"<p>The name of the column.</p>"
        },
        "values":{
          "shape":"StringList",
          "documentation":"<p>The values that might be in the expression.</p>"
        }
      },
      "documentation":"<p>Specifies whether values are in the expression.</p>"
    },
    "Integer":{
      "type":"integer",
      "box":true
    },
    "InternalServerException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The request has failed because of an unknown error, exception or failure.</p>",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true,
      "retryable":{"throttling":false}
    },
    "InventorySearchScope":{
      "type":"string",
      "enum":[
        "ASSET",
        "GLOSSARY",
        "GLOSSARY_TERM",
        "DATA_PRODUCT"
      ]
    },
    "IsNotNullExpression":{
      "type":"structure",
      "required":["columnName"],
      "members":{
        "columnName":{
          "shape":"String",
          "documentation":"<p>The name of the column.</p>"
        }
      },
      "documentation":"<p>Specifies that the expression is not null.</p>"
    },
    "IsNullExpression":{
      "type":"structure",
      "required":["columnName"],
      "members":{
        "columnName":{
          "shape":"String",
          "documentation":"<p>The name of the column.</p>"
        }
      },
      "documentation":"<p>Specifies that the expression is null.</p>"
    },
    "ItemGlossaryTerms":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":2,
      "min":1
    },
    "JobRunDetails":{
      "type":"structure",
      "members":{
        "lineageRunDetails":{
          "shape":"LineageRunDetails",
          "documentation":"<p>The data lineage details of a job run.</p>"
        }
      },
      "documentation":"<p>The details of a job run.</p>",
      "union":true
    },
    "JobRunError":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{
          "shape":"String",
          "documentation":"<p>The job run error message.</p>"
        }
      },
      "documentation":"<p>The job run error.</p>"
    },
    "JobRunMode":{
      "type":"string",
      "enum":[
        "SCHEDULED",
        "ON_DEMAND"
      ]
    },
    "JobRunStatus":{
      "type":"string",
      "enum":[
        "SCHEDULED",
        "IN_PROGRESS",
        "SUCCESS",
        "PARTIALLY_SUCCEEDED",
        "FAILED",
        "ABORTED",
        "TIMED_OUT",
        "CANCELED"
      ]
    },
    "JobRunSummaries":{
      "type":"list",
      "member":{"shape":"JobRunSummary"}
    },
    "JobRunSummary":{
      "type":"structure",
      "members":{
        "createdAt":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp at which job run was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The user who created the job run.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The domain ID of the job run.</p>"
        },
        "endTime":{
          "shape":"Timestamp",
          "documentation":"<p>The end time of a job run.</p>"
        },
        "error":{
          "shape":"JobRunError",
          "documentation":"<p>The error of a job run.</p>"
        },
        "jobId":{
          "shape":"String",
          "documentation":"<p>The job ID of a job run.</p>"
        },
        "jobType":{
          "shape":"JobType",
          "documentation":"<p>The job type of a job run.</p>"
        },
        "runId":{
          "shape":"String",
          "documentation":"<p>The run ID of a job run.</p>"
        },
        "runMode":{
          "shape":"JobRunMode",
          "documentation":"<p>The run mode of a job run.</p>"
        },
        "startTime":{
          "shape":"Timestamp",
          "documentation":"<p>The start time of a job run.</p>"
        },
        "status":{
          "shape":"JobRunStatus",
          "documentation":"<p>The status of a job run.</p>"
        }
      },
      "documentation":"<p>The job run summary.</p>"
    },
    "JobType":{
      "type":"string",
      "enum":["LINEAGE"]
    },
    "KmsKeyArn":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$"
    },
    "LakeFormationConfiguration":{
      "type":"structure",
      "members":{
        "locationRegistrationExcludeS3Locations":{
          "shape":"S3LocationList",
          "documentation":"<p>Specifies certain Amazon S3 locations if you do not want Amazon DataZone to automatically register them in hybrid mode. </p>"
        },
        "locationRegistrationRole":{
          "shape":"RoleArn",
          "documentation":"<p>The role that is used to manage read/write access to the chosen Amazon S3 bucket(s) for Data Lake using Amazon Web Services Lake Formation hybrid access mode.</p>"
        }
      },
      "documentation":"<p>The Lake Formation configuration of the Data Lake blueprint.</p>"
    },
    "LambdaExecutionRoleArn":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]*$"
    },
    "LambdaFunctionArn":{
      "type":"string",
      "pattern":"^arn:(?:aws|aws-cn|aws-us-gov):lambda:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\d{1,}):(\\d{12}):function:[a-zA-Z0-9-_]+(?::[a-zA-Z0-9-_]+)?(?:\\$[\\w-]+)?$"
    },
    "LastName":{
      "type":"string",
      "sensitive":true
    },
    "LessThanExpression":{
      "type":"structure",
      "required":[
        "columnName",
        "value"
      ],
      "members":{
        "columnName":{
          "shape":"String",
          "documentation":"<p>The name of the column.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value that might be less than the expression.</p>"
        }
      },
      "documentation":"<p>Specifies that a value is less than an expression.</p>"
    },
    "LessThanOrEqualToExpression":{
      "type":"structure",
      "required":[
        "columnName",
        "value"
      ],
      "members":{
        "columnName":{
          "shape":"String",
          "documentation":"<p>The name of the column.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value that might be less than or equal to an expression.</p>"
        }
      },
      "documentation":"<p>Specifies that a value is less than or equal to an expression.</p>"
    },
    "LikeExpression":{
      "type":"structure",
      "required":[
        "columnName",
        "value"
      ],
      "members":{
        "columnName":{
          "shape":"String",
          "documentation":"<p>The name of the column.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value that might be like the expression.</p>"
        }
      },
      "documentation":"<p>Specifies that a value is like the expression.</p>"
    },
    "LineageEvent":{
      "type":"blob",
      "max":300000,
      "min":0,
      "sensitive":true
    },
    "LineageEventErrorMessage":{"type":"string"},
    "LineageEventIdentifier":{
      "type":"string",
      "pattern":"^[a-z0-9]{14}$"
    },
    "LineageEventProcessingStatus":{
      "type":"string",
      "enum":[
        "REQUESTED",
        "PROCESSING",
        "SUCCESS",
        "FAILED"
      ]
    },
    "LineageEventSummaries":{
      "type":"list",
      "member":{"shape":"LineageEventSummary"}
    },
    "LineageEventSummary":{
      "type":"structure",
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which data lineage event was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the data lineage event.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The domain ID of the lineage event.</p>"
        },
        "eventSummary":{
          "shape":"EventSummary",
          "documentation":"<p>The summary of the data lineate event.</p>"
        },
        "eventTime":{
          "shape":"Timestamp",
          "documentation":"<p>The time of the data lineage event.</p>"
        },
        "id":{
          "shape":"LineageEventIdentifier",
          "documentation":"<p>The ID of the data lineage event.</p>"
        },
        "processingStatus":{
          "shape":"LineageEventProcessingStatus",
          "documentation":"<p>The processing status of the data lineage event.</p>"
        }
      },
      "documentation":"<p>The data lineage event summary.</p>"
    },
    "LineageImportStatus":{
      "type":"string",
      "enum":[
        "IN_PROGRESS",
        "SUCCESS",
        "FAILED",
        "PARTIALLY_SUCCEEDED"
      ]
    },
    "LineageInfo":{
      "type":"structure",
      "members":{
        "errorMessage":{
          "shape":"LineageEventErrorMessage",
          "documentation":"<p>The data lineage error message.</p>"
        },
        "eventId":{
          "shape":"String",
          "documentation":"<p>The data lineage event ID.</p>"
        },
        "eventStatus":{
          "shape":"LineageEventProcessingStatus",
          "documentation":"<p>The data lineage event status.</p>"
        }
      },
      "documentation":"<p>The data lineage information.</p>"
    },
    "LineageNodeId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "LineageNodeIdentifier":{
      "type":"string",
      "max":2086,
      "min":1
    },
    "LineageNodeReference":{
      "type":"structure",
      "members":{
        "eventTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The event timestamp of the data lineage node.</p>"
        },
        "id":{
          "shape":"LineageNodeId",
          "documentation":"<p>The ID of the data lineage node.</p>"
        }
      },
      "documentation":"<p>The reference details for the data lineage node.</p>"
    },
    "LineageNodeReferenceList":{
      "type":"list",
      "member":{"shape":"LineageNodeReference"},
      "max":100,
      "min":0
    },
    "LineageNodeSummaries":{
      "type":"list",
      "member":{"shape":"LineageNodeSummary"}
    },
    "LineageNodeSummary":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "typeName"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the data lineage node was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the data lineage node.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the data lineage node.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain of the data lineage node.</p>"
        },
        "eventTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The event timestamp of the data lineage node.</p>"
        },
        "id":{
          "shape":"LineageNodeId",
          "documentation":"<p>The ID of the data lineage node.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the data lineage node.</p>"
        },
        "sourceIdentifier":{
          "shape":"String",
          "documentation":"<p>The alternate ID of the data lineage node.</p>"
        },
        "typeName":{
          "shape":"String",
          "documentation":"<p>The name of the type of the data lineage node.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The type of the revision of the data lineage node.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp at which the data lineage node was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user who updated the data lineage node.</p>"
        }
      },
      "documentation":"<p>The summary of the data lineage node.</p>"
    },
    "LineageNodeTypeItem":{
      "type":"structure",
      "required":[
        "domainId",
        "formsOutput",
        "revision"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the data lineage node type was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the data lineage node type.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the data lineage node type.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the data lineage node type lives.</p>"
        },
        "formsOutput":{
          "shape":"FormsOutputMap",
          "documentation":"<p>The forms output of the data lineage node type.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the data lineage node type.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the data lineage node type.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp at which the data lineage node type was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user who updated the data lineage node type.</p>"
        }
      },
      "documentation":"<p>The details of a data lineage node type.</p>"
    },
    "LineageRunDetails":{
      "type":"structure",
      "members":{
        "sqlQueryRunDetails":{
          "shape":"LineageSqlQueryRunDetails",
          "documentation":"<p>The SQL query run details of a data lineage run.</p>"
        }
      },
      "documentation":"<p>The data lineage run details.</p>"
    },
    "LineageSqlQueryRunDetails":{
      "type":"structure",
      "members":{
        "errorMessages":{
          "shape":"FailedQueryProcessingErrorMessages",
          "documentation":"<p>The error message of the SQL query run details of a data lineage run.</p>"
        },
        "numQueriesFailed":{
          "shape":"Integer",
          "documentation":"<p>The number of queries that failed in the SQL query run details of a data lineage run.</p>"
        },
        "queryEndTime":{
          "shape":"Timestamp",
          "documentation":"<p>The query end time in the SQL query run details of a data lineage run.</p>"
        },
        "queryStartTime":{
          "shape":"Timestamp",
          "documentation":"<p>The query start time in the SQL query run details of a data lineage run.</p>"
        },
        "totalQueriesProcessed":{
          "shape":"Integer",
          "documentation":"<p>The total queries processed in the SQL query run details of a data lineage run.</p>"
        }
      },
      "documentation":"<p>The SQL query run details of a data lineage run.</p>"
    },
    "LineageSyncSchedule":{
      "type":"structure",
      "members":{
        "schedule":{
          "shape":"LineageSyncScheduleScheduleString",
          "documentation":"<p>The lineage sync schedule.</p>"
        }
      },
      "documentation":"<p>The lineage sync schedule.</p>"
    },
    "LineageSyncScheduleScheduleString":{
      "type":"string",
      "pattern":"^cron\\((\\b[0-5]?[0-9]\\b) (\\b2[0-3]\\b|\\b[0-1]?[0-9]\\b) ([-?*,/\\dLW]){1,83} ([-*,/\\d]|[a-zA-Z]{3}){1,23} ([-?#*,/\\dL]|[a-zA-Z]{3}){1,13} ([^\\)]+)\\)$"
    },
    "ListAccountPoolsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where exsting account pools are to be listed.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of account pools to return in a single call to ListAccountPools. When the number of account pools to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListAccountPools to list the next set of account pools.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"AccountPoolName",
          "documentation":"<p>The name of the account pool to be listed.</p>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of account pools is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of account pools, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListAccountPools to list the next set of account pools.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "sortBy":{
          "shape":"SortFieldAccountPool",
          "documentation":"<p>The sort by mechanism in which the existing account pools are to be listed.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>The sort order in which the existing account pools are to be listed.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        }
      }
    },
    "ListAccountPoolsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"AccountPoolSummaries",
          "documentation":"<p>The results of the ListAccountPools operation.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of account pools is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of account pools, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListAccountPools to list the next set of account pools.</p>"
        }
      }
    },
    "ListAccountsInAccountPoolInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which the accounts in the specified account pool are to be listed.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AccountPoolId",
          "documentation":"<p>The ID of the account pool whose accounts are to be listed.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of accounts to return in a single call to ListAccountsInAccountPool. When the number of accounts to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListAccountsInAccountPool to list the next set of accounts.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of accounts is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of accounts, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListAccountsInAccountPool to list the next set of accounts.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListAccountsInAccountPoolOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"AccountInfoList",
          "documentation":"<p>The results of the ListAccountsInAccountPool operation.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of accounts is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of accounts, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListAccountsInAccountPool to list the next set of accounts.</p>"
        }
      }
    },
    "ListAssetFiltersInput":{
      "type":"structure",
      "required":[
        "assetIdentifier",
        "domainIdentifier"
      ],
      "members":{
        "assetIdentifier":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the data asset.</p>",
          "location":"uri",
          "locationName":"assetIdentifier"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to list asset filters.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of asset filters to return in a single call to <code>ListAssetFilters</code>. When the number of asset filters to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListAssetFilters</code> to list the next set of asset filters.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of asset filters is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of asset filters, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListAssetFilters</code> to list the next set of asset filters.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "status":{
          "shape":"FilterStatus",
          "documentation":"<p>The status of the asset filter.</p>",
          "location":"querystring",
          "locationName":"status"
        }
      }
    },
    "ListAssetFiltersOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"AssetFilters",
          "documentation":"<p>The results of the <code>ListAssetFilters</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of asset filters is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of asset filters, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListAssetFilters</code> to list the next set of asset filters.</p>"
        }
      }
    },
    "ListAssetRevisionsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>The identifier of the asset.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of revisions to return in a single call to <code>ListAssetRevisions</code>. When the number of revisions to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListAssetRevisions</code> to list the next set of revisions.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of revisions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of revisions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListAssetRevisions</code> to list the next set of revisions.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListAssetRevisionsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"AssetRevisions",
          "documentation":"<p>The results of the <code>ListAssetRevisions</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of revisions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of revisions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListAssetRevisions</code> to list the next set of revisions.</p>"
        }
      }
    },
    "ListConnectionsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "projectIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to list connections.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment where you want to list connections.</p>",
          "location":"querystring",
          "locationName":"environmentIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of connections to return in a single call to ListConnections. When the number of connections to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListConnections to list the next set of connections.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"ConnectionName",
          "documentation":"<p>The name of the connection.</p>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of connections is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of connections, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListConnections to list the next set of connections.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project where you want to list connections.</p>",
          "location":"querystring",
          "locationName":"projectIdentifier"
        },
        "sortBy":{
          "shape":"SortFieldConnection",
          "documentation":"<p>Specifies how you want to sort the listed connections.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>Specifies the sort order for the listed connections.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        },
        "type":{
          "shape":"ConnectionType",
          "documentation":"<p>The type of connection.</p>",
          "location":"querystring",
          "locationName":"type"
        }
      }
    },
    "ListConnectionsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"ConnectionSummaries",
          "documentation":"<p>The results of the ListConnections action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of connections is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of connections, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListConnections to list the next set of connections.</p>"
        }
      }
    },
    "ListDataProductRevisionsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain of the data product revisions that you want to list.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DataProductId",
          "documentation":"<p>The ID of the data product revision.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of asset filters to return in a single call to <code>ListDataProductRevisions</code>. When the number of data product revisions to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListDataProductRevisions</code> to list the next set of data product revisions.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of data product revisions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of data product revisions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataProductRevisions</code> to list the next set of data product revisions.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListDataProductRevisionsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"DataProductRevisions",
          "documentation":"<p>The results of the <code>ListDataProductRevisions</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of data product revisions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of data product revisions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataProductRevisions</code> to list the next set of data product revisions.</p>"
        }
      }
    },
    "ListDataSourceRunActivitiesInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to list data source run activities.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DataSourceRunId",
          "documentation":"<p>The identifier of the data source run.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of activities to return in a single call to <code>ListDataSourceRunActivities</code>. When the number of activities to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListDataSourceRunActivities</code> to list the next set of activities.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of activities is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of activities, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSourceRunActivities</code> to list the next set of activities.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "status":{
          "shape":"DataAssetActivityStatus",
          "documentation":"<p>The status of the data source run.</p>",
          "location":"querystring",
          "locationName":"status"
        }
      }
    },
    "ListDataSourceRunActivitiesOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"DataSourceRunActivities",
          "documentation":"<p>The results of the <code>ListDataSourceRunActivities</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of activities is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of activities, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSourceRunActivities</code> to list the next set of activities.</p>"
        }
      }
    },
    "ListDataSourceRunsInput":{
      "type":"structure",
      "required":[
        "dataSourceIdentifier",
        "domainIdentifier"
      ],
      "members":{
        "dataSourceIdentifier":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source.</p>",
          "location":"uri",
          "locationName":"dataSourceIdentifier"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to invoke the <code>ListDataSourceRuns</code> action.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of runs to return in a single call to <code>ListDataSourceRuns</code>. When the number of runs to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListDataSourceRuns</code> to list the next set of runs.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of runs is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of runs, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSourceRuns</code> to list the next set of runs.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "status":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the data source.</p>",
          "location":"querystring",
          "locationName":"status"
        }
      }
    },
    "ListDataSourceRunsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"DataSourceRunSummaries",
          "documentation":"<p>The results of the <code>ListDataSourceRuns</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of runs is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of runs, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSourceRuns</code> to list the next set of runs.</p>"
        }
      }
    },
    "ListDataSourcesInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "projectIdentifier"
      ],
      "members":{
        "connectionIdentifier":{
          "shape":"String",
          "documentation":"<p>The ID of the connection.</p>",
          "location":"querystring",
          "locationName":"connectionIdentifier"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to list the data sources.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"String",
          "documentation":"<p>The identifier of the environment in which to list the data sources.</p>",
          "location":"querystring",
          "locationName":"environmentIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of data sources to return in a single call to <code>ListDataSources</code>. When the number of data sources to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListDataSources</code> to list the next set of data sources.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name of the data source.</p>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of data sources is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of data sources, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSources</code> to list the next set of data sources.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "projectIdentifier":{
          "shape":"String",
          "documentation":"<p>The identifier of the project in which to list data sources.</p>",
          "location":"querystring",
          "locationName":"projectIdentifier"
        },
        "status":{
          "shape":"DataSourceStatus",
          "documentation":"<p>The status of the data source.</p>",
          "location":"querystring",
          "locationName":"status"
        },
        "type":{
          "shape":"DataSourceType",
          "documentation":"<p>The type of the data source.</p>",
          "location":"querystring",
          "locationName":"type"
        }
      }
    },
    "ListDataSourcesOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"DataSourceSummaries",
          "documentation":"<p>The results of the <code>ListDataSources</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of data sources is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of data sources, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDataSources</code> to list the next set of data sources.</p>"
        }
      }
    },
    "ListDomainUnitsForParentInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "parentDomainUnitIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which you want to list domain units for a parent domain unit.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResultsForListDomains",
          "documentation":"<p>The maximum number of domain units to return in a single call to ListDomainUnitsForParent. When the number of domain units to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListDomainUnitsForParent to list the next set of domain units.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of domain units is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of domain units, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListDomainUnitsForParent to list the next set of domain units.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "parentDomainUnitIdentifier":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the parent domain unit.</p>",
          "location":"querystring",
          "locationName":"parentDomainUnitIdentifier"
        }
      }
    },
    "ListDomainUnitsForParentOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"DomainUnitSummaries",
          "documentation":"<p>The results returned by this action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of domain units is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of domain units, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListDomainUnitsForParent to list the next set of domain units.</p>"
        }
      }
    },
    "ListDomainsInput":{
      "type":"structure",
      "members":{
        "maxResults":{
          "shape":"MaxResultsForListDomains",
          "documentation":"<p>The maximum number of domains to return in a single call to <code>ListDomains</code>. When the number of domains to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListDomains</code> to list the next set of domains.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of domains is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of domains, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDomains</code> to list the next set of domains.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "status":{
          "shape":"DomainStatus",
          "documentation":"<p>The status of the data source.</p>",
          "location":"querystring",
          "locationName":"status"
        }
      }
    },
    "ListDomainsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"DomainSummaries",
          "documentation":"<p>The results of the <code>ListDomains</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of domains is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of domains, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListDomains</code> to list the next set of domains.</p>"
        }
      }
    },
    "ListEntityOwnersInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to list entity owners.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"String",
          "documentation":"<p>The ID of the entity that you want to list.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"DataZoneEntityType",
          "documentation":"<p>The type of the entity that you want to list.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "maxResults":{
          "shape":"MaxResultsForListDomains",
          "documentation":"<p>The maximum number of entities to return in a single call to <code>ListEntityOwners</code>. When the number of entities to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListEntityOwners</code> to list the next set of entities.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of entities is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of entities, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEntityOwners</code> to list the next set of entities.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListEntityOwnersOutput":{
      "type":"structure",
      "required":["owners"],
      "members":{
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of entities is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of entities, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEntityOwners</code> to list the next set of entities.</p>"
        },
        "owners":{
          "shape":"EntityOwners",
          "documentation":"<p>The owners of the entity.</p>"
        }
      }
    },
    "ListEnvironmentActionSummaries":{
      "type":"list",
      "member":{"shape":"EnvironmentActionSummary"}
    },
    "ListEnvironmentActionsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the environment actions are listed.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the envrironment whose environment actions are listed.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of environment actions to return in a single call to <code>ListEnvironmentActions</code>. When the number of environment actions to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListEnvironmentActions</code> to list the next set of environment actions.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of environment actions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of environment actions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentActions</code> to list the next set of environment actions.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListEnvironmentActionsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"ListEnvironmentActionSummaries",
          "documentation":"<p>The results of <code>ListEnvironmentActions</code>.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of environment actions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of environment actions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentActions</code> to list the next set of environment actions.</p>"
        }
      }
    },
    "ListEnvironmentBlueprintConfigurationsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of blueprint configurations to return in a single call to <code>ListEnvironmentBlueprintConfigurations</code>. When the number of configurations to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListEnvironmentBlueprintConfigurations</code> to list the next set of configurations.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of blueprint configurations is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of configurations, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentBlueprintConfigurations</code> to list the next set of configurations.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListEnvironmentBlueprintConfigurationsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"EnvironmentBlueprintConfigurations",
          "documentation":"<p>The results of the <code>ListEnvironmentBlueprintConfigurations</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of blueprint configurations is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of configurations, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentBlueprintConfigurations</code> to list the next set of configurations.</p>"
        }
      }
    },
    "ListEnvironmentBlueprintsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "managed":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the environment blueprint is managed by Amazon DataZone.</p>",
          "location":"querystring",
          "locationName":"managed"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of blueprints to return in a single call to <code>ListEnvironmentBlueprints</code>. When the number of blueprints to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListEnvironmentBlueprints</code> to list the next set of blueprints.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"EnvironmentBlueprintName",
          "documentation":"<p>The name of the Amazon DataZone environment.</p>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of blueprints in the environment is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of blueprints in the environment, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentBlueprints</code>to list the next set of blueprints.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "ListEnvironmentBlueprintsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"EnvironmentBlueprintSummaries",
          "documentation":"<p>The results of the <code>ListEnvironmentBlueprints</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of blueprints in the environment is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of blueprints in the environment, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentBlueprints</code>to list the next set of blueprints.</p>"
        }
      }
    },
    "ListEnvironmentProfilesInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The identifier of the Amazon Web Services account where you want to list environment profiles.</p>",
          "location":"querystring",
          "locationName":"awsAccountId"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region where you want to list environment profiles.</p>",
          "location":"querystring",
          "locationName":"awsAccountRegion"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentBlueprintIdentifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the blueprint that was used to create the environment profiles that you want to list.</p>",
          "location":"querystring",
          "locationName":"environmentBlueprintIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of environment profiles to return in a single call to <code>ListEnvironmentProfiles</code>. When the number of environment profiles to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListEnvironmentProfiles</code> to list the next set of environment profiles.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p/>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of environment profiles is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of environment profiles, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentProfiles</code> to list the next set of environment profiles.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project.</p>",
          "location":"querystring",
          "locationName":"projectIdentifier"
        }
      }
    },
    "ListEnvironmentProfilesOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"EnvironmentProfileSummaries",
          "documentation":"<p>The results of the <code>ListEnvironmentProfiles</code> action. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of environment profiles is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of environment profiles, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironmentProfiles</code> to list the next set of environment profiles.</p>"
        }
      }
    },
    "ListEnvironmentsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "projectIdentifier"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The identifier of the Amazon Web Services account where you want to list environments.</p>",
          "location":"querystring",
          "locationName":"awsAccountId"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services region where you want to list environments.</p>",
          "location":"querystring",
          "locationName":"awsAccountRegion"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentBlueprintIdentifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the Amazon DataZone blueprint.</p>",
          "location":"querystring",
          "locationName":"environmentBlueprintIdentifier"
        },
        "environmentProfileIdentifier":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The identifier of the environment profile.</p>",
          "location":"querystring",
          "locationName":"environmentProfileIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of environments to return in a single call to <code>ListEnvironments</code>. When the number of environments to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListEnvironments</code> to list the next set of environments.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the environment.</p>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of environments is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of environments, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironments</code> to list the next set of environments.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the Amazon DataZone project.</p>",
          "location":"querystring",
          "locationName":"projectIdentifier"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the environment.</p>",
          "location":"querystring",
          "locationName":"provider"
        },
        "status":{
          "shape":"EnvironmentStatus",
          "documentation":"<p>The status of the environments that you want to list.</p>",
          "location":"querystring",
          "locationName":"status"
        }
      }
    },
    "ListEnvironmentsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"EnvironmentSummaries",
          "documentation":"<p>The results of the <code>ListEnvironments</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of environments is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of environments, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListEnvironments</code> to list the next set of environments.</p>"
        }
      }
    },
    "ListJobRunsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "jobIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to list job runs.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "jobIdentifier":{
          "shape":"ListJobRunsInputJobIdentifierString",
          "documentation":"<p>The ID of the job run.</p>",
          "location":"uri",
          "locationName":"jobIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of job runs to return in a single call to ListJobRuns. When the number of job runs to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListJobRuns to list the next set of job runs.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of job runs is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of job runs, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListJobRuns to list the next set of job runs.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>Specifies the order in which job runs are to be sorted.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        },
        "status":{
          "shape":"JobRunStatus",
          "documentation":"<p>The status of a job run.</p>",
          "location":"querystring",
          "locationName":"status"
        }
      }
    },
    "ListJobRunsInputJobIdentifierString":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "ListJobRunsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"JobRunSummaries",
          "documentation":"<p>The results of the ListJobRuns action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of job runs is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of job runs, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListJobRuns to list the next set of job runs.</p>"
        }
      }
    },
    "ListLineageEventsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to list lineage events.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of lineage events to return in a single call to ListLineageEvents. When the number of lineage events to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListLineageEvents to list the next set of lineage events.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of lineage events is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of lineage events, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListLineageEvents to list the next set of lineage events.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "processingStatus":{
          "shape":"LineageEventProcessingStatus",
          "documentation":"<p>The processing status of a lineage event.</p>",
          "location":"querystring",
          "locationName":"processingStatus"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>The sort order of the lineage events.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        },
        "timestampAfter":{
          "shape":"Timestamp",
          "documentation":"<p>The after timestamp of a lineage event.</p>",
          "location":"querystring",
          "locationName":"timestampAfter"
        },
        "timestampBefore":{
          "shape":"Timestamp",
          "documentation":"<p>The before timestamp of a lineage event.</p>",
          "location":"querystring",
          "locationName":"timestampBefore"
        }
      }
    },
    "ListLineageEventsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"LineageEventSummaries",
          "documentation":"<p>The results of the ListLineageEvents action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of lineage events is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of lineage events, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListLineageEvents to list the next set of lineage events.</p>"
        }
      }
    },
    "ListLineageNodeHistoryInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "direction":{
          "shape":"EdgeDirection",
          "documentation":"<p>The direction of the data lineage node refers to the lineage node having neighbors in that direction. For example, if direction is <code>UPSTREAM</code>, the <code>ListLineageNodeHistory</code> API responds with historical versions with upstream neighbors only.</p>",
          "location":"querystring",
          "locationName":"direction"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to list the history of the specified data lineage node.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "eventTimestampGTE":{
          "shape":"Timestamp",
          "documentation":"<p>Specifies whether the action is to return data lineage node history from the time after the event timestamp.</p>",
          "location":"querystring",
          "locationName":"timestampGTE"
        },
        "eventTimestampLTE":{
          "shape":"Timestamp",
          "documentation":"<p>Specifies whether the action is to return data lineage node history from the time prior of the event timestamp.</p>",
          "location":"querystring",
          "locationName":"timestampLTE"
        },
        "identifier":{
          "shape":"LineageNodeIdentifier",
          "documentation":"<p>The ID of the data lineage node whose history you want to list.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of history items to return in a single call to ListLineageNodeHistory. When the number of memberships to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListLineageNodeHistory to list the next set of items.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of history items is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of items, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListLineageNodeHistory to list the next set of items.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>The order by which you want data lineage node history to be sorted.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        }
      }
    },
    "ListLineageNodeHistoryOutput":{
      "type":"structure",
      "members":{
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of history items is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of items, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListLineageNodeHistory to list the next set of items.</p>"
        },
        "nodes":{
          "shape":"LineageNodeSummaries",
          "documentation":"<p>The nodes returned by the ListLineageNodeHistory action.</p>"
        }
      }
    },
    "ListMetadataGenerationRunsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where you want to list metadata generation runs.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of metadata generation runs to return in a single call to ListMetadataGenerationRuns. When the number of metadata generation runs to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListMetadataGenerationRuns to list the next set of revisions.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of metadata generation runs is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of metadata generation runs, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListMetadataGenerationRuns to list the next set of revisions.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "status":{
          "shape":"MetadataGenerationRunStatus",
          "documentation":"<p>The status of the metadata generation runs.</p>",
          "location":"querystring",
          "locationName":"status"
        },
        "type":{
          "shape":"MetadataGenerationRunType",
          "documentation":"<p>The type of the metadata generation runs.</p>",
          "location":"querystring",
          "locationName":"type"
        }
      }
    },
    "ListMetadataGenerationRunsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"MetadataGenerationRuns",
          "documentation":"<p>The results of the ListMetadataGenerationRuns action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of metadata generation runs is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of metadata generation runs, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListMetadataGenerationRuns to list the next set of revisions.</p>"
        }
      }
    },
    "ListNotificationsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "type"
      ],
      "members":{
        "afterTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The time after which you want to list notifications.</p>",
          "location":"querystring",
          "locationName":"afterTimestamp"
        },
        "beforeTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The time before which you want to list notifications.</p>",
          "location":"querystring",
          "locationName":"beforeTimestamp"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of notifications to return in a single call to <code>ListNotifications</code>. When the number of notifications to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListNotifications</code> to list the next set of notifications.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of notifications is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of notifications, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListNotifications</code> to list the next set of notifications.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "subjects":{
          "shape":"NotificationSubjects",
          "documentation":"<p>The subjects of notifications.</p>",
          "location":"querystring",
          "locationName":"subjects"
        },
        "taskStatus":{
          "shape":"TaskStatus",
          "documentation":"<p>The task status of notifications.</p>",
          "location":"querystring",
          "locationName":"taskStatus"
        },
        "type":{
          "shape":"NotificationType",
          "documentation":"<p>The type of notifications.</p>",
          "location":"querystring",
          "locationName":"type"
        }
      }
    },
    "ListNotificationsOutput":{
      "type":"structure",
      "members":{
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of notifications is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of notifications, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListNotifications</code> to list the next set of notifications.</p>"
        },
        "notifications":{
          "shape":"NotificationsList",
          "documentation":"<p>The results of the <code>ListNotifications</code> action.</p>"
        }
      }
    },
    "ListPolicyGrantsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "policyType"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to list policy grants.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"String",
          "documentation":"<p>The ID of the entity for which you want to list policy grants.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"TargetEntityType",
          "documentation":"<p>The type of entity for which you want to list policy grants.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "maxResults":{
          "shape":"MaxResultsForListDomains",
          "documentation":"<p>The maximum number of grants to return in a single call to <code>ListPolicyGrants</code>. When the number of grants to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListPolicyGrants</code> to list the next set of grants.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of grants is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of grants, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListPolicyGrants</code> to list the next set of grants.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "policyType":{
          "shape":"ManagedPolicyType",
          "documentation":"<p>The type of policy that you want to list.</p>",
          "location":"querystring",
          "locationName":"policyType"
        }
      }
    },
    "ListPolicyGrantsOutput":{
      "type":"structure",
      "required":["grantList"],
      "members":{
        "grantList":{
          "shape":"PolicyGrantList",
          "documentation":"<p>The results of this action - the listed grants.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of grants is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of grants, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListPolicyGrants</code> to list the next set of grants.</p>"
        }
      }
    },
    "ListProjectMembershipsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "projectIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which you want to list project memberships.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of memberships to return in a single call to <code>ListProjectMemberships</code>. When the number of memberships to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListProjectMemberships</code> to list the next set of memberships.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of memberships is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of memberships, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListProjectMemberships</code> to list the next set of memberships.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project whose memberships you want to list.</p>",
          "location":"uri",
          "locationName":"projectIdentifier"
        },
        "sortBy":{
          "shape":"SortFieldProject",
          "documentation":"<p>The method by which you want to sort the project memberships.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>The sort order of the project memberships.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        }
      }
    },
    "ListProjectMembershipsOutput":{
      "type":"structure",
      "required":["members"],
      "members":{
        "members":{
          "shape":"ProjectMembers",
          "documentation":"<p>The members of the project.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of memberships is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of memberships, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListProjectMemberships</code> to list the next set of memberships.</p>"
        }
      }
    },
    "ListProjectProfilesInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to list project profiles.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of project profiles to return in a single call to ListProjectProfiles. When the number of project profiles to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListProjectProfiles to list the next set of project profiles.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"ProjectProfileName",
          "documentation":"<p>The name of a project profile.</p>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of project profiles is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of project profiles, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListProjectProfiles to list the next set of project profiles.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "sortBy":{
          "shape":"SortFieldProject",
          "documentation":"<p>Specifies by what to sort project profiles.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>Specifies the sort order of the project profiles.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        }
      }
    },
    "ListProjectProfilesOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"ProjectProfileSummaries",
          "documentation":"<p>The results of the ListProjectProfiles action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of project profiles is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of project profiles, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListProjectProfiles to list the next set of project profiles.</p>"
        }
      }
    },
    "ListProjectsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "groupIdentifier":{
          "shape":"String",
          "documentation":"<p>The identifier of a group.</p>",
          "location":"querystring",
          "locationName":"groupIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of projects to return in a single call to <code>ListProjects</code>. When the number of projects to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListProjects</code> to list the next set of projects.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of the project.</p>",
          "location":"querystring",
          "locationName":"name"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of projects is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of projects, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListProjects</code> to list the next set of projects.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "userIdentifier":{
          "shape":"String",
          "documentation":"<p>The identifier of the Amazon DataZone user.</p>",
          "location":"querystring",
          "locationName":"userIdentifier"
        }
      }
    },
    "ListProjectsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"ProjectSummaries",
          "documentation":"<p>The results of the <code>ListProjects</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of projects is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of projects, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListProjects</code> to list the next set of projects.</p>"
        }
      }
    },
    "ListRulesInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "targetIdentifier",
        "targetType"
      ],
      "members":{
        "action":{
          "shape":"RuleAction",
          "documentation":"<p>The action of the rule.</p>",
          "location":"querystring",
          "locationName":"ruleAction"
        },
        "assetTypes":{
          "shape":"AssetTypeIdentifiers",
          "documentation":"<p>The asset types of the rule.</p>",
          "location":"querystring",
          "locationName":"assetTypes"
        },
        "dataProduct":{
          "shape":"Boolean",
          "documentation":"<p>The data product of the rule.</p>",
          "location":"querystring",
          "locationName":"dataProduct"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which the rules are to be listed.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "includeCascaded":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether to include cascading rules in the results.</p>",
          "location":"querystring",
          "locationName":"includeCascaded"
        },
        "maxResults":{
          "shape":"ListRulesInputMaxResultsInteger",
          "documentation":"<p>The maximum number of rules to return in a single call to <code>ListRules</code>. When the number of rules to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListRules</code> to list the next set of rules.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of rules is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of rules, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListRules</code> to list the next set of rules.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "projectIds":{
          "shape":"ProjectIds",
          "documentation":"<p>The IDs of projects in which rules are to be listed.</p>",
          "location":"querystring",
          "locationName":"projectIds"
        },
        "ruleType":{
          "shape":"RuleType",
          "documentation":"<p>The type of the rule.</p>",
          "location":"querystring",
          "locationName":"ruleType"
        },
        "targetIdentifier":{
          "shape":"String",
          "documentation":"<p>The target ID of the rule.</p>",
          "location":"uri",
          "locationName":"targetIdentifier"
        },
        "targetType":{
          "shape":"RuleTargetType",
          "documentation":"<p>The target type of the rule.</p>",
          "location":"uri",
          "locationName":"targetType"
        }
      }
    },
    "ListRulesInputMaxResultsInteger":{
      "type":"integer",
      "box":true,
      "max":50,
      "min":25
    },
    "ListRulesOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"RuleSummaries",
          "documentation":"<p>The results of the <code>ListRules</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of rules is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of rules, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListRules</code> to list the next set of rules.</p>"
        }
      }
    },
    "ListSubscriptionGrantsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the Amazon DataZone environment.</p>",
          "location":"querystring",
          "locationName":"environmentId"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of subscription grants to return in a single call to <code>ListSubscriptionGrants</code>. When the number of subscription grants to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListSubscriptionGrants</code> to list the next set of subscription grants.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscription grants is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscription grants, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptionGrants</code> to list the next set of subscription grants.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the owning project of the subscription grants.</p>",
          "location":"querystring",
          "locationName":"owningProjectId"
        },
        "sortBy":{
          "shape":"SortKey",
          "documentation":"<p>Specifies the way of sorting the results of this action.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>Specifies the sort order of this action.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        },
        "subscribedListingId":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of the subscribed listing.</p>",
          "location":"querystring",
          "locationName":"subscribedListingId"
        },
        "subscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subscription.</p>",
          "location":"querystring",
          "locationName":"subscriptionId"
        },
        "subscriptionTargetId":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The identifier of the subscription target.</p>",
          "location":"querystring",
          "locationName":"subscriptionTargetId"
        }
      }
    },
    "ListSubscriptionGrantsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"SubscriptionGrants",
          "documentation":"<p>The results of the <code>ListSubscriptionGrants</code> action. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscription grants is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscription grants, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptionGrants</code> to list the next set of subscription grants.</p>"
        }
      }
    },
    "ListSubscriptionRequestsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "approverProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the subscription request approver's project.</p>",
          "location":"querystring",
          "locationName":"approverProjectId"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of subscription requests to return in a single call to <code>ListSubscriptionRequests</code>. When the number of subscription requests to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListSubscriptionRequests</code> to list the next set of subscription requests.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscription requests is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscription requests, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptionRequests</code> to list the next set of subscription requests.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project for the subscription requests.</p>",
          "location":"querystring",
          "locationName":"owningProjectId"
        },
        "sortBy":{
          "shape":"SortKey",
          "documentation":"<p>Specifies the way to sort the results of this action.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>Specifies the sort order for the results of this action.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>Specifies the status of the subscription requests.</p> <note> <p>This is not a required parameter, but if not specified, by default, Amazon DataZone returns only <code>PENDING</code> subscription requests. </p> </note>",
          "location":"querystring",
          "locationName":"status"
        },
        "subscribedListingId":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of the subscribed listing.</p>",
          "location":"querystring",
          "locationName":"subscribedListingId"
        }
      }
    },
    "ListSubscriptionRequestsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"SubscriptionRequests",
          "documentation":"<p>The results of the <code>ListSubscriptionRequests</code> action. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscription requests is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscription requests, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptionRequests</code> to list the next set of subscription requests.</p>"
        }
      }
    },
    "ListSubscriptionTargetsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain where you want to list subscription targets.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment where you want to list subscription targets.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of subscription targets to return in a single call to <code>ListSubscriptionTargets</code>. When the number of subscription targets to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListSubscriptionTargets</code> to list the next set of subscription targets. </p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscription targets is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscription targets, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptionTargets</code> to list the next set of subscription targets.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "sortBy":{
          "shape":"SortKey",
          "documentation":"<p>Specifies the way in which the results of this action are to be sorted.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>Specifies the sort order for the results of this action.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        }
      }
    },
    "ListSubscriptionTargetsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"SubscriptionTargets",
          "documentation":"<p>The results of the <code>ListSubscriptionTargets</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscription targets is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscription targets, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptionTargets</code> to list the next set of subscription targets.</p>"
        }
      }
    },
    "ListSubscriptionsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "approverProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project for the subscription's approver.</p>",
          "location":"querystring",
          "locationName":"approverProjectId"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of subscriptions to return in a single call to <code>ListSubscriptions</code>. When the number of subscriptions to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>ListSubscriptions</code> to list the next set of Subscriptions. </p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscriptions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscriptions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptions</code> to list the next set of subscriptions.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the owning project.</p>",
          "location":"querystring",
          "locationName":"owningProjectId"
        },
        "sortBy":{
          "shape":"SortKey",
          "documentation":"<p>Specifies the way in which the results of this action are to be sorted.</p>",
          "location":"querystring",
          "locationName":"sortBy"
        },
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>Specifies the sort order for the results of this action.</p>",
          "location":"querystring",
          "locationName":"sortOrder"
        },
        "status":{
          "shape":"SubscriptionStatus",
          "documentation":"<p>The status of the subscriptions that you want to list.</p> <note> <p>This is not a required parameter, but if not provided, by default, Amazon DataZone returns only <code>APPROVED</code> subscriptions. </p> </note>",
          "location":"querystring",
          "locationName":"status"
        },
        "subscribedListingId":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of the subscribed listing for the subscriptions that you want to list.</p>",
          "location":"querystring",
          "locationName":"subscribedListingId"
        },
        "subscriptionRequestIdentifier":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request for the subscriptions that you want to list.</p>",
          "location":"querystring",
          "locationName":"subscriptionRequestIdentifier"
        }
      }
    },
    "ListSubscriptionsOutput":{
      "type":"structure",
      "required":["items"],
      "members":{
        "items":{
          "shape":"Subscriptions",
          "documentation":"<p>The results of the <code>ListSubscriptions</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of subscriptions is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of subscriptions, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>ListSubscriptions</code> to list the next set of subscriptions.</p>"
        }
      }
    },
    "ListTagsForResourceRequest":{
      "type":"structure",
      "required":["resourceArn"],
      "members":{
        "resourceArn":{
          "shape":"String",
          "documentation":"<p>The ARN of the resource whose tags you want to list.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        }
      }
    },
    "ListTagsForResourceResponse":{
      "type":"structure",
      "members":{
        "tags":{
          "shape":"Tags",
          "documentation":"<p>The tags of the specified resource.</p>"
        }
      }
    },
    "ListTimeSeriesDataPointsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "formName"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain that houses the assets for which you want to list time series data points.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "endedAt":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp at which the data points that you wanted to list ended.</p>",
          "location":"querystring",
          "locationName":"endedAt"
        },
        "entityIdentifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of the asset for which you want to list data points.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"TimeSeriesEntityType",
          "documentation":"<p>The type of the asset for which you want to list data points.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series data points form.</p>",
          "location":"querystring",
          "locationName":"formName"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of data points to return in a single call to ListTimeSeriesDataPoints. When the number of data points to be listed is greater than the value of MaxResults, the response contains a NextToken value that you can use in a subsequent call to ListTimeSeriesDataPoints to list the next set of data points.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of data points is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of data points, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListTimeSeriesDataPoints to list the next set of data points.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "startedAt":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp at which the data points that you want to list started.</p>",
          "location":"querystring",
          "locationName":"startedAt"
        }
      }
    },
    "ListTimeSeriesDataPointsOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"TimeSeriesDataPointSummaryFormOutputList",
          "documentation":"<p>The results of the ListTimeSeriesDataPoints action. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of data points is greater than the default value for the MaxResults parameter, or if you explicitly specify a value for MaxResults that is less than the number of data points, the response includes a pagination token named NextToken. You can specify this NextToken value in a subsequent call to ListTimeSeriesDataPoints to list the next set of data points.</p>"
        }
      }
    },
    "ListingId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "ListingItem":{
      "type":"structure",
      "members":{
        "assetListing":{
          "shape":"AssetListing",
          "documentation":"<p>An asset published in an Amazon DataZone catalog.</p>"
        },
        "dataProductListing":{
          "shape":"DataProductListing",
          "documentation":"<p>The data product listing.</p>"
        }
      },
      "documentation":"<p>The details of a listing (aka asset published in a Amazon DataZone catalog).</p>",
      "union":true
    },
    "ListingName":{
      "type":"string",
      "max":64,
      "min":1
    },
    "ListingRevision":{
      "type":"structure",
      "required":[
        "id",
        "revision"
      ],
      "members":{
        "id":{
          "shape":"ListingId",
          "documentation":"<p>An identifier of a revision of an asset published in a Amazon DataZone catalog.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The details of a revision of an asset published in a Amazon DataZone catalog.</p>"
        }
      },
      "documentation":"<p>A revision of an asset published in a Amazon DataZone catalog.</p>"
    },
    "ListingRevisionInput":{
      "type":"structure",
      "required":[
        "identifier",
        "revision"
      ],
      "members":{
        "identifier":{
          "shape":"ListingId",
          "documentation":"<p>An identifier of revision to be made to an asset published in a Amazon DataZone catalog.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The details of a revision to be made to an asset published in a Amazon DataZone catalog.</p>"
        }
      },
      "documentation":"<p>A revision to be made to an asset published in a Amazon DataZone catalog.</p>"
    },
    "ListingStatus":{
      "type":"string",
      "enum":[
        "CREATING",
        "ACTIVE",
        "INACTIVE"
      ]
    },
    "ListingSummaries":{
      "type":"list",
      "member":{"shape":"ListingSummary"}
    },
    "ListingSummary":{
      "type":"structure",
      "members":{
        "glossaryTerms":{
          "shape":"DetailedGlossaryTerms",
          "documentation":"<p>The glossary terms of the data product.</p>"
        },
        "listingId":{
          "shape":"ListingId",
          "documentation":"<p>The ID of the data product listing.</p>"
        },
        "listingRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the data product listing.</p>"
        }
      },
      "documentation":"<p>The summary of the listing of the data product.</p>"
    },
    "ListingSummaryItem":{
      "type":"structure",
      "members":{
        "glossaryTerms":{
          "shape":"DetailedGlossaryTerms",
          "documentation":"<p>The glossary terms of the data product listing.</p>"
        },
        "listingId":{
          "shape":"ListingId",
          "documentation":"<p>The ID of the data product listing.</p>"
        },
        "listingRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the data product listing.</p>"
        }
      },
      "documentation":"<p>The results of the data product summary.</p>"
    },
    "ListingSummaryItems":{
      "type":"list",
      "member":{"shape":"ListingSummaryItem"}
    },
    "LongDescription":{
      "type":"string",
      "max":4096,
      "min":0,
      "sensitive":true
    },
    "ManagedPolicyType":{
      "type":"string",
      "enum":[
        "CREATE_DOMAIN_UNIT",
        "OVERRIDE_DOMAIN_UNIT_OWNERS",
        "ADD_TO_PROJECT_MEMBER_POOL",
        "OVERRIDE_PROJECT_OWNERS",
        "CREATE_GLOSSARY",
        "CREATE_FORM_TYPE",
        "CREATE_ASSET_TYPE",
        "CREATE_PROJECT",
        "CREATE_ENVIRONMENT_PROFILE",
        "DELEGATE_CREATE_ENVIRONMENT_PROFILE",
        "CREATE_ENVIRONMENT",
        "CREATE_ENVIRONMENT_FROM_BLUEPRINT",
        "CREATE_PROJECT_FROM_PROJECT_PROFILE",
        "USE_ASSET_TYPE"
      ]
    },
    "MatchCriteria":{
      "type":"list",
      "member":{"shape":"String"},
      "max":10,
      "min":0
    },
    "MatchOffset":{
      "type":"structure",
      "members":{
        "endOffset":{
          "shape":"Integer",
          "documentation":"<p>The 0-indexed number indicating the end position (exclusive) of a matched term.</p>"
        },
        "startOffset":{
          "shape":"Integer",
          "documentation":"<p>The 0-indexed number indicating the start position (inclusive) of a matched term.</p>"
        }
      },
      "documentation":"<p>The offset of a matched term.</p>"
    },
    "MatchOffsets":{
      "type":"list",
      "member":{"shape":"MatchOffset"}
    },
    "MatchRationale":{
      "type":"list",
      "member":{"shape":"MatchRationaleItem"}
    },
    "MatchRationaleItem":{
      "type":"structure",
      "members":{
        "textMatches":{
          "shape":"TextMatches",
          "documentation":"<p>A list of TextMatchItems.</p>"
        }
      },
      "documentation":"<p>A rationale indicating why this item was matched by search. </p>",
      "union":true
    },
    "MaxResults":{
      "type":"integer",
      "box":true,
      "max":50,
      "min":1
    },
    "MaxResultsForListDomains":{
      "type":"integer",
      "box":true,
      "max":25,
      "min":1
    },
    "Member":{
      "type":"structure",
      "members":{
        "groupIdentifier":{
          "shape":"String",
          "documentation":"<p>The ID of the group of a project member.</p>"
        },
        "userIdentifier":{
          "shape":"String",
          "documentation":"<p>The user ID of a project member.</p>"
        }
      },
      "documentation":"<p>The details about a project member.</p>",
      "union":true
    },
    "MemberDetails":{
      "type":"structure",
      "members":{
        "group":{
          "shape":"GroupDetails",
          "documentation":"<p>The group details of a project member.</p>"
        },
        "user":{
          "shape":"UserDetails",
          "documentation":"<p>The user details of a project member.</p>"
        }
      },
      "documentation":"<p>The details about a project member.</p>",
      "union":true
    },
    "Message":{
      "type":"string",
      "max":16384,
      "min":0,
      "sensitive":true
    },
    "MetadataFormEnforcementDetail":{
      "type":"structure",
      "members":{
        "requiredMetadataForms":{
          "shape":"RequiredMetadataFormList",
          "documentation":"<p>The required metadata forms.</p>"
        }
      },
      "documentation":"<p>The enforcement details of a metadata form.</p>"
    },
    "MetadataFormInputs":{
      "type":"list",
      "member":{"shape":"FormInput"}
    },
    "MetadataFormReference":{
      "type":"structure",
      "required":[
        "typeIdentifier",
        "typeRevision"
      ],
      "members":{
        "typeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The type ID of the metadata form reference.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The type revision of the metadata form reference.</p>"
        }
      },
      "documentation":"<p>The reference of a metadata form.</p>"
    },
    "MetadataFormSummary":{
      "type":"structure",
      "required":[
        "typeName",
        "typeRevision"
      ],
      "members":{
        "formName":{
          "shape":"FormName",
          "documentation":"<p>The form name of the metadata form.</p>"
        },
        "typeName":{
          "shape":"FormTypeName",
          "documentation":"<p>The type name of the metadata form.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The type revision of the metadata form.</p>"
        }
      },
      "documentation":"<p>The summary of the metadata form.</p>"
    },
    "MetadataForms":{
      "type":"list",
      "member":{"shape":"FormOutput"}
    },
    "MetadataFormsSummary":{
      "type":"list",
      "member":{"shape":"MetadataFormSummary"}
    },
    "MetadataGenerationRunIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "MetadataGenerationRunItem":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "owningProjectId"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the metadata generation run was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the metadata generation run.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the metadata generation run was created.</p>"
        },
        "id":{
          "shape":"MetadataGenerationRunIdentifier",
          "documentation":"<p>The ID of the metadata generation run.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns the asset for which the metadata generation was ran.</p>"
        },
        "status":{
          "shape":"MetadataGenerationRunStatus",
          "documentation":"<p>The status of the metadata generation run.</p>"
        },
        "target":{
          "shape":"MetadataGenerationRunTarget",
          "documentation":"<p>The asset for which metadata was generated.</p>"
        },
        "type":{
          "shape":"MetadataGenerationRunType",
          "documentation":"<p>The type of the metadata generation run.</p>"
        }
      },
      "documentation":"<p>The metadata generation run.</p>"
    },
    "MetadataGenerationRunStatus":{
      "type":"string",
      "enum":[
        "SUBMITTED",
        "IN_PROGRESS",
        "CANCELED",
        "SUCCEEDED",
        "FAILED"
      ]
    },
    "MetadataGenerationRunTarget":{
      "type":"structure",
      "required":[
        "identifier",
        "type"
      ],
      "members":{
        "identifier":{
          "shape":"String",
          "documentation":"<p>The ID of the metadata generation run's target.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset for which metadata was generated.</p>"
        },
        "type":{
          "shape":"MetadataGenerationTargetType",
          "documentation":"<p>The type of the asset for which metadata was generated.</p>"
        }
      },
      "documentation":"<p>The asset for which metadata was generated.</p>"
    },
    "MetadataGenerationRunType":{
      "type":"string",
      "enum":["BUSINESS_DESCRIPTIONS"]
    },
    "MetadataGenerationRuns":{
      "type":"list",
      "member":{"shape":"MetadataGenerationRunItem"}
    },
    "MetadataGenerationTargetType":{
      "type":"string",
      "enum":["ASSET"]
    },
    "MetadataMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "Model":{
      "type":"structure",
      "members":{
        "smithy":{
          "shape":"Smithy",
          "documentation":"<p>Indicates the smithy model of the API.</p>"
        }
      },
      "documentation":"<p>The model of the API.</p>",
      "sensitive":true,
      "union":true
    },
    "Name":{
      "type":"string",
      "max":256,
      "min":1,
      "sensitive":true
    },
    "NameIdentifier":{
      "type":"structure",
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name in the name identifier.</p>"
        },
        "namespace":{
          "shape":"String",
          "documentation":"<p>The namespace in the name identifier.</p>"
        }
      },
      "documentation":"<p>The name identifier.</p>"
    },
    "NameIdentifiers":{
      "type":"list",
      "member":{"shape":"NameIdentifier"}
    },
    "NotEqualToExpression":{
      "type":"structure",
      "required":[
        "columnName",
        "value"
      ],
      "members":{
        "columnName":{
          "shape":"String",
          "documentation":"<p>The name of the column.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value that might not be equal to the expression.</p>"
        }
      },
      "documentation":"<p>Specifies that a value is not equal to the expression.</p>"
    },
    "NotInExpression":{
      "type":"structure",
      "required":[
        "columnName",
        "values"
      ],
      "members":{
        "columnName":{
          "shape":"String",
          "documentation":"<p>The name of the column.</p>"
        },
        "values":{
          "shape":"StringList",
          "documentation":"<p>The value that might not be in the expression.</p>"
        }
      },
      "documentation":"<p>Specifies that a value is not in the expression.</p>"
    },
    "NotLikeExpression":{
      "type":"structure",
      "required":[
        "columnName",
        "value"
      ],
      "members":{
        "columnName":{
          "shape":"String",
          "documentation":"<p>The name of the column.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value that might not be like the expression.</p>"
        }
      },
      "documentation":"<p>Specifies that a value might be not like the expression.</p>"
    },
    "NotificationOutput":{
      "type":"structure",
      "required":[
        "actionLink",
        "creationTimestamp",
        "domainIdentifier",
        "identifier",
        "lastUpdatedTimestamp",
        "message",
        "title",
        "topic",
        "type"
      ],
      "members":{
        "actionLink":{
          "shape":"ActionLink",
          "documentation":"<p>The action link included in the notification.</p>"
        },
        "creationTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of when a notification was created.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of a Amazon DataZone domain in which the notification exists.</p>"
        },
        "identifier":{
          "shape":"TaskId",
          "documentation":"<p>The identifier of the notification.</p>"
        },
        "lastUpdatedTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of when the notification was last updated.</p>"
        },
        "message":{
          "shape":"Message",
          "documentation":"<p>The message included in the notification.</p>"
        },
        "metadata":{
          "shape":"MetadataMap",
          "documentation":"<p>The metadata included in the notification.</p>"
        },
        "status":{
          "shape":"TaskStatus",
          "documentation":"<p>The status included in the notification.</p>"
        },
        "title":{
          "shape":"Title",
          "documentation":"<p>The title of the notification.</p>"
        },
        "topic":{
          "shape":"Topic",
          "documentation":"<p>The topic of the notification.</p>"
        },
        "type":{
          "shape":"NotificationType",
          "documentation":"<p>The type of the notification.</p>"
        }
      },
      "documentation":"<p>The details of a notification generated in Amazon DataZone.</p>"
    },
    "NotificationResource":{
      "type":"structure",
      "required":[
        "id",
        "type"
      ],
      "members":{
        "id":{
          "shape":"String",
          "documentation":"<p>The ID of the resource mentioned in a notification.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the resource mentioned in a notification.</p>"
        },
        "type":{
          "shape":"NotificationResourceType",
          "documentation":"<p>The type of the resource mentioned in a notification.</p>"
        }
      },
      "documentation":"<p>The details of the resource mentioned in a notification.</p>"
    },
    "NotificationResourceType":{
      "type":"string",
      "enum":["PROJECT"]
    },
    "NotificationRole":{
      "type":"string",
      "enum":[
        "PROJECT_OWNER",
        "PROJECT_CONTRIBUTOR",
        "PROJECT_VIEWER",
        "DOMAIN_OWNER",
        "PROJECT_SUBSCRIBER"
      ]
    },
    "NotificationSubjects":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "NotificationType":{
      "type":"string",
      "enum":[
        "TASK",
        "EVENT"
      ]
    },
    "NotificationsList":{
      "type":"list",
      "member":{"shape":"NotificationOutput"}
    },
    "OAuth2ClientApplication":{
      "type":"structure",
      "members":{
        "aWSManagedClientApplicationReference":{
          "shape":"OAuth2ClientApplicationAWSManagedClientApplicationReferenceString",
          "documentation":"<p>The Amazon Web Services managed client application reference in the OAuth2Client application.</p>"
        },
        "userManagedClientApplicationClientId":{
          "shape":"OAuth2ClientApplicationUserManagedClientApplicationClientIdString",
          "documentation":"<p>The user managed client application client ID in the OAuth2Client application.</p>"
        }
      },
      "documentation":"<p>The OAuth2Client application.</p>"
    },
    "OAuth2ClientApplicationAWSManagedClientApplicationReferenceString":{
      "type":"string",
      "max":2048,
      "min":0,
      "pattern":"^\\S+$"
    },
    "OAuth2ClientApplicationUserManagedClientApplicationClientIdString":{
      "type":"string",
      "max":2048,
      "min":0,
      "pattern":"^\\S+$"
    },
    "OAuth2GrantType":{
      "type":"string",
      "enum":[
        "AUTHORIZATION_CODE",
        "CLIENT_CREDENTIALS",
        "JWT_BEARER"
      ]
    },
    "OAuth2Properties":{
      "type":"structure",
      "members":{
        "authorizationCodeProperties":{
          "shape":"AuthorizationCodeProperties",
          "documentation":"<p>The authorization code properties of the OAuth2 properties.</p>"
        },
        "oAuth2ClientApplication":{
          "shape":"OAuth2ClientApplication",
          "documentation":"<p>The OAuth2 client application of the OAuth2 properties.</p>"
        },
        "oAuth2Credentials":{
          "shape":"GlueOAuth2Credentials",
          "documentation":"<p>The OAuth2 credentials of the OAuth2 properties.</p>"
        },
        "oAuth2GrantType":{
          "shape":"OAuth2GrantType",
          "documentation":"<p>The OAuth2 grant type of the OAuth2 properties.</p>"
        },
        "tokenUrl":{
          "shape":"OAuth2PropertiesTokenUrlString",
          "documentation":"<p>The OAuth2 token URL of the OAuth2 properties.</p>"
        },
        "tokenUrlParametersMap":{
          "shape":"TokenUrlParametersMap",
          "documentation":"<p>The OAuth2 token URL parameter map of the OAuth2 properties.</p>"
        }
      },
      "documentation":"<p>The OAuth2 properties.</p>"
    },
    "OAuth2PropertiesTokenUrlString":{
      "type":"string",
      "max":256,
      "min":0,
      "pattern":"^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]$"
    },
    "OpenLineageRunEventSummary":{
      "type":"structure",
      "members":{
        "eventType":{
          "shape":"OpenLineageRunState",
          "documentation":"<p>The event type of the open lineage run event summary.</p>"
        },
        "inputs":{
          "shape":"NameIdentifiers",
          "documentation":"<p>The inputs of the open lineage run event summary.</p>"
        },
        "job":{
          "shape":"NameIdentifier",
          "documentation":"<p>The job of the open lineage run event summary.</p>"
        },
        "outputs":{
          "shape":"NameIdentifiers",
          "documentation":"<p>The outputs of the open lineage run event summary.</p>"
        },
        "runId":{
          "shape":"String",
          "documentation":"<p>The runID of the open lineage run event summary.</p>"
        }
      },
      "documentation":"<p>The open lineage run event summary.</p>"
    },
    "OpenLineageRunState":{
      "type":"string",
      "enum":[
        "START",
        "RUNNING",
        "COMPLETE",
        "ABORT",
        "FAIL",
        "OTHER"
      ]
    },
    "OverallDeploymentStatus":{
      "type":"string",
      "enum":[
        "PENDING_DEPLOYMENT",
        "IN_PROGRESS",
        "SUCCESSFUL",
        "FAILED_VALIDATION",
        "FAILED_DEPLOYMENT"
      ]
    },
    "OverrideDomainUnitOwnersPolicyGrantDetail":{
      "type":"structure",
      "members":{
        "includeChildDomainUnits":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the policy is inherited by child domain units.</p>"
        }
      },
      "documentation":"<p>The grant details of the override domain unit owners policy.</p>"
    },
    "OverrideProjectOwnersPolicyGrantDetail":{
      "type":"structure",
      "members":{
        "includeChildDomainUnits":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the policy is inherited by child domain units.</p>"
        }
      },
      "documentation":"<p>The details of the override project owners policy grant.</p>"
    },
    "OwnerGroupProperties":{
      "type":"structure",
      "required":["groupIdentifier"],
      "members":{
        "groupIdentifier":{
          "shape":"GroupIdentifier",
          "documentation":"<p>The ID of the domain unit owners group.</p>"
        }
      },
      "documentation":"<p>The properties of the domain unit owners group.</p>"
    },
    "OwnerGroupPropertiesOutput":{
      "type":"structure",
      "members":{
        "groupId":{
          "shape":"String",
          "documentation":"<p>The ID of the domain unit owners group.</p>"
        }
      },
      "documentation":"<p>The properties of the domain unit owners group.</p>"
    },
    "OwnerProperties":{
      "type":"structure",
      "members":{
        "group":{
          "shape":"OwnerGroupProperties",
          "documentation":"<p>Specifies that the domain unit owner is a group.</p>"
        },
        "user":{
          "shape":"OwnerUserProperties",
          "documentation":"<p>Specifies that the domain unit owner is a user.</p>"
        }
      },
      "documentation":"<p>The properties of a domain unit's owner.</p>",
      "union":true
    },
    "OwnerPropertiesOutput":{
      "type":"structure",
      "members":{
        "group":{
          "shape":"OwnerGroupPropertiesOutput",
          "documentation":"<p>Specifies that the domain unit owner is a group.</p>"
        },
        "user":{
          "shape":"OwnerUserPropertiesOutput",
          "documentation":"<p>Specifies that the domain unit owner is a user.</p>"
        }
      },
      "documentation":"<p>The ID of the domain unit owners group.</p>",
      "union":true
    },
    "OwnerUserProperties":{
      "type":"structure",
      "required":["userIdentifier"],
      "members":{
        "userIdentifier":{
          "shape":"UserIdentifier",
          "documentation":"<p>The ID of the owner user.</p>"
        }
      },
      "documentation":"<p>The properties of the owner user.</p>"
    },
    "OwnerUserPropertiesOutput":{
      "type":"structure",
      "members":{
        "userId":{
          "shape":"String",
          "documentation":"<p>The ID of the owner user.</p>"
        }
      },
      "documentation":"<p>The properties of the owner user.</p>"
    },
    "PaginationToken":{
      "type":"string",
      "max":8192,
      "min":1
    },
    "ParameterStorePath":{
      "type":"string",
      "max":2048,
      "min":1
    },
    "Password":{
      "type":"string",
      "max":64,
      "min":0,
      "sensitive":true
    },
    "PhysicalConnectionRequirements":{
      "type":"structure",
      "members":{
        "availabilityZone":{
          "shape":"PhysicalConnectionRequirementsAvailabilityZoneString",
          "documentation":"<p>The availability zone of the physical connection requirements of a connection. </p>"
        },
        "securityGroupIdList":{
          "shape":"SecurityGroupIdList",
          "documentation":"<p>The group ID list of the physical connection requirements of a connection. </p>"
        },
        "subnetId":{
          "shape":"SubnetId",
          "documentation":"<p>The subnet ID of the physical connection requirements of a connection. </p>"
        },
        "subnetIdList":{
          "shape":"SubnetIdList",
          "documentation":"<p>The subnet ID list of the physical connection requirements of a connection. </p>"
        }
      },
      "documentation":"<p>Physical connection requirements of a connection.</p>"
    },
    "PhysicalConnectionRequirementsAvailabilityZoneString":{
      "type":"string",
      "max":255,
      "min":1
    },
    "PhysicalEndpoint":{
      "type":"structure",
      "members":{
        "awsLocation":{
          "shape":"AwsLocation",
          "documentation":"<p>The location of a connection.</p>"
        },
        "glueConnection":{
          "shape":"GlueConnection",
          "documentation":"<p>The Amazon Web Services Glue connection.</p>"
        },
        "glueConnectionName":{
          "shape":"String",
          "documentation":"<p>The Amazon Web Services Glue connection name.</p>"
        },
        "host":{
          "shape":"String",
          "documentation":"<p>The host in the physical endpoints of a connection.</p>"
        },
        "port":{
          "shape":"Integer",
          "documentation":"<p>The port in the physical endpoints of a connection.</p>"
        },
        "protocol":{
          "shape":"Protocol",
          "documentation":"<p>The protocol in the physical endpoints of a connection.</p>"
        },
        "stage":{
          "shape":"String",
          "documentation":"<p>The stage in the physical endpoints of a connection.</p>"
        }
      },
      "documentation":"<p>The physical endpoints of a connection.</p>"
    },
    "PhysicalEndpoints":{
      "type":"list",
      "member":{"shape":"PhysicalEndpoint"}
    },
    "PolicyArn":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::(aws|\\d{12}):policy/[\\w+=,.@-]*$"
    },
    "PolicyGrantDetail":{
      "type":"structure",
      "members":{
        "addToProjectMemberPool":{
          "shape":"AddToProjectMemberPoolPolicyGrantDetail",
          "documentation":"<p>Specifies that the policy grant is to be added to the members of the project.</p>"
        },
        "createAssetType":{
          "shape":"CreateAssetTypePolicyGrantDetail",
          "documentation":"<p>Specifies that this is a create asset type policy.</p>"
        },
        "createDomainUnit":{
          "shape":"CreateDomainUnitPolicyGrantDetail",
          "documentation":"<p>Specifies that this is a create domain unit policy.</p>"
        },
        "createEnvironment":{
          "shape":"Unit",
          "documentation":"<p>Specifies that this is a create environment policy.</p>"
        },
        "createEnvironmentFromBlueprint":{"shape":"Unit"},
        "createEnvironmentProfile":{
          "shape":"CreateEnvironmentProfilePolicyGrantDetail",
          "documentation":"<p>Specifies that this is a create environment profile policy.</p>"
        },
        "createFormType":{
          "shape":"CreateFormTypePolicyGrantDetail",
          "documentation":"<p>Specifies that this is a create form type policy.</p>"
        },
        "createGlossary":{
          "shape":"CreateGlossaryPolicyGrantDetail",
          "documentation":"<p> Specifies that this is a create glossary policy.</p>"
        },
        "createProject":{
          "shape":"CreateProjectPolicyGrantDetail",
          "documentation":"<p>Specifies that this is a create project policy.</p>"
        },
        "createProjectFromProjectProfile":{
          "shape":"CreateProjectFromProjectProfilePolicyGrantDetail",
          "documentation":"<p>Specifies whether to create a project from project profile.</p>"
        },
        "delegateCreateEnvironmentProfile":{
          "shape":"Unit",
          "documentation":"<p>Specifies that this is the delegation of the create environment profile policy.</p>"
        },
        "overrideDomainUnitOwners":{
          "shape":"OverrideDomainUnitOwnersPolicyGrantDetail",
          "documentation":"<p>Specifies whether to override domain unit owners.</p>"
        },
        "overrideProjectOwners":{
          "shape":"OverrideProjectOwnersPolicyGrantDetail",
          "documentation":"<p>Specifies whether to override project owners.</p>"
        },
        "useAssetType":{
          "shape":"UseAssetTypePolicyGrantDetail",
          "documentation":"<p> Specifies the domain unit(s) whose projects can use this asset type while creating asset or asset revisions.</p>"
        }
      },
      "documentation":"<p>The details of the policy grant.</p>",
      "union":true
    },
    "PolicyGrantList":{
      "type":"list",
      "member":{"shape":"PolicyGrantMember"}
    },
    "PolicyGrantMember":{
      "type":"structure",
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>Specifies the timestamp at which policy grant member was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>Specifies the user who created the policy grant member.</p>"
        },
        "detail":{
          "shape":"PolicyGrantDetail",
          "documentation":"<p>The details of the policy grant member.</p>"
        },
        "grantId":{
          "shape":"GrantIdentifier",
          "documentation":"<p>The ID of the policy grant.</p>"
        },
        "principal":{
          "shape":"PolicyGrantPrincipal",
          "documentation":"<p>The principal of the policy grant member.</p>"
        }
      },
      "documentation":"<p>A member of the policy grant list.</p>"
    },
    "PolicyGrantPrincipal":{
      "type":"structure",
      "members":{
        "domainUnit":{
          "shape":"DomainUnitPolicyGrantPrincipal",
          "documentation":"<p>The domain unit of the policy grant principal.</p>"
        },
        "group":{
          "shape":"GroupPolicyGrantPrincipal",
          "documentation":"<p>The group of the policy grant principal.</p>"
        },
        "project":{
          "shape":"ProjectPolicyGrantPrincipal",
          "documentation":"<p>The project of the policy grant principal.</p>"
        },
        "user":{
          "shape":"UserPolicyGrantPrincipal",
          "documentation":"<p>The user of the policy grant principal.</p>"
        }
      },
      "documentation":"<p>The policy grant principal.</p>",
      "union":true
    },
    "PostLineageEventInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "event"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"Client-Token"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to post a data lineage event.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "event":{
          "shape":"LineageEvent",
          "documentation":"<p>The data lineage event that you want to post. Only open-lineage run event are supported as events. </p>"
        }
      },
      "payload":"event"
    },
    "PostLineageEventOutput":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain.</p>"
        },
        "id":{
          "shape":"LineageEventIdentifier",
          "documentation":"<p>The ID of the lineage event.</p>"
        }
      }
    },
    "PostTimeSeriesDataPointsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "forms"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which you want to post time series data points.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"EntityIdentifier",
          "documentation":"<p>The ID of the asset for which you want to post time series data points.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"TimeSeriesEntityType",
          "documentation":"<p>The type of the asset for which you want to post data points.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "forms":{
          "shape":"TimeSeriesDataPointFormInputList",
          "documentation":"<p>The forms that contain the data points that you want to post.</p>"
        }
      }
    },
    "PostTimeSeriesDataPointsOutput":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which you want to post time series data points.</p>"
        },
        "entityId":{
          "shape":"EntityId",
          "documentation":"<p>The ID of the asset for which you want to post time series data points.</p>"
        },
        "entityType":{
          "shape":"TimeSeriesEntityType",
          "documentation":"<p>The type of the asset for which you want to post data points.</p>"
        },
        "forms":{
          "shape":"TimeSeriesDataPointFormOutputList",
          "documentation":"<p>The forms that contain the data points that you have posted.</p>"
        }
      }
    },
    "PredictionChoices":{
      "type":"list",
      "member":{"shape":"Integer"}
    },
    "PredictionConfiguration":{
      "type":"structure",
      "members":{
        "businessNameGeneration":{
          "shape":"BusinessNameGenerationConfiguration",
          "documentation":"<p>The business name generation mechanism.</p>"
        }
      },
      "documentation":"<p>The configuration of the prediction.</p>"
    },
    "ProjectDeletionError":{
      "type":"structure",
      "members":{
        "code":{
          "shape":"String",
          "documentation":"<p>The code of the project deletion error.</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>The message of the project deletion error.</p>"
        }
      },
      "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
    },
    "ProjectDesignation":{
      "type":"string",
      "enum":[
        "OWNER",
        "CONTRIBUTOR",
        "PROJECT_CATALOG_STEWARD"
      ]
    },
    "ProjectGrantFilter":{
      "type":"structure",
      "members":{
        "domainUnitFilter":{
          "shape":"DomainUnitFilterForProject",
          "documentation":"<p>The domain unit filter of the project grant filter.</p>"
        }
      },
      "documentation":"<p>The project grant filter.</p>",
      "union":true
    },
    "ProjectId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "ProjectIds":{
      "type":"list",
      "member":{"shape":"ProjectId"}
    },
    "ProjectMember":{
      "type":"structure",
      "required":[
        "designation",
        "memberDetails"
      ],
      "members":{
        "designation":{
          "shape":"UserDesignation",
          "documentation":"<p>The designated role of a project member.</p>"
        },
        "memberDetails":{
          "shape":"MemberDetails",
          "documentation":"<p>The membership details of a project member.</p>"
        }
      },
      "documentation":"<p>The details of a project member.</p>"
    },
    "ProjectMembers":{
      "type":"list",
      "member":{"shape":"ProjectMember"}
    },
    "ProjectName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[\\w -]+$",
      "sensitive":true
    },
    "ProjectPolicyGrantPrincipal":{
      "type":"structure",
      "required":["projectDesignation"],
      "members":{
        "projectDesignation":{
          "shape":"ProjectDesignation",
          "documentation":"<p>The project designation of the project policy grant principal.</p>"
        },
        "projectGrantFilter":{
          "shape":"ProjectGrantFilter",
          "documentation":"<p>The project grant filter of the project policy grant principal.</p>"
        },
        "projectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The project ID of the project policy grant principal.</p>"
        }
      },
      "documentation":"<p>The project policy grant principal.</p>"
    },
    "ProjectProfileId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "ProjectProfileList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "ProjectProfileName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[\\w -]+$",
      "sensitive":true
    },
    "ProjectProfileSummaries":{
      "type":"list",
      "member":{"shape":"ProjectProfileSummary"}
    },
    "ProjectProfileSummary":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project profile was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the project profile.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the project profile.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The domain ID of the project profile.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The domain unit ID of the project profile.</p>"
        },
        "id":{
          "shape":"ProjectProfileId",
          "documentation":"<p>The ID of the project profile.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp at which a project profile was last updated.</p>"
        },
        "name":{
          "shape":"ProjectProfileName",
          "documentation":"<p>The name of a project profile.</p>"
        },
        "status":{
          "shape":"Status",
          "documentation":"<p>The status of a project profile.</p>"
        }
      },
      "documentation":"<p>The summary of a project profile.</p>"
    },
    "ProjectStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "DELETING",
        "DELETE_FAILED",
        "UPDATING",
        "UPDATE_FAILED",
        "MOVING"
      ]
    },
    "ProjectSummaries":{
      "type":"list",
      "member":{"shape":"ProjectSummary"}
    },
    "ProjectSummary":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when a project was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the project.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of a project.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of a Amazon DataZone domain where the project exists.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit.</p>"
        },
        "failureReasons":{
          "shape":"FailureReasons",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of a project.</p>"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of a project.</p>"
        },
        "projectStatus":{
          "shape":"ProjectStatus",
          "documentation":"<p>The status of the project.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was updated.</p>"
        }
      },
      "documentation":"<p>The details of a Amazon DataZone project.</p>"
    },
    "ProjectsForRule":{
      "type":"structure",
      "required":["selectionMode"],
      "members":{
        "selectionMode":{
          "shape":"RuleScopeSelectionMode",
          "documentation":"<p>The selection mode of the rule.</p>"
        },
        "specificProjects":{
          "shape":"RuleProjectIdentifierList",
          "documentation":"<p>The specific projects in which the rule is created.</p>"
        }
      },
      "documentation":"<p>Specifies projects in which the rule is created.</p>"
    },
    "PropertyMap":{
      "type":"map",
      "key":{"shape":"PropertyMapKeyString"},
      "value":{"shape":"PropertyMapValueString"}
    },
    "PropertyMapKeyString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "PropertyMapValueString":{
      "type":"string",
      "max":2048,
      "min":1
    },
    "Protocol":{
      "type":"string",
      "enum":[
        "ATHENA",
        "GLUE_INTERACTIVE_SESSION",
        "HTTPS",
        "JDBC",
        "LIVY",
        "ODBC",
        "PRISM"
      ]
    },
    "ProvisioningConfiguration":{
      "type":"structure",
      "members":{
        "lakeFormationConfiguration":{
          "shape":"LakeFormationConfiguration",
          "documentation":"<p>The Lake Formation configuration of the Data Lake blueprint.</p>"
        }
      },
      "documentation":"<p>The provisioning configuration of the blueprint.</p>",
      "union":true
    },
    "ProvisioningConfigurationList":{
      "type":"list",
      "member":{"shape":"ProvisioningConfiguration"}
    },
    "ProvisioningProperties":{
      "type":"structure",
      "members":{
        "cloudFormation":{
          "shape":"CloudFormationProperties",
          "documentation":"<p>The cloud formation properties included as part of the provisioning properties of an environment blueprint.</p>"
        }
      },
      "documentation":"<p>The provisioning properties of an environment blueprint.</p>",
      "union":true
    },
    "PutEnvironmentBlueprintConfigurationInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "enabledRegions",
        "environmentBlueprintIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "enabledRegions":{
          "shape":"EnabledRegionList",
          "documentation":"<p>Specifies the enabled Amazon Web Services Regions.</p>"
        },
        "environmentBlueprintIdentifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the environment blueprint.</p>",
          "location":"uri",
          "locationName":"environmentBlueprintIdentifier"
        },
        "environmentRolePermissionBoundary":{
          "shape":"PolicyArn",
          "documentation":"<p>The environment role permissions boundary.</p>"
        },
        "globalParameters":{
          "shape":"GlobalParameterMap",
          "documentation":"<p>Region-agnostic environment blueprint parameters. </p>"
        },
        "manageAccessRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the manage access role.</p>"
        },
        "provisioningConfigurations":{
          "shape":"ProvisioningConfigurationList",
          "documentation":"<p>The provisioning configuration of a blueprint.</p>"
        },
        "provisioningRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the provisioning role.</p>"
        },
        "regionalParameters":{
          "shape":"RegionalParameterMap",
          "documentation":"<p>The regional parameters in the environment blueprint.</p>"
        }
      }
    },
    "PutEnvironmentBlueprintConfigurationOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentBlueprintId"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment blueprint was created.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>"
        },
        "enabledRegions":{
          "shape":"EnabledRegionList",
          "documentation":"<p>Specifies the enabled Amazon Web Services Regions.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the environment blueprint.</p>"
        },
        "environmentRolePermissionBoundary":{
          "shape":"PolicyArn",
          "documentation":"<p>The environment role permissions boundary.</p>"
        },
        "manageAccessRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the manage access role.</p>"
        },
        "provisioningConfigurations":{
          "shape":"ProvisioningConfigurationList",
          "documentation":"<p>The provisioning configuration of a blueprint.</p>"
        },
        "provisioningRoleArn":{
          "shape":"RoleArn",
          "documentation":"<p>The ARN of the provisioning role.</p>"
        },
        "regionalParameters":{
          "shape":"RegionalParameterMap",
          "documentation":"<p>The regional parameters in the environment blueprint.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment blueprint was updated.</p>"
        }
      }
    },
    "RecommendationConfiguration":{
      "type":"structure",
      "members":{
        "enableBusinessNameGeneration":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether automatic business name generation is to be enabled or not as part of the recommendation configuration.</p>"
        }
      },
      "documentation":"<p>The recommendation to be updated as part of the <code>UpdateDataSource</code> action.</p>"
    },
    "RedshiftClusterStorage":{
      "type":"structure",
      "required":["clusterName"],
      "members":{
        "clusterName":{
          "shape":"RedshiftClusterStorageClusterNameString",
          "documentation":"<p>The name of an Amazon Redshift cluster.</p>"
        }
      },
      "documentation":"<p>The details of the Amazon Redshift cluster storage.</p>"
    },
    "RedshiftClusterStorageClusterNameString":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"^[0-9a-z].[a-z0-9\\-]*$"
    },
    "RedshiftCredentialConfiguration":{
      "type":"structure",
      "required":["secretManagerArn"],
      "members":{
        "secretManagerArn":{
          "shape":"RedshiftCredentialConfigurationSecretManagerArnString",
          "documentation":"<p>The ARN of a secret manager for an Amazon Redshift cluster.</p>"
        }
      },
      "documentation":"<p>The details of the credentials required to access an Amazon Redshift cluster.</p>"
    },
    "RedshiftCredentialConfigurationSecretManagerArnString":{
      "type":"string",
      "max":256,
      "min":0,
      "pattern":"^arn:aws[^:]*:secretsmanager:[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]:\\d{12}:secret:.*$"
    },
    "RedshiftCredentials":{
      "type":"structure",
      "members":{
        "secretArn":{
          "shape":"RedshiftCredentialsSecretArnString",
          "documentation":"<p>The secret ARN of the Amazon Redshift credentials of a connection.</p>"
        },
        "usernamePassword":{
          "shape":"UsernamePassword",
          "documentation":"<p>The username and password of the Amazon Redshift credentials of a connection.</p>"
        }
      },
      "documentation":"<p>Amazon Redshift credentials of a connection.</p>",
      "sensitive":true,
      "union":true
    },
    "RedshiftCredentialsSecretArnString":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:secretsmanager:[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]:\\d{12}:secret:.*$"
    },
    "RedshiftLineageSyncConfigurationInput":{
      "type":"structure",
      "members":{
        "enabled":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the Amaon Redshift lineage sync configuration is enabled.</p>"
        },
        "schedule":{
          "shape":"LineageSyncSchedule",
          "documentation":"<p>The schedule of the Amaon Redshift lineage sync configuration.</p>"
        }
      },
      "documentation":"<p>The Amaon Redshift lineage sync configuration.</p>"
    },
    "RedshiftLineageSyncConfigurationOutput":{
      "type":"structure",
      "members":{
        "enabled":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the Amaon Redshift lineage sync configuration is enabled.</p>"
        },
        "lineageJobId":{
          "shape":"String",
          "documentation":"<p>The lineage job ID of the Amaon Redshift lineage sync configuration.</p>"
        },
        "schedule":{
          "shape":"LineageSyncSchedule",
          "documentation":"<p>The schedule of teh Amaon Redshift lineage sync configuration.</p>"
        }
      },
      "documentation":"<p>The Amaon Redshift lineage sync configuration.</p>"
    },
    "RedshiftPropertiesInput":{
      "type":"structure",
      "members":{
        "credentials":{
          "shape":"RedshiftCredentials",
          "documentation":"<p>The Amaon Redshift credentials.</p>"
        },
        "databaseName":{
          "shape":"RedshiftPropertiesInputDatabaseNameString",
          "documentation":"<p>The Amazon Redshift database name.</p>"
        },
        "host":{
          "shape":"RedshiftPropertiesInputHostString",
          "documentation":"<p>The Amazon Redshift host.</p>"
        },
        "lineageSync":{
          "shape":"RedshiftLineageSyncConfigurationInput",
          "documentation":"<p>The lineage sync of the Amazon Redshift.</p>"
        },
        "port":{
          "shape":"Integer",
          "documentation":"<p>The Amaon Redshift port.</p>"
        },
        "storage":{
          "shape":"RedshiftStorageProperties",
          "documentation":"<p>The Amazon Redshift storage.</p>"
        }
      },
      "documentation":"<p>The Amazon Redshift properties.</p>"
    },
    "RedshiftPropertiesInputDatabaseNameString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "RedshiftPropertiesInputHostString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "RedshiftPropertiesOutput":{
      "type":"structure",
      "members":{
        "credentials":{
          "shape":"RedshiftCredentials",
          "documentation":"<p>The Amazon Redshift credentials.</p>"
        },
        "databaseName":{
          "shape":"String",
          "documentation":"<p>The Amazon Redshift database name.</p>"
        },
        "isProvisionedSecret":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether Amaon Redshift properties has a provisioned secret.</p>"
        },
        "jdbcIamUrl":{
          "shape":"String",
          "documentation":"<p>The jdbcIam URL of the Amazon Redshift properties.</p>"
        },
        "jdbcUrl":{
          "shape":"String",
          "documentation":"<p>The jdbcURL of the Amazon Redshift properties. </p>"
        },
        "lineageSync":{
          "shape":"RedshiftLineageSyncConfigurationOutput",
          "documentation":"<p>The lineage syn of the Amazon Redshift properties.</p>"
        },
        "redshiftTempDir":{
          "shape":"String",
          "documentation":"<p>The redshiftTempDir of the Amazon Redshift properties.</p>"
        },
        "status":{
          "shape":"ConnectionStatus",
          "documentation":"<p>The status in the Amazon Redshift properties.</p>"
        },
        "storage":{
          "shape":"RedshiftStorageProperties",
          "documentation":"<p>The storage in the Amazon Redshift properties.</p>"
        }
      },
      "documentation":"<p>The Amazon Redshift properties.</p>"
    },
    "RedshiftPropertiesPatch":{
      "type":"structure",
      "members":{
        "credentials":{
          "shape":"RedshiftCredentials",
          "documentation":"<p>The credentials in the Amazon Redshift properties patch.</p>"
        },
        "databaseName":{
          "shape":"RedshiftPropertiesPatchDatabaseNameString",
          "documentation":"<p>The name in the Amazon Redshift properties patch.</p>"
        },
        "host":{
          "shape":"RedshiftPropertiesPatchHostString",
          "documentation":"<p>The host in the Amazon Redshift properties patch.</p>"
        },
        "lineageSync":{
          "shape":"RedshiftLineageSyncConfigurationInput",
          "documentation":"<p>The lineage sync in the Amazon Redshift properties patch.</p>"
        },
        "port":{
          "shape":"Integer",
          "documentation":"<p>The port in the Amazon Redshift properties patch.</p>"
        },
        "storage":{
          "shape":"RedshiftStorageProperties",
          "documentation":"<p>The storage in the Amazon Redshift properties patch.</p>"
        }
      },
      "documentation":"<p>Amazon Redshift properties patch.</p>"
    },
    "RedshiftPropertiesPatchDatabaseNameString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "RedshiftPropertiesPatchHostString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "RedshiftRunConfigurationInput":{
      "type":"structure",
      "required":["relationalFilterConfigurations"],
      "members":{
        "dataAccessRole":{
          "shape":"RedshiftRunConfigurationInputDataAccessRoleString",
          "documentation":"<p>The data access role included in the configuration details of the Amazon Redshift data source.</p>"
        },
        "redshiftCredentialConfiguration":{"shape":"RedshiftCredentialConfiguration"},
        "redshiftStorage":{"shape":"RedshiftStorage"},
        "relationalFilterConfigurations":{
          "shape":"RelationalFilterConfigurations",
          "documentation":"<p>The relational filger configurations included in the configuration details of the Amazon Redshift data source.</p>"
        }
      },
      "documentation":"<p>The configuration details of the Amazon Redshift data source.</p>"
    },
    "RedshiftRunConfigurationInputDataAccessRoleString":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]{1,128}$"
    },
    "RedshiftRunConfigurationOutput":{
      "type":"structure",
      "required":[
        "redshiftStorage",
        "relationalFilterConfigurations"
      ],
      "members":{
        "accountId":{
          "shape":"RedshiftRunConfigurationOutputAccountIdString",
          "documentation":"<p>The ID of the Amazon Web Services account included in the configuration details of the Amazon Redshift data source.</p>"
        },
        "dataAccessRole":{
          "shape":"RedshiftRunConfigurationOutputDataAccessRoleString",
          "documentation":"<p>The data access role included in the configuration details of the Amazon Redshift data source.</p>"
        },
        "redshiftCredentialConfiguration":{"shape":"RedshiftCredentialConfiguration"},
        "redshiftStorage":{"shape":"RedshiftStorage"},
        "region":{
          "shape":"RedshiftRunConfigurationOutputRegionString",
          "documentation":"<p>The Amazon Web Services region included in the configuration details of the Amazon Redshift data source.</p>"
        },
        "relationalFilterConfigurations":{
          "shape":"RelationalFilterConfigurations",
          "documentation":"<p>The relational filger configurations included in the configuration details of the Amazon Redshift data source.</p>"
        }
      },
      "documentation":"<p>The configuration details of the Amazon Redshift data source.</p>"
    },
    "RedshiftRunConfigurationOutputAccountIdString":{
      "type":"string",
      "max":12,
      "min":12,
      "pattern":"^\\d{12}$"
    },
    "RedshiftRunConfigurationOutputDataAccessRoleString":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]{1,128}$"
    },
    "RedshiftRunConfigurationOutputRegionString":{
      "type":"string",
      "max":16,
      "min":4,
      "pattern":"[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]"
    },
    "RedshiftSelfGrantStatusOutput":{
      "type":"structure",
      "required":["selfGrantStatusDetails"],
      "members":{
        "selfGrantStatusDetails":{
          "shape":"SelfGrantStatusDetails",
          "documentation":"<p>The details for the self granting status for an Amazon Redshift data source.</p>"
        }
      },
      "documentation":"<p>The details for the self granting status for an Amazon Redshift data source.</p>"
    },
    "RedshiftServerlessStorage":{
      "type":"structure",
      "required":["workgroupName"],
      "members":{
        "workgroupName":{
          "shape":"RedshiftServerlessStorageWorkgroupNameString",
          "documentation":"<p>The name of the Amazon Redshift Serverless workgroup.</p>"
        }
      },
      "documentation":"<p>The details of the Amazon Redshift Serverless workgroup storage.</p>"
    },
    "RedshiftServerlessStorageWorkgroupNameString":{
      "type":"string",
      "max":64,
      "min":3,
      "pattern":"^[a-z0-9-]+$"
    },
    "RedshiftStorage":{
      "type":"structure",
      "members":{
        "redshiftClusterSource":{
          "shape":"RedshiftClusterStorage",
          "documentation":"<p>The details of the Amazon Redshift cluster source.</p>"
        },
        "redshiftServerlessSource":{
          "shape":"RedshiftServerlessStorage",
          "documentation":"<p>The details of the Amazon Redshift Serverless workgroup source.</p>"
        }
      },
      "documentation":"<p>The details of the Amazon Redshift storage as part of the configuration of an Amazon Redshift data source run.</p>",
      "union":true
    },
    "RedshiftStorageProperties":{
      "type":"structure",
      "members":{
        "clusterName":{
          "shape":"RedshiftStoragePropertiesClusterNameString",
          "documentation":"<p>The cluster name in the Amazon Redshift storage properties.</p>"
        },
        "workgroupName":{
          "shape":"RedshiftStoragePropertiesWorkgroupNameString",
          "documentation":"<p>The workgroup name in the Amazon Redshift storage properties.</p>"
        }
      },
      "documentation":"<p>The Amazon Redshift storage properties.</p>",
      "union":true
    },
    "RedshiftStoragePropertiesClusterNameString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "RedshiftStoragePropertiesWorkgroupNameString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "Region":{
      "type":"structure",
      "members":{
        "regionName":{
          "shape":"RegionName",
          "documentation":"<p>The Amazon Web Services Region name.</p>"
        },
        "regionNamePath":{
          "shape":"ParameterStorePath",
          "documentation":"<p>The region name path.</p>"
        }
      },
      "documentation":"<p>The Amazon Web Services Region.</p>",
      "union":true
    },
    "RegionName":{
      "type":"string",
      "max":16,
      "min":4,
      "pattern":"^[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]$"
    },
    "RegionalParameter":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "RegionalParameterMap":{
      "type":"map",
      "key":{"shape":"RegionName"},
      "value":{"shape":"RegionalParameter"}
    },
    "RejectChoice":{
      "type":"structure",
      "required":["predictionTarget"],
      "members":{
        "predictionChoices":{
          "shape":"PredictionChoices",
          "documentation":"<p>Specifies the the automatically generated business metadata that can be rejected.</p>"
        },
        "predictionTarget":{
          "shape":"String",
          "documentation":"<p>Specifies the target (for example, a column name) where a prediction can be rejected.</p>"
        }
      },
      "documentation":"<p>The details of the automatically generated business metadata that is rejected.</p>"
    },
    "RejectChoices":{
      "type":"list",
      "member":{"shape":"RejectChoice"}
    },
    "RejectPredictionsInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AssetIdentifier",
          "documentation":"<p>The identifier of the prediction.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "rejectChoices":{
          "shape":"RejectChoices",
          "documentation":"<p>Specifies the prediction (aka, the automatically generated piece of metadata) and the target (for example, a column name) that can be rejected.</p>"
        },
        "rejectRule":{
          "shape":"RejectRule",
          "documentation":"<p>Specifies the rule (or the conditions) under which a prediction can be rejected.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision that is to be made to the asset.</p>",
          "location":"querystring",
          "locationName":"revision"
        }
      }
    },
    "RejectPredictionsOutput":{
      "type":"structure",
      "required":[
        "assetId",
        "assetRevision",
        "domainId"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the asset.</p>"
        },
        "assetRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision that is to be made to the asset.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain.</p>"
        }
      }
    },
    "RejectRule":{
      "type":"structure",
      "members":{
        "rule":{
          "shape":"RejectRuleBehavior",
          "documentation":"<p>Specifies whether you want to reject the top prediction for all targets or none.</p>"
        },
        "threshold":{
          "shape":"Float",
          "documentation":"<p>The confidence score that specifies the condition at which a prediction can be rejected.</p>"
        }
      },
      "documentation":"<p>Specifies the rule and the threshold under which a prediction can be rejected.</p>"
    },
    "RejectRuleBehavior":{
      "type":"string",
      "enum":[
        "ALL",
        "NONE"
      ]
    },
    "RejectSubscriptionRequestInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>The decision comment of the rejected subscription request.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the subscription request was rejected.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request that was rejected.</p>",
          "location":"uri",
          "locationName":"identifier"
        }
      }
    },
    "RejectSubscriptionRequestOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "requestReason",
        "status",
        "subscribedListings",
        "subscribedPrincipals",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription request was rejected.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The timestamp of when the subscription request was rejected.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>The decision comment of the rejected subscription request.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the subscription request was rejected.</p>"
        },
        "existingSubscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The ID of the existing subscription.</p>"
        },
        "id":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request that was rejected.</p>"
        },
        "metadataForms":{
          "shape":"MetadataForms",
          "documentation":"<p>Metadata forms included in the subscription request.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the subscription request.</p>"
        },
        "reviewerId":{
          "shape":"String",
          "documentation":"<p>The identifier of the subscription request reviewer.</p>"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>The status of the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"RejectSubscriptionRequestOutputSubscribedListingsList",
          "documentation":"<p>The subscribed listings of the subscription request.</p>"
        },
        "subscribedPrincipals":{
          "shape":"RejectSubscriptionRequestOutputSubscribedPrincipalsList",
          "documentation":"<p>The subscribed principals of the subscription request.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription request was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription request.</p>"
        }
      }
    },
    "RejectSubscriptionRequestOutputSubscribedListingsList":{
      "type":"list",
      "member":{"shape":"SubscribedListing"},
      "max":1,
      "min":1
    },
    "RejectSubscriptionRequestOutputSubscribedPrincipalsList":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipal"},
      "max":1,
      "min":1
    },
    "RelationalFilterConfiguration":{
      "type":"structure",
      "required":["databaseName"],
      "members":{
        "databaseName":{
          "shape":"RelationalFilterConfigurationDatabaseNameString",
          "documentation":"<p>The database name specified in the relational filter configuration for the data source.</p>"
        },
        "filterExpressions":{
          "shape":"FilterExpressions",
          "documentation":"<p>The filter expressions specified in the relational filter configuration for the data source.</p>"
        },
        "schemaName":{
          "shape":"RelationalFilterConfigurationSchemaNameString",
          "documentation":"<p>The schema name specified in the relational filter configuration for the data source.</p>"
        }
      },
      "documentation":"<p>The relational filter configuration for the data source.</p>"
    },
    "RelationalFilterConfigurationDatabaseNameString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "RelationalFilterConfigurationSchemaNameString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "RelationalFilterConfigurations":{
      "type":"list",
      "member":{"shape":"RelationalFilterConfiguration"}
    },
    "RemoveEntityOwnerInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "owner"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to remove an owner from an entity.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"String",
          "documentation":"<p>The ID of the entity from which you want to remove an owner.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"DataZoneEntityType",
          "documentation":"<p>The type of the entity from which you want to remove an owner.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "owner":{
          "shape":"OwnerProperties",
          "documentation":"<p>The owner that you want to remove from an entity.</p>"
        }
      }
    },
    "RemoveEntityOwnerOutput":{
      "type":"structure",
      "members":{}
    },
    "RemovePolicyGrantInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "entityIdentifier",
        "entityType",
        "policyType",
        "principal"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to remove a policy grant.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "entityIdentifier":{
          "shape":"String",
          "documentation":"<p>The ID of the entity from which you want to remove a policy grant.</p>",
          "location":"uri",
          "locationName":"entityIdentifier"
        },
        "entityType":{
          "shape":"TargetEntityType",
          "documentation":"<p>The type of the entity from which you want to remove a policy grant.</p>",
          "location":"uri",
          "locationName":"entityType"
        },
        "grantIdentifier":{
          "shape":"GrantIdentifier",
          "documentation":"<p>The ID of the policy grant that is to be removed from a specified entity.</p>"
        },
        "policyType":{
          "shape":"ManagedPolicyType",
          "documentation":"<p>The type of the policy that you want to remove.</p>"
        },
        "principal":{
          "shape":"PolicyGrantPrincipal",
          "documentation":"<p>The principal from which you want to remove a policy grant.</p>"
        }
      }
    },
    "RemovePolicyGrantOutput":{
      "type":"structure",
      "members":{}
    },
    "RequestReason":{
      "type":"string",
      "max":4096,
      "min":1,
      "sensitive":true
    },
    "RequiredMetadataFormList":{
      "type":"list",
      "member":{"shape":"MetadataFormReference"},
      "max":5,
      "min":1
    },
    "ResolutionStrategy":{
      "type":"string",
      "enum":["MANUAL"]
    },
    "Resource":{
      "type":"structure",
      "required":[
        "type",
        "value"
      ],
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of a provisioned resource of this Amazon DataZone environment.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of a provisioned resource of this Amazon DataZone environment.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of a provisioned resource of this Amazon DataZone environment.</p>"
        },
        "value":{
          "shape":"String",
          "documentation":"<p>The value of a provisioned resource of this Amazon DataZone environment.</p>"
        }
      },
      "documentation":"<p>The details of a provisioned resource of this Amazon DataZone environment.</p>"
    },
    "ResourceList":{
      "type":"list",
      "member":{"shape":"Resource"}
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The specified resource cannot be found.</p>",
      "error":{
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true
    },
    "Revision":{
      "type":"string",
      "max":64,
      "min":1
    },
    "RevisionInput":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"^[a-zA-Z0-9_-]+$"
    },
    "RevokeSubscriptionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain where you want to revoke a subscription.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the revoked subscription.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "retainPermissions":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether permissions are retained when the subscription is revoked.</p>"
        }
      }
    },
    "RevokeSubscriptionOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "status",
        "subscribedListing",
        "subscribedPrincipal",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription was revoked.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The identifier of the user who revoked the subscription.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain where you want to revoke a subscription.</p>"
        },
        "id":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the revoked subscription.</p>"
        },
        "retainPermissions":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether permissions are retained when the subscription is revoked.</p>"
        },
        "status":{
          "shape":"SubscriptionStatus",
          "documentation":"<p>The status of the revoked subscription.</p>"
        },
        "subscribedListing":{
          "shape":"SubscribedListing",
          "documentation":"<p>The subscribed listing of the revoked subscription.</p>"
        },
        "subscribedPrincipal":{
          "shape":"SubscribedPrincipal",
          "documentation":"<p>The subscribed principal of the revoked subscription.</p>"
        },
        "subscriptionRequestId":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request for the revoked subscription.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription was revoked.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who revoked the subscription.</p>"
        }
      }
    },
    "RoleArn":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]*$"
    },
    "RowFilter":{
      "type":"structure",
      "members":{
        "and":{
          "shape":"RowFilterList",
          "documentation":"<p>The 'and' clause of the row filter.</p>"
        },
        "expression":{
          "shape":"RowFilterExpression",
          "documentation":"<p>The expression of the row filter.</p>"
        },
        "or":{
          "shape":"RowFilterList",
          "documentation":"<p>The 'or' clause of the row filter.</p>"
        }
      },
      "documentation":"<p>The row filter.</p>",
      "union":true
    },
    "RowFilterConfiguration":{
      "type":"structure",
      "required":["rowFilter"],
      "members":{
        "rowFilter":{
          "shape":"RowFilter",
          "documentation":"<p>The row filter.</p>"
        },
        "sensitive":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the row filter is sensitive.</p>"
        }
      },
      "documentation":"<p>The row filter configuration details.</p>"
    },
    "RowFilterExpression":{
      "type":"structure",
      "members":{
        "equalTo":{
          "shape":"EqualToExpression",
          "documentation":"<p>The 'equal to' clause of the row filter expression.</p>"
        },
        "greaterThan":{
          "shape":"GreaterThanExpression",
          "documentation":"<p>The 'greater than' clause of the row filter expression.</p>"
        },
        "greaterThanOrEqualTo":{
          "shape":"GreaterThanOrEqualToExpression",
          "documentation":"<p>The 'greater than or equal to' clause of the filter expression.</p>"
        },
        "in":{
          "shape":"InExpression",
          "documentation":"<p>The 'in' clause of the row filter expression.</p>"
        },
        "isNotNull":{
          "shape":"IsNotNullExpression",
          "documentation":"<p>The 'is not null' clause of the row filter expression.</p>"
        },
        "isNull":{
          "shape":"IsNullExpression",
          "documentation":"<p>The 'is null' clause of the row filter expression.</p>"
        },
        "lessThan":{
          "shape":"LessThanExpression",
          "documentation":"<p>The 'less than' clause of the row filter expression.</p>"
        },
        "lessThanOrEqualTo":{
          "shape":"LessThanOrEqualToExpression",
          "documentation":"<p>The 'less than or equal to' clause of the row filter expression.</p>"
        },
        "like":{
          "shape":"LikeExpression",
          "documentation":"<p>The 'like' clause of the row filter expression.</p>"
        },
        "notEqualTo":{
          "shape":"NotEqualToExpression",
          "documentation":"<p>The 'no equal to' clause of the row filter expression.</p>"
        },
        "notIn":{
          "shape":"NotInExpression",
          "documentation":"<p>The 'not in' clause of the row filter expression.</p>"
        },
        "notLike":{
          "shape":"NotLikeExpression",
          "documentation":"<p>The 'not like' clause of the row filter expression.</p>"
        }
      },
      "documentation":"<p>The row filter expression.</p>",
      "union":true
    },
    "RowFilterList":{
      "type":"list",
      "member":{"shape":"RowFilter"}
    },
    "RuleAction":{
      "type":"string",
      "enum":[
        "CREATE_LISTING_CHANGE_SET",
        "CREATE_SUBSCRIPTION_REQUEST"
      ]
    },
    "RuleAssetTypeList":{
      "type":"list",
      "member":{"shape":"AssetTypeIdentifier"},
      "min":1
    },
    "RuleDetail":{
      "type":"structure",
      "members":{
        "metadataFormEnforcementDetail":{
          "shape":"MetadataFormEnforcementDetail",
          "documentation":"<p>The enforcement detail of the metadata form.</p>"
        }
      },
      "documentation":"<p>The details of a rule.</p>",
      "union":true
    },
    "RuleId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "RuleName":{
      "type":"string",
      "max":256,
      "min":1,
      "pattern":"^[\\w -]+$",
      "sensitive":true
    },
    "RuleProjectIdentifierList":{
      "type":"list",
      "member":{"shape":"ProjectId"},
      "min":1
    },
    "RuleScope":{
      "type":"structure",
      "members":{
        "assetType":{
          "shape":"AssetTypesForRule",
          "documentation":"<p>The asset type included in the rule scope.</p>"
        },
        "dataProduct":{
          "shape":"Boolean",
          "documentation":"<p>The data product included in the rule scope.</p>"
        },
        "project":{
          "shape":"ProjectsForRule",
          "documentation":"<p>The project included in the rule scope.</p>"
        }
      },
      "documentation":"<p>The scope of a rule.</p>"
    },
    "RuleScopeSelectionMode":{
      "type":"string",
      "enum":[
        "ALL",
        "SPECIFIC"
      ]
    },
    "RuleSummaries":{
      "type":"list",
      "member":{"shape":"RuleSummary"}
    },
    "RuleSummary":{
      "type":"structure",
      "members":{
        "action":{
          "shape":"RuleAction",
          "documentation":"<p>The action of the rule.</p>"
        },
        "identifier":{
          "shape":"RuleId",
          "documentation":"<p>The ID of the rule.</p>"
        },
        "lastUpdatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The timestamp at which the rule was last updated.</p>"
        },
        "name":{
          "shape":"RuleName",
          "documentation":"<p>The name of the rule.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the rule.</p>"
        },
        "ruleType":{
          "shape":"RuleType",
          "documentation":"<p>The type of the rule.</p>"
        },
        "scope":{
          "shape":"RuleScope",
          "documentation":"<p>The scope of the rule.</p>"
        },
        "target":{
          "shape":"RuleTarget",
          "documentation":"<p>The target of the rule.</p>"
        },
        "targetType":{
          "shape":"RuleTargetType",
          "documentation":"<p>The target type of the rule.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp at which the rule was last updated.</p>"
        }
      },
      "documentation":"<p>The summary of the rule.</p>"
    },
    "RuleTarget":{
      "type":"structure",
      "members":{
        "domainUnitTarget":{
          "shape":"DomainUnitTarget",
          "documentation":"<p>The ID of the domain unit.</p>"
        }
      },
      "documentation":"<p>The target of the rule.</p>",
      "union":true
    },
    "RuleTargetType":{
      "type":"string",
      "enum":["DOMAIN_UNIT"]
    },
    "RuleType":{
      "type":"string",
      "enum":["METADATA_FORM_ENFORCEMENT"]
    },
    "RunIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "RunStatisticsForAssets":{
      "type":"structure",
      "members":{
        "added":{
          "shape":"Integer",
          "documentation":"<p>The <code>added</code> statistic for the data source run.</p>"
        },
        "failed":{
          "shape":"Integer",
          "documentation":"<p>The <code>failed</code> statistic for the data source run.</p>"
        },
        "skipped":{
          "shape":"Integer",
          "documentation":"<p>The <code>skipped</code> statistic for the data source run.</p>"
        },
        "unchanged":{
          "shape":"Integer",
          "documentation":"<p>The <code>unchanged</code> statistic for the data source run.</p>"
        },
        "updated":{
          "shape":"Integer",
          "documentation":"<p>The <code>updated</code> statistic for the data source run.</p>"
        }
      },
      "documentation":"<p>The asset statistics from the data source run.</p>"
    },
    "S3AccessGrantLocationId":{
      "type":"string",
      "max":64,
      "min":0,
      "pattern":"^[a-zA-Z0-9\\-]+$"
    },
    "S3Location":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"^s3://.+$"
    },
    "S3LocationList":{
      "type":"list",
      "member":{"shape":"S3Location"},
      "max":20,
      "min":0
    },
    "S3PropertiesInput":{
      "type":"structure",
      "required":["s3Uri"],
      "members":{
        "s3AccessGrantLocationId":{
          "shape":"S3AccessGrantLocationId",
          "documentation":"<p>The Amazon S3 Access Grant location ID that's part of the Amazon S3 properties of a connection.</p>"
        },
        "s3Uri":{
          "shape":"S3Uri",
          "documentation":"<p>The Amazon S3 URI that's part of the Amazon S3 properties of a connection.</p>"
        }
      },
      "documentation":"<p>The Amazon S3 properties of a connection.</p>"
    },
    "S3PropertiesOutput":{
      "type":"structure",
      "required":["s3Uri"],
      "members":{
        "errorMessage":{
          "shape":"String",
          "documentation":"<p>The error message that gets displayed.</p>"
        },
        "s3AccessGrantLocationId":{
          "shape":"S3AccessGrantLocationId",
          "documentation":"<p>The Amazon S3 Access Grant location ID that's part of the Amazon S3 properties of a connection.</p>"
        },
        "s3Uri":{
          "shape":"S3Uri",
          "documentation":"<p>The Amazon S3 URI that's part of the Amazon S3 properties of a connection.</p>"
        },
        "status":{
          "shape":"ConnectionStatus",
          "documentation":"<p>The status of the Amazon S3 connection.</p>"
        }
      },
      "documentation":"<p>The Amazon S3 properties of a connection.</p>"
    },
    "S3PropertiesPatch":{
      "type":"structure",
      "required":["s3Uri"],
      "members":{
        "s3AccessGrantLocationId":{
          "shape":"S3AccessGrantLocationId",
          "documentation":"<p>The Amazon S3 Access Grant location ID that's part of the Amazon S3 properties patch of a connection.</p>"
        },
        "s3Uri":{
          "shape":"S3Uri",
          "documentation":"<p>The Amazon S3 URI that's part of the Amazon S3 properties patch of a connection.</p>"
        }
      },
      "documentation":"<p>The Amazon S3 properties patch of a connection.</p>"
    },
    "S3Uri":{
      "type":"string",
      "max":2048,
      "min":0,
      "pattern":"^s3://.+$"
    },
    "SageMakerAssetType":{
      "type":"string",
      "max":64,
      "min":1
    },
    "SageMakerResourceArn":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:sagemaker:[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]:\\d{12}:[\\w+=,.@-]{1,128}/[\\w+=,.@-]{1,256}$"
    },
    "SageMakerRunConfigurationInput":{
      "type":"structure",
      "required":["trackingAssets"],
      "members":{
        "trackingAssets":{
          "shape":"TrackingAssets",
          "documentation":"<p>The tracking assets of the Amazon SageMaker run.</p>"
        }
      },
      "documentation":"<p>The Amazon SageMaker run configuration.</p>"
    },
    "SageMakerRunConfigurationOutput":{
      "type":"structure",
      "required":["trackingAssets"],
      "members":{
        "accountId":{
          "shape":"SageMakerRunConfigurationOutputAccountIdString",
          "documentation":"<p>The Amazon SageMaker account ID.</p>"
        },
        "region":{
          "shape":"SageMakerRunConfigurationOutputRegionString",
          "documentation":"<p>The Amazon SageMaker Region.</p>"
        },
        "trackingAssets":{
          "shape":"TrackingAssets",
          "documentation":"<p>The tracking assets of the Amazon SageMaker.</p>"
        }
      },
      "documentation":"<p>The Amazon SageMaker run configuration.</p>"
    },
    "SageMakerRunConfigurationOutputAccountIdString":{
      "type":"string",
      "max":12,
      "min":12,
      "pattern":"^\\d{12}$"
    },
    "SageMakerRunConfigurationOutputRegionString":{
      "type":"string",
      "max":16,
      "min":4,
      "pattern":"[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]"
    },
    "ScheduleConfiguration":{
      "type":"structure",
      "members":{
        "schedule":{
          "shape":"CronString",
          "documentation":"<p>The schedule of the data source runs.</p>"
        },
        "timezone":{
          "shape":"Timezone",
          "documentation":"<p>The timezone of the data source run. </p>"
        }
      },
      "documentation":"<p>The details of the schedule of the data source runs.</p>",
      "sensitive":true
    },
    "SearchGroupProfilesInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "groupType"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which you want to search group profiles.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "groupType":{
          "shape":"GroupSearchType",
          "documentation":"<p>The group type for which to search.</p>"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return in a single call to <code>SearchGroupProfiles</code>. When the number of results to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>SearchGroupProfiles</code> to list the next set of results. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchGroupProfiles</code> to list the next set of results.</p>"
        },
        "searchText":{
          "shape":"GroupSearchText",
          "documentation":"<p>Specifies the text for which to search.</p>"
        }
      }
    },
    "SearchGroupProfilesOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"GroupProfileSummaries",
          "documentation":"<p>The results of the <code>SearchGroupProfiles</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchGroupProfiles</code> to list the next set of results.</p>"
        }
      }
    },
    "SearchInItem":{
      "type":"structure",
      "required":["attribute"],
      "members":{
        "attribute":{
          "shape":"Attribute",
          "documentation":"<p>The search attribute.</p>"
        }
      },
      "documentation":"<p>The details of the search.</p>"
    },
    "SearchInList":{
      "type":"list",
      "member":{"shape":"SearchInItem"},
      "max":10,
      "min":1
    },
    "SearchInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "searchScope"
      ],
      "members":{
        "additionalAttributes":{
          "shape":"SearchOutputAdditionalAttributes",
          "documentation":"<p>Specifies additional attributes for the <code>Search</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "filters":{
          "shape":"FilterClause",
          "documentation":"<p>Specifies the search filters.</p>"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return in a single call to <code>Search</code>. When the number of results to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>Search</code> to list the next set of results.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>Search</code> to list the next set of results.</p>"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the owning project specified for the search.</p>"
        },
        "searchIn":{
          "shape":"SearchInList",
          "documentation":"<p>The details of the search.</p>"
        },
        "searchScope":{
          "shape":"InventorySearchScope",
          "documentation":"<p>The scope of the search.</p>"
        },
        "searchText":{
          "shape":"SearchText",
          "documentation":"<p>Specifies the text for which to search.</p>"
        },
        "sort":{
          "shape":"SearchSort",
          "documentation":"<p>Specifies the way in which the search results are to be sorted.</p>"
        }
      }
    },
    "SearchInventoryResultItem":{
      "type":"structure",
      "members":{
        "assetItem":{
          "shape":"AssetItem",
          "documentation":"<p>The asset item included in the search results.</p>"
        },
        "dataProductItem":{
          "shape":"DataProductResultItem",
          "documentation":"<p>The data product.</p>"
        },
        "glossaryItem":{
          "shape":"GlossaryItem",
          "documentation":"<p>The glossary item included in the search results.</p>"
        },
        "glossaryTermItem":{
          "shape":"GlossaryTermItem",
          "documentation":"<p>The glossary term item included in the search results.</p>"
        }
      },
      "documentation":"<p>The details of the search results.</p>",
      "union":true
    },
    "SearchInventoryResultItems":{
      "type":"list",
      "member":{"shape":"SearchInventoryResultItem"}
    },
    "SearchListingsInput":{
      "type":"structure",
      "required":["domainIdentifier"],
      "members":{
        "additionalAttributes":{
          "shape":"SearchOutputAdditionalAttributes",
          "documentation":"<p>Specifies additional attributes for the search.</p>"
        },
        "aggregations":{
          "shape":"AggregationList",
          "documentation":"<p>Enables you to specify one or more attributes to compute and return counts grouped by field values.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain in which to search listings.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "filters":{
          "shape":"FilterClause",
          "documentation":"<p>Specifies the filters for the search of listings.</p>"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return in a single call to <code>SearchListings</code>. When the number of results to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>SearchListings</code> to list the next set of results. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchListings</code> to list the next set of results.</p>"
        },
        "searchIn":{
          "shape":"SearchInList",
          "documentation":"<p>The details of the search.</p>"
        },
        "searchText":{
          "shape":"SearchListingsInputSearchTextString",
          "documentation":"<p>Specifies the text for which to search.</p>"
        },
        "sort":{
          "shape":"SearchSort",
          "documentation":"<p>Specifies the way for sorting the search results.</p>"
        }
      }
    },
    "SearchListingsInputSearchTextString":{
      "type":"string",
      "max":512,
      "min":0
    },
    "SearchListingsOutput":{
      "type":"structure",
      "members":{
        "aggregates":{
          "shape":"AggregationOutputList",
          "documentation":"<p>Contains computed counts grouped by field values based on the requested aggregation attributes for the matching listings.</p>"
        },
        "items":{
          "shape":"SearchResultItems",
          "documentation":"<p>The results of the <code>SearchListings</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchListings</code> to list the next set of results.</p>"
        },
        "totalMatchCount":{
          "shape":"Integer",
          "documentation":"<p>Total number of search results.</p>"
        }
      }
    },
    "SearchOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"SearchInventoryResultItems",
          "documentation":"<p>The results of the <code>Search</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>Search</code> to list the next set of results.</p>"
        },
        "totalMatchCount":{
          "shape":"Integer",
          "documentation":"<p>Total number of search results.</p>"
        }
      }
    },
    "SearchOutputAdditionalAttribute":{
      "type":"string",
      "enum":[
        "FORMS",
        "TIME_SERIES_DATA_POINT_FORMS",
        "TEXT_MATCH_RATIONALE"
      ]
    },
    "SearchOutputAdditionalAttributes":{
      "type":"list",
      "member":{"shape":"SearchOutputAdditionalAttribute"}
    },
    "SearchResultItem":{
      "type":"structure",
      "members":{
        "assetListing":{
          "shape":"AssetListingItem",
          "documentation":"<p>The asset listing included in the results of the <code>SearchListings</code> action.</p>"
        },
        "dataProductListing":{
          "shape":"DataProductListingItem",
          "documentation":"<p>The data product listing.</p>"
        }
      },
      "documentation":"<p>The details of the results of the <code>SearchListings</code> action.</p>",
      "union":true
    },
    "SearchResultItems":{
      "type":"list",
      "member":{"shape":"SearchResultItem"}
    },
    "SearchSort":{
      "type":"structure",
      "required":["attribute"],
      "members":{
        "attribute":{
          "shape":"Attribute",
          "documentation":"<p>The attribute detail of the way to sort search results.</p>"
        },
        "order":{
          "shape":"SortOrder",
          "documentation":"<p>The order detail of the wya to sort search results.</p>"
        }
      },
      "documentation":"<p>The details of the way to sort search results.</p>"
    },
    "SearchText":{
      "type":"string",
      "max":512,
      "min":1
    },
    "SearchTypesInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "managed",
        "searchScope"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to invoke the <code>SearchTypes</code> action.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "filters":{
          "shape":"FilterClause",
          "documentation":"<p>The filters for the <code>SearchTypes</code> action.</p>"
        },
        "managed":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether the search is managed.</p>"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return in a single call to <code>SearchTypes</code>. When the number of results to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>SearchTypes</code> to list the next set of results. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchTypes</code> to list the next set of results.</p>"
        },
        "searchIn":{
          "shape":"SearchInList",
          "documentation":"<p>The details of the search.</p>"
        },
        "searchScope":{
          "shape":"TypesSearchScope",
          "documentation":"<p>Specifies the scope of the search for types.</p>"
        },
        "searchText":{
          "shape":"SearchText",
          "documentation":"<p>Specifies the text for which to search.</p>"
        },
        "sort":{
          "shape":"SearchSort",
          "documentation":"<p>The specifies the way to sort the <code>SearchTypes</code> results.</p>"
        }
      }
    },
    "SearchTypesOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"SearchTypesResultItems",
          "documentation":"<p>The results of the <code>SearchTypes</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchTypes</code> to list the next set of results.</p>"
        },
        "totalMatchCount":{
          "shape":"Integer",
          "documentation":"<p>Total number of search results.</p>"
        }
      }
    },
    "SearchTypesResultItem":{
      "type":"structure",
      "members":{
        "assetTypeItem":{
          "shape":"AssetTypeItem",
          "documentation":"<p>The asset type included in the results of the <code>SearchTypes</code> action.</p>"
        },
        "formTypeItem":{
          "shape":"FormTypeData",
          "documentation":"<p>The form type included in the results of the <code>SearchTypes</code> action.</p>"
        },
        "lineageNodeTypeItem":{
          "shape":"LineageNodeTypeItem",
          "documentation":"<p>The details of a data lineage node type.</p>"
        }
      },
      "documentation":"<p>The details of the results of the <code>SearchTypes</code> action.</p>",
      "union":true
    },
    "SearchTypesResultItems":{
      "type":"list",
      "member":{"shape":"SearchTypesResultItem"}
    },
    "SearchUserProfilesInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "userType"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which you want to search user profiles.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return in a single call to <code>SearchUserProfiles</code>. When the number of results to be listed is greater than the value of <code>MaxResults</code>, the response contains a <code>NextToken</code> value that you can use in a subsequent call to <code>SearchUserProfiles</code> to list the next set of results. </p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchUserProfiles</code> to list the next set of results.</p>"
        },
        "searchText":{
          "shape":"UserSearchText",
          "documentation":"<p>Specifies the text for which to search.</p>"
        },
        "userType":{
          "shape":"UserSearchType",
          "documentation":"<p>Specifies the user type for the <code>SearchUserProfiles</code> action.</p>"
        }
      }
    },
    "SearchUserProfilesOutput":{
      "type":"structure",
      "members":{
        "items":{
          "shape":"UserProfileSummaries",
          "documentation":"<p>The results of the <code>SearchUserProfiles</code> action.</p>"
        },
        "nextToken":{
          "shape":"PaginationToken",
          "documentation":"<p>When the number of results is greater than the default value for the <code>MaxResults</code> parameter, or if you explicitly specify a value for <code>MaxResults</code> that is less than the number of results, the response includes a pagination token named <code>NextToken</code>. You can specify this <code>NextToken</code> value in a subsequent call to <code>SearchUserProfiles</code> to list the next set of results.</p>"
        }
      }
    },
    "SecurityGroupIdList":{
      "type":"list",
      "member":{"shape":"SecurityGroupIdListMemberString"},
      "max":50,
      "min":0
    },
    "SecurityGroupIdListMemberString":{
      "type":"string",
      "max":255,
      "min":1
    },
    "SelfGrantStatus":{
      "type":"string",
      "enum":[
        "GRANT_PENDING",
        "REVOKE_PENDING",
        "GRANT_IN_PROGRESS",
        "REVOKE_IN_PROGRESS",
        "GRANTED",
        "GRANT_FAILED",
        "REVOKE_FAILED"
      ]
    },
    "SelfGrantStatusDetail":{
      "type":"structure",
      "required":[
        "databaseName",
        "status"
      ],
      "members":{
        "databaseName":{
          "shape":"SelfGrantStatusDetailDatabaseNameString",
          "documentation":"<p>The name of the database used for the data source.</p>"
        },
        "failureCause":{
          "shape":"String",
          "documentation":"<p>The reason for why the operation failed.</p>"
        },
        "schemaName":{
          "shape":"SelfGrantStatusDetailSchemaNameString",
          "documentation":"<p>The name of the schema used in the data source.</p>"
        },
        "status":{
          "shape":"SelfGrantStatus",
          "documentation":"<p>The self granting status of the data source.</p>"
        }
      },
      "documentation":"<p>The details for the self granting status.</p>"
    },
    "SelfGrantStatusDetailDatabaseNameString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "SelfGrantStatusDetailSchemaNameString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "SelfGrantStatusDetails":{
      "type":"list",
      "member":{"shape":"SelfGrantStatusDetail"}
    },
    "SelfGrantStatusOutput":{
      "type":"structure",
      "members":{
        "glueSelfGrantStatus":{
          "shape":"GlueSelfGrantStatusOutput",
          "documentation":"<p>The details for the self granting status for a Glue data source.</p>"
        },
        "redshiftSelfGrantStatus":{
          "shape":"RedshiftSelfGrantStatusOutput",
          "documentation":"<p>The details for the self granting status for an Amazon Redshift data source.</p>"
        }
      },
      "documentation":"<p>The details for the self granting status for a data source.</p>",
      "union":true
    },
    "ServiceQuotaExceededException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The request has exceeded the specified service quota.</p>",
      "error":{
        "httpStatusCode":402,
        "senderFault":true
      },
      "exception":true
    },
    "ShortDescription":{
      "type":"string",
      "max":1024,
      "min":0,
      "sensitive":true
    },
    "SingleSignOn":{
      "type":"structure",
      "members":{
        "idcInstanceArn":{
          "shape":"SingleSignOnIdcInstanceArnString",
          "documentation":"<p>The ARN of the IDC instance.</p>"
        },
        "type":{
          "shape":"AuthType",
          "documentation":"<p>The type of single sign-on in Amazon DataZone.</p>"
        },
        "userAssignment":{
          "shape":"UserAssignment",
          "documentation":"<p>The single sign-on user assignment in Amazon DataZone.</p>"
        }
      },
      "documentation":"<p>The single sign-on details in Amazon DataZone.</p>"
    },
    "SingleSignOnIdcInstanceArnString":{
      "type":"string",
      "pattern":"arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}"
    },
    "Smithy":{
      "type":"string",
      "max":100000,
      "min":1
    },
    "SortFieldAccountPool":{
      "type":"string",
      "enum":["NAME"]
    },
    "SortFieldConnection":{
      "type":"string",
      "enum":["NAME"]
    },
    "SortFieldProject":{
      "type":"string",
      "enum":["NAME"]
    },
    "SortKey":{
      "type":"string",
      "enum":[
        "CREATED_AT",
        "UPDATED_AT"
      ]
    },
    "SortOrder":{
      "type":"string",
      "enum":[
        "ASCENDING",
        "DESCENDING"
      ]
    },
    "SparkEmrPropertiesInput":{
      "type":"structure",
      "members":{
        "computeArn":{
          "shape":"SparkEmrPropertiesInputComputeArnString",
          "documentation":"<p>The compute ARN of Spark EMR.</p>"
        },
        "instanceProfileArn":{
          "shape":"SparkEmrPropertiesInputInstanceProfileArnString",
          "documentation":"<p>The instance profile ARN of Spark EMR.</p>"
        },
        "javaVirtualEnv":{
          "shape":"SparkEmrPropertiesInputJavaVirtualEnvString",
          "documentation":"<p>The java virtual env of the Spark EMR.</p>"
        },
        "logUri":{
          "shape":"SparkEmrPropertiesInputLogUriString",
          "documentation":"<p>The log URI of the Spark EMR.</p>"
        },
        "pythonVirtualEnv":{
          "shape":"SparkEmrPropertiesInputPythonVirtualEnvString",
          "documentation":"<p>The Python virtual env of the Spark EMR.</p>"
        },
        "runtimeRole":{
          "shape":"SparkEmrPropertiesInputRuntimeRoleString",
          "documentation":"<p>The runtime role of the Spark EMR.</p>"
        },
        "trustedCertificatesS3Uri":{
          "shape":"SparkEmrPropertiesInputTrustedCertificatesS3UriString",
          "documentation":"<p>The certificates S3 URI of the Spark EMR.</p>"
        }
      },
      "documentation":"<p>The Spark EMR properties.</p>"
    },
    "SparkEmrPropertiesInputComputeArnString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkEmrPropertiesInputInstanceProfileArnString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkEmrPropertiesInputJavaVirtualEnvString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkEmrPropertiesInputLogUriString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkEmrPropertiesInputPythonVirtualEnvString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkEmrPropertiesInputRuntimeRoleString":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]*$"
    },
    "SparkEmrPropertiesInputTrustedCertificatesS3UriString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkEmrPropertiesOutput":{
      "type":"structure",
      "members":{
        "computeArn":{
          "shape":"String",
          "documentation":"<p>The compute ARN of the Spark EMR.</p>"
        },
        "credentials":{
          "shape":"UsernamePassword",
          "documentation":"<p>The credentials of the Spark EMR.</p>"
        },
        "credentialsExpiration":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The credential expiration of the Spark EMR.</p>"
        },
        "governanceType":{
          "shape":"GovernanceType",
          "documentation":"<p>The governance type of the Spark EMR.</p>"
        },
        "instanceProfileArn":{
          "shape":"String",
          "documentation":"<p>The instance profile ARN of the Spark EMR.</p>"
        },
        "javaVirtualEnv":{
          "shape":"String",
          "documentation":"<p>The Java virtual env of the Spark EMR.</p>"
        },
        "livyEndpoint":{
          "shape":"String",
          "documentation":"<p>The livy endpoint of the Spark EMR.</p>"
        },
        "logUri":{
          "shape":"String",
          "documentation":"<p>The log URI of the Spark EMR.</p>"
        },
        "pythonVirtualEnv":{
          "shape":"String",
          "documentation":"<p>The Python virtual env of the Spark EMR.</p>"
        },
        "runtimeRole":{
          "shape":"String",
          "documentation":"<p>The runtime role of the Spark EMR.</p>"
        },
        "trustedCertificatesS3Uri":{
          "shape":"String",
          "documentation":"<p>The trusted certificate S3 URL of the Spark EMR.</p>"
        }
      },
      "documentation":"<p>The Spark EMR properties.</p>"
    },
    "SparkEmrPropertiesPatch":{
      "type":"structure",
      "members":{
        "computeArn":{
          "shape":"SparkEmrPropertiesPatchComputeArnString",
          "documentation":"<p>The compute ARN in the Spark EMR properties patch.</p>"
        },
        "instanceProfileArn":{
          "shape":"SparkEmrPropertiesPatchInstanceProfileArnString",
          "documentation":"<p>The instance profile ARN in the Spark EMR properties patch.</p>"
        },
        "javaVirtualEnv":{
          "shape":"SparkEmrPropertiesPatchJavaVirtualEnvString",
          "documentation":"<p>The Java virtual evn in the Spark EMR properties patch.</p>"
        },
        "logUri":{
          "shape":"SparkEmrPropertiesPatchLogUriString",
          "documentation":"<p>The log URI in the Spark EMR properties patch.</p>"
        },
        "pythonVirtualEnv":{
          "shape":"SparkEmrPropertiesPatchPythonVirtualEnvString",
          "documentation":"<p>The Python virtual env in the Spark EMR properties patch.</p>"
        },
        "runtimeRole":{
          "shape":"SparkEmrPropertiesPatchRuntimeRoleString",
          "documentation":"<p>The runtime role in the Spark EMR properties patch.</p>"
        },
        "trustedCertificatesS3Uri":{
          "shape":"SparkEmrPropertiesPatchTrustedCertificatesS3UriString",
          "documentation":"<p>The trusted certificates S3 URI in the Spark EMR properties patch.</p>"
        }
      },
      "documentation":"<p>The Spark EMR properties patch.</p>"
    },
    "SparkEmrPropertiesPatchComputeArnString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkEmrPropertiesPatchInstanceProfileArnString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkEmrPropertiesPatchJavaVirtualEnvString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkEmrPropertiesPatchLogUriString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkEmrPropertiesPatchPythonVirtualEnvString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkEmrPropertiesPatchRuntimeRoleString":{
      "type":"string",
      "pattern":"^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]*$"
    },
    "SparkEmrPropertiesPatchTrustedCertificatesS3UriString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkGlueArgs":{
      "type":"structure",
      "members":{
        "connection":{
          "shape":"String",
          "documentation":"<p>The connection in the Spark Amazon Web Services Glue args.</p>"
        }
      },
      "documentation":"<p>The Spark Amazon Web Services Glue args.</p>"
    },
    "SparkGluePropertiesInput":{
      "type":"structure",
      "members":{
        "additionalArgs":{
          "shape":"SparkGlueArgs",
          "documentation":"<p>The additional args in the Spark Amazon Web Services Glue properties.</p>"
        },
        "glueConnectionName":{
          "shape":"SparkGluePropertiesInputGlueConnectionNameString",
          "documentation":"<p>The Amazon Web Services Glue connection name in the Spark Amazon Web Services Glue properties.</p>"
        },
        "glueVersion":{
          "shape":"SparkGluePropertiesInputGlueVersionString",
          "documentation":"<p>The Amazon Web Services Glue version in the Spark Amazon Web Services Glue properties.</p>"
        },
        "idleTimeout":{
          "shape":"Integer",
          "documentation":"<p>The idle timeout in the Spark Amazon Web Services Glue properties.</p>"
        },
        "javaVirtualEnv":{
          "shape":"SparkGluePropertiesInputJavaVirtualEnvString",
          "documentation":"<p>The Java virtual env in the Spark Amazon Web Services Glue properties. </p>"
        },
        "numberOfWorkers":{
          "shape":"Integer",
          "documentation":"<p>The number of workers in the Spark Amazon Web Services Glue properties. </p>"
        },
        "pythonVirtualEnv":{
          "shape":"SparkGluePropertiesInputPythonVirtualEnvString",
          "documentation":"<p>The Python virtual env in the Spark Amazon Web Services Glue properties. </p>"
        },
        "workerType":{
          "shape":"SparkGluePropertiesInputWorkerTypeString",
          "documentation":"<p>The worker type in the Spark Amazon Web Services Glue properties. </p>"
        }
      },
      "documentation":"<p>The Spark Amazon Web Services Glue properties. </p>"
    },
    "SparkGluePropertiesInputGlueConnectionNameString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkGluePropertiesInputGlueVersionString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkGluePropertiesInputJavaVirtualEnvString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkGluePropertiesInputPythonVirtualEnvString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkGluePropertiesInputWorkerTypeString":{
      "type":"string",
      "max":256,
      "min":0
    },
    "SparkGluePropertiesOutput":{
      "type":"structure",
      "members":{
        "additionalArgs":{
          "shape":"SparkGlueArgs",
          "documentation":"<p>The additional args in the Spark Amazon Web Services Glue properties. </p>"
        },
        "glueConnectionName":{
          "shape":"String",
          "documentation":"<p>The Amazon Web Services Glue connection name in the Spark Amazon Web Services Glue properties. </p>"
        },
        "glueVersion":{
          "shape":"String",
          "documentation":"<p>The Amazon Web Services Glue version in the Spark Amazon Web Services Glue properties. </p>"
        },
        "idleTimeout":{
          "shape":"Integer",
          "documentation":"<p>The idle timeout in the Spark Amazon Web Services Glue properties. </p>"
        },
        "javaVirtualEnv":{
          "shape":"String",
          "documentation":"<p>The Java virtual env in the Spark Amazon Web Services Glue properties. </p>"
        },
        "numberOfWorkers":{
          "shape":"Integer",
          "documentation":"<p>The number of workers in the Spark Amazon Web Services Glue properties. </p>"
        },
        "pythonVirtualEnv":{
          "shape":"String",
          "documentation":"<p>The Python virtual env in the Spark Amazon Web Services Glue properties. </p>"
        },
        "workerType":{
          "shape":"String",
          "documentation":"<p>The worker type in the Spark Amazon Web Services Glue properties. </p>"
        }
      },
      "documentation":"<p>The Spark Amazon Web Services Glue properties. </p>"
    },
    "SsoUserProfileDetails":{
      "type":"structure",
      "members":{
        "firstName":{
          "shape":"FirstName",
          "documentation":"<p>The first name included in the single sign-on details of the user profile.</p>"
        },
        "lastName":{
          "shape":"LastName",
          "documentation":"<p>The last name included in the single sign-on details of the user profile.</p>"
        },
        "username":{
          "shape":"UserProfileName",
          "documentation":"<p>The username included in the single sign-on details of the user profile.</p>"
        }
      },
      "documentation":"<p>The single sign-on details of the user profile.</p>"
    },
    "StartDataSourceRunInput":{
      "type":"structure",
      "required":[
        "dataSourceIdentifier",
        "domainIdentifier"
      ],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "dataSourceIdentifier":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source.</p>",
          "location":"uri",
          "locationName":"dataSourceIdentifier"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to start a data source run.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        }
      }
    },
    "StartDataSourceRunOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "dataSourceId",
        "domainId",
        "id",
        "projectId",
        "status",
        "type",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when data source run was created.</p>"
        },
        "dataSourceConfigurationSnapshot":{
          "shape":"String",
          "documentation":"<p>The configuration snapshot of the data source that is being run.</p>"
        },
        "dataSourceId":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which to start a data source run.</p>"
        },
        "errorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"DataSourceRunId",
          "documentation":"<p>The identifier of the data source run.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project.</p>"
        },
        "runStatisticsForAssets":{
          "shape":"RunStatisticsForAssets",
          "documentation":"<p>Specifies run statistics for assets.</p>"
        },
        "startedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source run was started.</p>"
        },
        "status":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The status of the data source run.</p>"
        },
        "stoppedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source run was stopped.</p>"
        },
        "type":{
          "shape":"DataSourceRunType",
          "documentation":"<p>The type of the data source run.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source run was updated.</p>"
        }
      }
    },
    "StartMetadataGenerationRunInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "owningProjectIdentifier",
        "target",
        "type"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier to ensure idempotency of the request. This field is automatically populated if not provided.</p>",
          "idempotencyToken":true
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where you want to start a metadata generation run.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "owningProjectIdentifier":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns the asset for which you want to start a metadata generation run.</p>"
        },
        "target":{
          "shape":"MetadataGenerationRunTarget",
          "documentation":"<p>The asset for which you want to start a metadata generation run.</p>"
        },
        "type":{
          "shape":"MetadataGenerationRunType",
          "documentation":"<p>The type of the metadata generation run.</p>"
        }
      }
    },
    "StartMetadataGenerationRunOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the metadata generation run was started.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The ID of the user who started the metadata generation run.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain in which the metadata generation run was started.</p>"
        },
        "id":{
          "shape":"MetadataGenerationRunIdentifier",
          "documentation":"<p>The ID of the metadata generation run.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The ID of the project that owns the asset for which the metadata generation run was started.</p>"
        },
        "status":{
          "shape":"MetadataGenerationRunStatus",
          "documentation":"<p>The status of the metadata generation run.</p>"
        },
        "type":{
          "shape":"MetadataGenerationRunType",
          "documentation":"<p>The type of the metadata generation run.</p>"
        }
      }
    },
    "Status":{
      "type":"string",
      "enum":[
        "ENABLED",
        "DISABLED"
      ]
    },
    "String":{"type":"string"},
    "StringList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "SubnetId":{
      "type":"string",
      "max":32,
      "min":0,
      "pattern":"^subnet-[a-z0-9]+$"
    },
    "SubnetIdList":{
      "type":"list",
      "member":{"shape":"SubnetId"},
      "max":50,
      "min":1
    },
    "SubscribedAsset":{
      "type":"structure",
      "required":[
        "assetId",
        "assetRevision",
        "status"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of the asset for which the subscription grant is created.</p>"
        },
        "assetRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the asset for which the subscription grant is created.</p>"
        },
        "assetScope":{
          "shape":"AssetScope",
          "documentation":"<p>The asset scope of the subscribed asset.</p>"
        },
        "failureCause":{
          "shape":"FailureCause",
          "documentation":"<p>The failure cause included in the details of the asset for which the subscription grant is created.</p>"
        },
        "failureTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The failure timestamp included in the details of the asset for which the subscription grant is created.</p>"
        },
        "grantedTimestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of when the subscription grant to the asset is created.</p>"
        },
        "status":{
          "shape":"SubscriptionGrantStatus",
          "documentation":"<p>The status of the asset for which the subscription grant is created.</p>"
        },
        "targetName":{
          "shape":"String",
          "documentation":"<p>The target name of the asset for which the subscription grant is created.</p>"
        }
      },
      "documentation":"<p>The details of the asset for which the subscription grant is created.</p>"
    },
    "SubscribedAssetListing":{
      "type":"structure",
      "members":{
        "assetScope":{
          "shape":"AssetScope",
          "documentation":"<p>The asset scope of the subscribed asset listing.</p>"
        },
        "entityId":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of the published asset for which the subscription grant is created.</p>"
        },
        "entityRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the published asset for which the subscription grant is created.</p>"
        },
        "entityType":{
          "shape":"TypeName",
          "documentation":"<p>The type of the published asset for which the subscription grant is created.</p>"
        },
        "forms":{
          "shape":"Forms",
          "documentation":"<p>The forms attached to the published asset for which the subscription grant is created.</p>"
        },
        "glossaryTerms":{
          "shape":"DetailedGlossaryTerms",
          "documentation":"<p>The glossary terms attached to the published asset for which the subscription grant is created.</p>"
        }
      },
      "documentation":"<p>The details of the published asset for which the subscription grant is created.</p>"
    },
    "SubscribedAssets":{
      "type":"list",
      "member":{"shape":"SubscribedAsset"}
    },
    "SubscribedListing":{
      "type":"structure",
      "required":[
        "description",
        "id",
        "item",
        "name",
        "ownerProjectId"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the published asset for which the subscription grant is created.</p>"
        },
        "id":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of the published asset for which the subscription grant is created.</p>"
        },
        "item":{
          "shape":"SubscribedListingItem",
          "documentation":"<p>The published asset for which the subscription grant is created.</p>"
        },
        "name":{
          "shape":"ListingName",
          "documentation":"<p>The name of the published asset for which the subscription grant is created.</p>"
        },
        "ownerProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project of the published asset for which the subscription grant is created.</p>"
        },
        "ownerProjectName":{
          "shape":"String",
          "documentation":"<p>The name of the project that owns the published asset for which the subscription grant is created.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the published asset for which the subscription grant is created.</p>"
        }
      },
      "documentation":"<p>The details of the published asset for which the subscription grant is created.</p>"
    },
    "SubscribedListingInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "identifier":{
          "shape":"ListingId",
          "documentation":"<p>The identifier of the published asset for which the subscription grant is to be created.</p>"
        }
      },
      "documentation":"<p>The published asset for which the subscription grant is to be created.</p>"
    },
    "SubscribedListingInputs":{
      "type":"list",
      "member":{"shape":"SubscribedListingInput"},
      "max":1,
      "min":1
    },
    "SubscribedListingItem":{
      "type":"structure",
      "members":{
        "assetListing":{
          "shape":"SubscribedAssetListing",
          "documentation":"<p>The asset for which the subscription grant is created.</p>"
        },
        "productListing":{
          "shape":"SubscribedProductListing",
          "documentation":"<p>The data product listing.</p>"
        }
      },
      "documentation":"<p>The published asset for which the subscription grant is created.</p>",
      "union":true
    },
    "SubscribedPrincipal":{
      "type":"structure",
      "members":{
        "project":{
          "shape":"SubscribedProject",
          "documentation":"<p>The project that has the subscription grant.</p>"
        }
      },
      "documentation":"<p>The principal that has the subscription grant for the asset.</p>",
      "union":true
    },
    "SubscribedPrincipalInput":{
      "type":"structure",
      "members":{
        "project":{
          "shape":"SubscribedProjectInput",
          "documentation":"<p>The project that is to be given a subscription grant.</p>"
        }
      },
      "documentation":"<p>The principal that is to be given a subscriptiong grant.</p>",
      "union":true
    },
    "SubscribedPrincipalInputs":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipalInput"},
      "max":1,
      "min":1
    },
    "SubscribedProductListing":{
      "type":"structure",
      "members":{
        "assetListings":{
          "shape":"AssetInDataProductListingItems",
          "documentation":"<p>The data assets of the data product listing.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the data product listing.</p>"
        },
        "entityId":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the data product listing.</p>"
        },
        "entityRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the data product listing.</p>"
        },
        "glossaryTerms":{
          "shape":"DetailedGlossaryTerms",
          "documentation":"<p>The glossary terms of the data product listing.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the data product listing.</p>"
        }
      },
      "documentation":"<p>The data product listing.</p>"
    },
    "SubscribedProject":{
      "type":"structure",
      "members":{
        "id":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that has the subscription grant.</p>"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of the project that has the subscription grant.</p>"
        }
      },
      "documentation":"<p>The project that has the subscription grant.</p>"
    },
    "SubscribedProjectInput":{
      "type":"structure",
      "members":{
        "identifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that is to be given a subscription grant.</p>"
        }
      },
      "documentation":"<p>The project that is to be given a subscription grant.</p>"
    },
    "SubscriptionGrantId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "SubscriptionGrantOverallStatus":{
      "type":"string",
      "enum":[
        "PENDING",
        "IN_PROGRESS",
        "GRANT_FAILED",
        "REVOKE_FAILED",
        "GRANT_AND_REVOKE_FAILED",
        "COMPLETED",
        "INACCESSIBLE"
      ]
    },
    "SubscriptionGrantStatus":{
      "type":"string",
      "enum":[
        "GRANT_PENDING",
        "REVOKE_PENDING",
        "GRANT_IN_PROGRESS",
        "REVOKE_IN_PROGRESS",
        "GRANTED",
        "REVOKED",
        "GRANT_FAILED",
        "REVOKE_FAILED"
      ]
    },
    "SubscriptionGrantSummary":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "grantedEntity",
        "id",
        "status",
        "subscriptionTargetId",
        "updatedAt"
      ],
      "members":{
        "assets":{
          "shape":"SubscribedAssets",
          "documentation":"<p>The assets included in the subscription grant.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when a subscription grant was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The datazone user who created the subscription grant.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription grant exists.</p>"
        },
        "grantedEntity":{
          "shape":"GrantedEntity",
          "documentation":"<p>The entity to which the subscription is granted.</p>"
        },
        "id":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The identifier of the subscription grant.</p>"
        },
        "status":{
          "shape":"SubscriptionGrantOverallStatus",
          "documentation":"<p>The status of the subscription grant.</p>"
        },
        "subscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The ID of the subscription.</p>",
          "deprecated":true,
          "deprecatedMessage":"Multiple subscriptions can exist for a single grant"
        },
        "subscriptionTargetId":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The identifier of the target of the subscription grant.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription grant was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription grant.</p>"
        }
      },
      "documentation":"<p>The details of the subscription grant.</p>"
    },
    "SubscriptionGrants":{
      "type":"list",
      "member":{"shape":"SubscriptionGrantSummary"}
    },
    "SubscriptionId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "SubscriptionRequestId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "SubscriptionRequestStatus":{
      "type":"string",
      "enum":[
        "PENDING",
        "ACCEPTED",
        "REJECTED"
      ]
    },
    "SubscriptionRequestSummary":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "requestReason",
        "status",
        "subscribedListings",
        "subscribedPrincipals",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when a subscription request was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription request.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>The decision comment of the subscription request.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription request exists.</p>"
        },
        "existingSubscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The ID of the existing subscription.</p>"
        },
        "id":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request.</p>"
        },
        "metadataFormsSummary":{
          "shape":"MetadataFormsSummary",
          "documentation":"<p>The summary of the metadata forms.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the subscription request.</p>"
        },
        "reviewerId":{
          "shape":"String",
          "documentation":"<p>The identifier of the subscription request reviewer.</p>"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>The status of the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"SubscriptionRequestSummarySubscribedListingsList",
          "documentation":"<p>The listings included in the subscription request.</p>"
        },
        "subscribedPrincipals":{
          "shape":"SubscriptionRequestSummarySubscribedPrincipalsList",
          "documentation":"<p>The principals included in the subscription request. </p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription request was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The identifier of the Amazon DataZone user who updated the subscription request.</p>"
        }
      },
      "documentation":"<p>The details of the subscription request.</p>"
    },
    "SubscriptionRequestSummarySubscribedListingsList":{
      "type":"list",
      "member":{"shape":"SubscribedListing"},
      "max":1,
      "min":1
    },
    "SubscriptionRequestSummarySubscribedPrincipalsList":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipal"},
      "max":1,
      "min":1
    },
    "SubscriptionRequests":{
      "type":"list",
      "member":{"shape":"SubscriptionRequestSummary"}
    },
    "SubscriptionStatus":{
      "type":"string",
      "enum":[
        "APPROVED",
        "REVOKED",
        "CANCELLED"
      ]
    },
    "SubscriptionSummary":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "status",
        "subscribedListing",
        "subscribedPrincipal",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription exists.</p>"
        },
        "id":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subscription.</p>"
        },
        "retainPermissions":{
          "shape":"Boolean",
          "documentation":"<p>The retain permissions included in the subscription.</p>"
        },
        "status":{
          "shape":"SubscriptionStatus",
          "documentation":"<p>The status of the subscription.</p>"
        },
        "subscribedListing":{
          "shape":"SubscribedListing",
          "documentation":"<p>The listing included in the subscription.</p>"
        },
        "subscribedPrincipal":{
          "shape":"SubscribedPrincipal",
          "documentation":"<p>The principal included in the subscription.</p>"
        },
        "subscriptionRequestId":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request for the subscription.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription.</p>"
        }
      },
      "documentation":"<p>The details of the subscription.</p>"
    },
    "SubscriptionTargetForm":{
      "type":"structure",
      "required":[
        "content",
        "formName"
      ],
      "members":{
        "content":{
          "shape":"String",
          "documentation":"<p>The content of the subscription target configuration.</p>"
        },
        "formName":{
          "shape":"FormName",
          "documentation":"<p>The form name included in the subscription target configuration.</p>"
        }
      },
      "documentation":"<p>The details of the subscription target configuration.</p>"
    },
    "SubscriptionTargetForms":{
      "type":"list",
      "member":{"shape":"SubscriptionTargetForm"}
    },
    "SubscriptionTargetId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "SubscriptionTargetName":{
      "type":"string",
      "max":256,
      "min":1,
      "sensitive":true
    },
    "SubscriptionTargetSummary":{
      "type":"structure",
      "required":[
        "applicableAssetTypes",
        "authorizedPrincipals",
        "createdAt",
        "createdBy",
        "domainId",
        "environmentId",
        "id",
        "name",
        "projectId",
        "provider",
        "subscriptionTargetConfig",
        "type"
      ],
      "members":{
        "applicableAssetTypes":{
          "shape":"ApplicableAssetTypes",
          "documentation":"<p>The asset types included in the subscription target.</p>"
        },
        "authorizedPrincipals":{
          "shape":"AuthorizedPrincipalIdentifiers",
          "documentation":"<p>The authorized principals included in the subscription target.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription target was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription target.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the subscription target exists.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment of the subscription target.</p>"
        },
        "id":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The identifier of the subscription target.</p>"
        },
        "manageAccessRole":{
          "shape":"IamRoleArn",
          "documentation":"<p>The manage access role specified in the subscription target.</p>"
        },
        "name":{
          "shape":"SubscriptionTargetName",
          "documentation":"<p>The name of the subscription target.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project specified in the subscription target.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the subscription target.</p>"
        },
        "subscriptionTargetConfig":{
          "shape":"SubscriptionTargetForms",
          "documentation":"<p>The configuration of the subscription target.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type of the subscription target.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription target was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription target.</p>"
        }
      },
      "documentation":"<p>The details of the subscription target.</p>"
    },
    "SubscriptionTargets":{
      "type":"list",
      "member":{"shape":"SubscriptionTargetSummary"}
    },
    "Subscriptions":{
      "type":"list",
      "member":{"shape":"SubscriptionSummary"}
    },
    "SyntheticTimestamp_date_time":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "TagKey":{
      "type":"string",
      "max":128,
      "min":1,
      "pattern":"^[\\w \\.:/=+@-]+$"
    },
    "TagKeyList":{
      "type":"list",
      "member":{"shape":"TagKey"}
    },
    "TagResourceRequest":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tags"
      ],
      "members":{
        "resourceArn":{
          "shape":"String",
          "documentation":"<p>The ARN of the resource to be tagged in Amazon DataZone.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>Specifies the tags for the <code>TagResource</code> action.</p>"
        }
      }
    },
    "TagResourceResponse":{
      "type":"structure",
      "members":{}
    },
    "TagValue":{
      "type":"string",
      "max":256,
      "min":0,
      "pattern":"^[\\w \\.:/=+@-]*$"
    },
    "Tags":{
      "type":"map",
      "key":{"shape":"TagKey"},
      "value":{"shape":"TagValue"}
    },
    "TargetEntityType":{
      "type":"string",
      "enum":[
        "DOMAIN_UNIT",
        "ENVIRONMENT_BLUEPRINT_CONFIGURATION",
        "ENVIRONMENT_PROFILE",
        "ASSET_TYPE"
      ]
    },
    "TaskId":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "TaskStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "INACTIVE"
      ]
    },
    "TermRelations":{
      "type":"structure",
      "members":{
        "classifies":{
          "shape":"TermRelationsClassifiesList",
          "documentation":"<p>The classifies of the term relations.</p>"
        },
        "isA":{
          "shape":"TermRelationsIsAList",
          "documentation":"<p>The <code>isA</code> property of the term relations.</p>"
        }
      },
      "documentation":"<p>The details of the term relations.</p>"
    },
    "TermRelationsClassifiesList":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":10,
      "min":1
    },
    "TermRelationsIsAList":{
      "type":"list",
      "member":{"shape":"GlossaryTermId"},
      "max":10,
      "min":1
    },
    "TextMatchItem":{
      "type":"structure",
      "members":{
        "attribute":{
          "shape":"Attribute",
          "documentation":"<p>The name of the attribute.</p>"
        },
        "matchOffsets":{
          "shape":"MatchOffsets",
          "documentation":"<p>List of offsets indicating matching terms in the TextMatchItem text.</p>"
        },
        "text":{
          "shape":"String",
          "documentation":"<p>Snippet of attribute text containing highlighted content.</p>"
        }
      },
      "documentation":"<p>A structure indicating matched terms for an attribute.</p>"
    },
    "TextMatches":{
      "type":"list",
      "member":{"shape":"TextMatchItem"}
    },
    "ThrottlingException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The request was denied due to request throttling.</p>",
      "error":{
        "httpStatusCode":429,
        "senderFault":true
      },
      "exception":true,
      "retryable":{"throttling":false}
    },
    "TimeSeriesDataPointFormInput":{
      "type":"structure",
      "required":[
        "formName",
        "timestamp",
        "typeIdentifier"
      ],
      "members":{
        "content":{
          "shape":"TimeSeriesDataPointFormInputContentString",
          "documentation":"<p>The content of the time series data points form.</p>"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series data points form.</p>"
        },
        "timestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of the time series data points form.</p>"
        },
        "typeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The ID of the type of the time series data points form.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision type of the time series data points form.</p>"
        }
      },
      "documentation":"<p>The time series data points form.</p>"
    },
    "TimeSeriesDataPointFormInputContentString":{
      "type":"string",
      "max":500000,
      "min":0
    },
    "TimeSeriesDataPointFormInputList":{
      "type":"list",
      "member":{"shape":"TimeSeriesDataPointFormInput"}
    },
    "TimeSeriesDataPointFormOutput":{
      "type":"structure",
      "required":[
        "formName",
        "timestamp",
        "typeIdentifier"
      ],
      "members":{
        "content":{
          "shape":"TimeSeriesDataPointFormOutputContentString",
          "documentation":"<p>The content of the time series data points form.</p>"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series data points form.</p>"
        },
        "id":{
          "shape":"DataPointIdentifier",
          "documentation":"<p>The ID of the time series data points form.</p>"
        },
        "timestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of the time series data points form.</p>"
        },
        "typeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The ID of the type of the time series data points form.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The revision type of the time series data points form.</p>"
        }
      },
      "documentation":"<p>The time series data points form.</p>"
    },
    "TimeSeriesDataPointFormOutputContentString":{
      "type":"string",
      "max":500000,
      "min":0
    },
    "TimeSeriesDataPointFormOutputList":{
      "type":"list",
      "member":{"shape":"TimeSeriesDataPointFormOutput"}
    },
    "TimeSeriesDataPointIdentifier":{
      "type":"string",
      "pattern":"^[a-zA-Z0-9_-]{1,36}$"
    },
    "TimeSeriesDataPointSummaryFormOutput":{
      "type":"structure",
      "required":[
        "formName",
        "timestamp",
        "typeIdentifier"
      ],
      "members":{
        "contentSummary":{
          "shape":"TimeSeriesDataPointSummaryFormOutputContentSummaryString",
          "documentation":"<p>The content of the summary of the time series data points form.</p>"
        },
        "formName":{
          "shape":"TimeSeriesFormName",
          "documentation":"<p>The name of the time series data points summary form.</p>"
        },
        "id":{
          "shape":"DataPointIdentifier",
          "documentation":"<p>The ID of the time series data points summary form.</p>"
        },
        "timestamp":{
          "shape":"Timestamp",
          "documentation":"<p>The timestamp of the time series data points summary form.</p>"
        },
        "typeIdentifier":{
          "shape":"FormTypeIdentifier",
          "documentation":"<p>The type ID of the time series data points summary form.</p>"
        },
        "typeRevision":{
          "shape":"Revision",
          "documentation":"<p>The type revision of the time series data points summary form.</p>"
        }
      },
      "documentation":"<p>The summary of the time series data points form.</p>"
    },
    "TimeSeriesDataPointSummaryFormOutputContentSummaryString":{
      "type":"string",
      "max":20000,
      "min":0
    },
    "TimeSeriesDataPointSummaryFormOutputList":{
      "type":"list",
      "member":{"shape":"TimeSeriesDataPointSummaryFormOutput"}
    },
    "TimeSeriesEntityType":{
      "type":"string",
      "enum":[
        "ASSET",
        "LISTING"
      ]
    },
    "TimeSeriesFormName":{
      "type":"string",
      "max":128,
      "min":1
    },
    "Timestamp":{"type":"timestamp"},
    "Timezone":{
      "type":"string",
      "enum":[
        "UTC",
        "AFRICA_JOHANNESBURG",
        "AMERICA_MONTREAL",
        "AMERICA_SAO_PAULO",
        "ASIA_BAHRAIN",
        "ASIA_BANGKOK",
        "ASIA_CALCUTTA",
        "ASIA_DUBAI",
        "ASIA_HONG_KONG",
        "ASIA_JAKARTA",
        "ASIA_KUALA_LUMPUR",
        "ASIA_SEOUL",
        "ASIA_SHANGHAI",
        "ASIA_SINGAPORE",
        "ASIA_TAIPEI",
        "ASIA_TOKYO",
        "AUSTRALIA_MELBOURNE",
        "AUSTRALIA_SYDNEY",
        "CANADA_CENTRAL",
        "CET",
        "CST6CDT",
        "ETC_GMT",
        "ETC_GMT0",
        "ETC_GMT_ADD_0",
        "ETC_GMT_ADD_1",
        "ETC_GMT_ADD_10",
        "ETC_GMT_ADD_11",
        "ETC_GMT_ADD_12",
        "ETC_GMT_ADD_2",
        "ETC_GMT_ADD_3",
        "ETC_GMT_ADD_4",
        "ETC_GMT_ADD_5",
        "ETC_GMT_ADD_6",
        "ETC_GMT_ADD_7",
        "ETC_GMT_ADD_8",
        "ETC_GMT_ADD_9",
        "ETC_GMT_NEG_0",
        "ETC_GMT_NEG_1",
        "ETC_GMT_NEG_10",
        "ETC_GMT_NEG_11",
        "ETC_GMT_NEG_12",
        "ETC_GMT_NEG_13",
        "ETC_GMT_NEG_14",
        "ETC_GMT_NEG_2",
        "ETC_GMT_NEG_3",
        "ETC_GMT_NEG_4",
        "ETC_GMT_NEG_5",
        "ETC_GMT_NEG_6",
        "ETC_GMT_NEG_7",
        "ETC_GMT_NEG_8",
        "ETC_GMT_NEG_9",
        "EUROPE_DUBLIN",
        "EUROPE_LONDON",
        "EUROPE_PARIS",
        "EUROPE_STOCKHOLM",
        "EUROPE_ZURICH",
        "ISRAEL",
        "MEXICO_GENERAL",
        "MST7MDT",
        "PACIFIC_AUCKLAND",
        "US_CENTRAL",
        "US_EASTERN",
        "US_MOUNTAIN",
        "US_PACIFIC"
      ]
    },
    "Title":{
      "type":"string",
      "max":1000,
      "min":0,
      "sensitive":true
    },
    "TokenUrlParametersMap":{
      "type":"map",
      "key":{"shape":"TokenUrlParametersMapKeyString"},
      "value":{"shape":"TokenUrlParametersMapValueString"}
    },
    "TokenUrlParametersMapKeyString":{
      "type":"string",
      "max":128,
      "min":1
    },
    "TokenUrlParametersMapValueString":{
      "type":"string",
      "max":512,
      "min":1
    },
    "Topic":{
      "type":"structure",
      "required":[
        "resource",
        "role",
        "subject"
      ],
      "members":{
        "resource":{"shape":"NotificationResource"},
        "role":{
          "shape":"NotificationRole",
          "documentation":"<p>The role of the resource mentioned in a notification.</p>"
        },
        "subject":{
          "shape":"String",
          "documentation":"<p>The subject of the resource mentioned in a notification.</p>"
        }
      },
      "documentation":"<p>The topic of the notification.</p>"
    },
    "TrackingAssetArns":{
      "type":"list",
      "member":{"shape":"SageMakerResourceArn"},
      "max":500,
      "min":0
    },
    "TrackingAssets":{
      "type":"map",
      "key":{"shape":"SageMakerAssetType"},
      "value":{"shape":"TrackingAssetArns"},
      "max":1,
      "min":1
    },
    "TypeName":{
      "type":"string",
      "max":256,
      "min":1,
      "pattern":"^[^\\.]*"
    },
    "TypesSearchScope":{
      "type":"string",
      "enum":[
        "ASSET_TYPE",
        "FORM_TYPE",
        "LINEAGE_NODE_TYPE"
      ]
    },
    "UnauthorizedException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>You do not have permission to perform this action.</p>",
      "error":{
        "httpStatusCode":401,
        "senderFault":true
      },
      "exception":true
    },
    "Unit":{
      "type":"structure",
      "members":{},
      "documentation":"<p>The details of the policy of creating an environment.</p>"
    },
    "UntagResourceRequest":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tagKeys"
      ],
      "members":{
        "resourceArn":{
          "shape":"String",
          "documentation":"<p>The ARN of the resource to be untagged in Amazon DataZone.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tagKeys":{
          "shape":"TagKeyList",
          "documentation":"<p>Specifies the tag keys for the <code>UntagResource</code> action.</p>",
          "location":"querystring",
          "locationName":"tagKeys"
        }
      }
    },
    "UntagResourceResponse":{
      "type":"structure",
      "members":{}
    },
    "UpdateAccountPoolInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "accountSource":{
          "shape":"AccountSource",
          "documentation":"<p>The source of accounts for the account pool. In the current release, it's either a static list of accounts provided by the customer or a custom Amazon Web Services Lambda handler. </p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the account pool that is to be udpated.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The domain ID where the account pool that is to be updated lives.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"AccountPoolId",
          "documentation":"<p>The ID of the account pool that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"AccountPoolName",
          "documentation":"<p>The name of the account pool that is to be updated.</p>"
        },
        "resolutionStrategy":{
          "shape":"ResolutionStrategy",
          "documentation":"<p>The mechanism used to resolve the account selection from the account pool.</p>"
        }
      }
    },
    "UpdateAccountPoolOutput":{
      "type":"structure",
      "required":[
        "accountSource",
        "createdBy"
      ],
      "members":{
        "accountSource":{
          "shape":"AccountSource",
          "documentation":"<p>The source of accounts for the account pool. In the current release, it's either a static list of accounts provided by the customer or a custom Amazon Web Services Lambda handler. </p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp at which the account pool was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the account pool.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the account pool that is to be udpated.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The domain ID where the account pool that is to be updated lives.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The domain ID in which the account pool that is to be updated lives.</p>"
        },
        "id":{
          "shape":"AccountPoolId",
          "documentation":"<p>The ID of the account pool that is to be updated.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp at which the account pool was last updated.</p>"
        },
        "name":{
          "shape":"AccountPoolName",
          "documentation":"<p>The name of the account pool that is to be updated.</p>"
        },
        "resolutionStrategy":{
          "shape":"ResolutionStrategy",
          "documentation":"<p>The mechanism used to resolve the account selection from the account pool.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user who last updated the account pool.</p>"
        }
      }
    },
    "UpdateAssetFilterInput":{
      "type":"structure",
      "required":[
        "assetIdentifier",
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "assetIdentifier":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the data asset.</p>",
          "location":"uri",
          "locationName":"assetIdentifier"
        },
        "configuration":{
          "shape":"AssetFilterConfiguration",
          "documentation":"<p>The configuration of the asset filter.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the asset filter.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to update an asset filter.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"FilterId",
          "documentation":"<p>The ID of the asset filter.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the asset filter.</p>"
        }
      }
    },
    "UpdateAssetFilterOutput":{
      "type":"structure",
      "required":[
        "assetId",
        "configuration",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "assetId":{
          "shape":"AssetId",
          "documentation":"<p>The ID of the data asset.</p>"
        },
        "configuration":{
          "shape":"AssetFilterConfiguration",
          "documentation":"<p>The configuration of the asset filter.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the asset filter was created.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the asset filter.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where the asset filter was created.</p>"
        },
        "effectiveColumnNames":{
          "shape":"ColumnNameList",
          "documentation":"<p>The column names of the asset filter.</p>"
        },
        "effectiveRowFilter":{
          "shape":"String",
          "documentation":"<p>The row filter of the asset filter.</p>"
        },
        "errorMessage":{
          "shape":"String",
          "documentation":"<p>The error message that is displayed if the action is not completed successfully.</p>"
        },
        "id":{
          "shape":"FilterId",
          "documentation":"<p>The ID of the asset filter.</p>"
        },
        "name":{
          "shape":"FilterName",
          "documentation":"<p>The name of the asset filter.</p>"
        },
        "status":{
          "shape":"FilterStatus",
          "documentation":"<p>The status of the asset filter.</p>"
        }
      }
    },
    "UpdateConnectionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "awsLocation":{
          "shape":"AwsLocation",
          "documentation":"<p>The location where a connection is to be updated.</p>"
        },
        "description":{
          "shape":"UpdateConnectionInputDescriptionString",
          "documentation":"<p>The description of a connection.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where a connection is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"ConnectionId",
          "documentation":"<p>The ID of the connection to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "props":{
          "shape":"ConnectionPropertiesPatch",
          "documentation":"<p>The connection props.</p>"
        }
      }
    },
    "UpdateConnectionInputDescriptionString":{
      "type":"string",
      "max":128,
      "min":1,
      "sensitive":true
    },
    "UpdateConnectionOutput":{
      "type":"structure",
      "required":[
        "connectionId",
        "domainId",
        "domainUnitId",
        "name",
        "physicalEndpoints",
        "type"
      ],
      "members":{
        "connectionId":{
          "shape":"ConnectionId",
          "documentation":"<p>The ID of the connection.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The connection description.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where a connection is to be updated.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit where a connection is to be updated.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The ID of the environment where a connection is to be updated.</p>"
        },
        "name":{
          "shape":"ConnectionName",
          "documentation":"<p>The name of the connection.</p>"
        },
        "physicalEndpoints":{
          "shape":"PhysicalEndpoints",
          "documentation":"<p>The physical endpoints of the connection.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The project ID of the connection.</p>"
        },
        "props":{
          "shape":"ConnectionPropertiesOutput",
          "documentation":"<p>The connection props.</p>"
        },
        "type":{
          "shape":"ConnectionType",
          "documentation":"<p>The connection type.</p>"
        }
      }
    },
    "UpdateDataSourceInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "assetFormsInput":{
          "shape":"FormInputList",
          "documentation":"<p>The asset forms to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "configuration":{
          "shape":"DataSourceConfigurationInput",
          "documentation":"<p>The configuration to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain in which to update a data source.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>The enable setting to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "identifier":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "publishOnImport":{
          "shape":"Boolean",
          "documentation":"<p>The publish on import setting to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "recommendation":{
          "shape":"RecommendationConfiguration",
          "documentation":"<p>The recommendation to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "retainPermissionsOnRevokeFailure":{
          "shape":"Boolean",
          "documentation":"<p>Specifies that the granted permissions are retained in case of a self-subscribe functionality failure for a data source.</p>"
        },
        "schedule":{
          "shape":"ScheduleConfiguration",
          "documentation":"<p>The schedule to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        }
      }
    },
    "UpdateDataSourceOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "projectId"
      ],
      "members":{
        "assetFormsOutput":{
          "shape":"FormOutputList",
          "documentation":"<p>The asset forms to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "configuration":{
          "shape":"DataSourceConfigurationOutput",
          "documentation":"<p>The configuration to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "connectionId":{
          "shape":"String",
          "documentation":"<p>The connection ID.</p>"
        },
        "createdAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was updated.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a data source is to be updated.</p>"
        },
        "enableSetting":{
          "shape":"EnableSetting",
          "documentation":"<p>The enable setting to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment in which a data source is to be updated.</p>"
        },
        "errorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "id":{
          "shape":"DataSourceId",
          "documentation":"<p>The identifier of the data source to be updated.</p>"
        },
        "lastRunAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was last run.</p>"
        },
        "lastRunErrorMessage":{
          "shape":"DataSourceErrorMessage",
          "documentation":"<p>The last run error message of the data source.</p>"
        },
        "lastRunStatus":{
          "shape":"DataSourceRunStatus",
          "documentation":"<p>The last run status of the data source.</p>"
        },
        "name":{
          "shape":"Name",
          "documentation":"<p>The name to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project where data source is to be updated.</p>"
        },
        "publishOnImport":{
          "shape":"Boolean",
          "documentation":"<p>The publish on import setting to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "recommendation":{
          "shape":"RecommendationConfiguration",
          "documentation":"<p>The recommendation to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "retainPermissionsOnRevokeFailure":{
          "shape":"Boolean",
          "documentation":"<p>Specifies that the granted permissions are retained in case of a self-subscribe functionality failure for a data source.</p>"
        },
        "schedule":{
          "shape":"ScheduleConfiguration",
          "documentation":"<p>The schedule to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "selfGrantStatus":{
          "shape":"SelfGrantStatusOutput",
          "documentation":"<p>Specifies the status of the self-granting functionality.</p>"
        },
        "status":{
          "shape":"DataSourceStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "type":{
          "shape":"DataSourceType",
          "documentation":"<p>The type to be updated as part of the <code>UpdateDataSource</code> action.</p>"
        },
        "updatedAt":{
          "shape":"DateTime",
          "documentation":"<p>The timestamp of when the data source was updated.</p>"
        }
      }
    },
    "UpdateDomainInput":{
      "type":"structure",
      "required":["identifier"],
      "members":{
        "clientToken":{
          "shape":"String",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true,
          "location":"querystring",
          "locationName":"clientToken"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description to be updated as part of the <code>UpdateDomain</code> action.</p>"
        },
        "domainExecutionRole":{
          "shape":"RoleArn",
          "documentation":"<p>The domain execution role to be updated as part of the <code>UpdateDomain</code> action.</p>"
        },
        "identifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon Web Services domain that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name to be updated as part of the <code>UpdateDomain</code> action.</p>"
        },
        "serviceRole":{
          "shape":"RoleArn",
          "documentation":"<p>The service role of the domain.</p>"
        },
        "singleSignOn":{
          "shape":"SingleSignOn",
          "documentation":"<p>The single sign-on option to be updated as part of the <code>UpdateDomain</code> action.</p>"
        }
      }
    },
    "UpdateDomainOutput":{
      "type":"structure",
      "required":["id"],
      "members":{
        "description":{
          "shape":"String",
          "documentation":"<p>The description to be updated as part of the <code>UpdateDomain</code> action.</p>"
        },
        "domainExecutionRole":{
          "shape":"RoleArn",
          "documentation":"<p>The domain execution role to be updated as part of the <code>UpdateDomain</code> action.</p>"
        },
        "id":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain.</p>"
        },
        "lastUpdatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>Specifies the timestamp of when the domain was last updated.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name to be updated as part of the <code>UpdateDomain</code> action.</p>"
        },
        "rootDomainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the root domain unit.</p>"
        },
        "serviceRole":{
          "shape":"RoleArn",
          "documentation":"<p>The service role of the domain.</p>"
        },
        "singleSignOn":{
          "shape":"SingleSignOn",
          "documentation":"<p>The single sign-on option of the Amazon DataZone domain.</p>"
        }
      }
    },
    "UpdateDomainUnitInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "description":{
          "shape":"DomainUnitDescription",
          "documentation":"<p>The description of the domain unit that you want to update.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to update a domain unit.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit that you want to update.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"DomainUnitName",
          "documentation":"<p>The name of the domain unit that you want to update.</p>"
        }
      }
    },
    "UpdateDomainUnitOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owners"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The time stamp at which the domain unit that you want to update was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the domain unit that you want to update.</p>"
        },
        "description":{
          "shape":"DomainUnitDescription",
          "documentation":"<p>The description of the domain unit that you want to update.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where you want to update the domain unit.</p>"
        },
        "id":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit that you want to update.</p>"
        },
        "lastUpdatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp at which the domain unit was last updated.</p>"
        },
        "lastUpdatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user who last updated the domain unit.</p>"
        },
        "name":{
          "shape":"DomainUnitName",
          "documentation":"<p>The name of the domain unit that you want to update.</p>"
        },
        "owners":{
          "shape":"DomainUnitOwners",
          "documentation":"<p>The owners of the domain unit that you want to update.</p>"
        },
        "parentDomainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the parent domain unit.</p>"
        }
      }
    },
    "UpdateEnvironmentActionInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "identifier"
      ],
      "members":{
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the environment action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The domain ID of the environment action.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID of the environment action.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "identifier":{
          "shape":"String",
          "documentation":"<p>The ID of the environment action.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the environment action.</p>"
        },
        "parameters":{
          "shape":"ActionParameters",
          "documentation":"<p>The parameters of the environment action.</p>"
        }
      }
    },
    "UpdateEnvironmentActionOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "environmentId",
        "id",
        "name",
        "parameters"
      ],
      "members":{
        "description":{
          "shape":"String",
          "documentation":"<p>The description of the environment action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The domain ID of the environment action.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID of the environment action.</p>"
        },
        "id":{
          "shape":"EnvironmentActionId",
          "documentation":"<p>The ID of the environment action.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the environment action.</p>"
        },
        "parameters":{
          "shape":"ActionParameters",
          "documentation":"<p>The parameters of the environment action.</p>"
        }
      }
    },
    "UpdateEnvironmentBlueprintInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "description":{
          "shape":"String",
          "documentation":"<p>The description to be updated as part of the <code>UpdateEnvironmentBlueprint</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which an environment blueprint is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the environment blueprint to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties to be updated as part of the <code>UpdateEnvironmentBlueprint</code> action.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters to be updated as part of the <code>UpdateEnvironmentBlueprint</code> action.</p>"
        }
      }
    },
    "UpdateEnvironmentBlueprintOutput":{
      "type":"structure",
      "required":[
        "id",
        "name",
        "provider",
        "provisioningProperties"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment blueprint was created.</p>"
        },
        "deploymentProperties":{
          "shape":"DeploymentProperties",
          "documentation":"<p>The deployment properties to be updated as part of the <code>UpdateEnvironmentBlueprint</code> action.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description to be updated as part of the <code>UpdateEnvironmentBlueprint</code> action.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms to be updated as part of the <code>UpdateEnvironmentBlueprint</code> action.</p>"
        },
        "id":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the blueprint to be updated.</p>"
        },
        "name":{
          "shape":"EnvironmentBlueprintName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateEnvironmentBlueprint</code> action.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider of the blueprint to be udpated.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties to be updated as part of the <code>UpdateEnvironmentBlueprint</code> action.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the blueprint was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters to be updated as part of the <code>UpdateEnvironmentBlueprint</code> action.</p>"
        }
      }
    },
    "UpdateEnvironmentInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "blueprintVersion":{
          "shape":"String",
          "documentation":"<p>The blueprint version to which the environment should be updated. You can only specify the following string for this parameter: <code>latest</code>.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain in which the environment is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "identifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "userParameters":{
          "shape":"EnvironmentParametersList",
          "documentation":"<p>The user parameters of the environment.</p>"
        }
      }
    },
    "UpdateEnvironmentOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "name",
        "projectId",
        "provider"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The identifier of the Amazon Web Services account in which the environment is to be updated.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services Region in which the environment is updated.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created the environment.</p>"
        },
        "deploymentProperties":{
          "shape":"DeploymentProperties",
          "documentation":"<p>The deployment properties to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the domain in which the environment is to be updated.</p>"
        },
        "environmentActions":{
          "shape":"EnvironmentActionList",
          "documentation":"<p>The environment actions to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The blueprint identifier of the environment.</p>"
        },
        "environmentConfigurationId":{
          "shape":"EnvironmentConfigurationId",
          "documentation":"<p>The configuration ID of the environment.</p>"
        },
        "environmentProfileId":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The profile identifier of the environment.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "id":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment that is to be updated.</p>"
        },
        "lastDeployment":{
          "shape":"Deployment",
          "documentation":"<p>The last deployment of the environment.</p>"
        },
        "name":{
          "shape":"EnvironmentName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The project identifier of the environment.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider identifier of the environment.</p>"
        },
        "provisionedResources":{
          "shape":"ResourceList",
          "documentation":"<p>The provisioned resources to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "provisioningProperties":{
          "shape":"ProvisioningProperties",
          "documentation":"<p>The provisioning properties to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "status":{
          "shape":"EnvironmentStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters to be updated as part of the <code>UpdateEnvironment</code> action.</p>"
        }
      }
    },
    "UpdateEnvironmentProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The Amazon Web Services account in which a specified environment profile is to be udpated.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services Region in which a specified environment profile is to be updated.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>The description to be updated as part of the <code>UpdateEnvironmentProfile</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which an environment profile is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The identifier of the environment profile that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateEnvironmentProfile</code> action.</p>"
        },
        "userParameters":{
          "shape":"EnvironmentParametersList",
          "documentation":"<p>The user parameters to be updated as part of the <code>UpdateEnvironmentProfile</code> action.</p>"
        }
      }
    },
    "UpdateEnvironmentProfileOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "environmentBlueprintId",
        "id",
        "name"
      ],
      "members":{
        "awsAccountId":{
          "shape":"AwsAccountId",
          "documentation":"<p>The Amazon Web Services account in which a specified environment profile is to be udpated.</p>"
        },
        "awsAccountRegion":{
          "shape":"AwsRegion",
          "documentation":"<p>The Amazon Web Services Region in which a specified environment profile is to be updated.</p>"
        },
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment profile was created.</p>"
        },
        "createdBy":{
          "shape":"String",
          "documentation":"<p>The Amazon DataZone user who created the environment profile.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description to be updated as part of the <code>UpdateEnvironmentProfile</code> action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which the environment profile is to be updated.</p>"
        },
        "environmentBlueprintId":{
          "shape":"EnvironmentBlueprintId",
          "documentation":"<p>The identifier of the blueprint of the environment profile that is to be updated.</p>"
        },
        "id":{
          "shape":"EnvironmentProfileId",
          "documentation":"<p>The identifier of the environment profile that is to be udpated.</p>"
        },
        "name":{
          "shape":"EnvironmentProfileName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateEnvironmentProfile</code> action.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project of the environment profile that is to be updated.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the environment profile was updated.</p>"
        },
        "userParameters":{
          "shape":"CustomParameterList",
          "documentation":"<p>The user parameters to be updated as part of the <code>UpdateEnvironmentProfile</code> action.</p>"
        }
      }
    },
    "UpdateGlossaryInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>A unique, case-sensitive identifier that is provided to ensure the idempotency of the request.</p>",
          "idempotencyToken":true
        },
        "description":{
          "shape":"GlossaryDescription",
          "documentation":"<p>The description to be updated as part of the <code>UpdateGlossary</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a business glossary is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"GlossaryId",
          "documentation":"<p>The identifier of the business glossary to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"GlossaryName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateGlossary</code> action.</p>"
        },
        "status":{
          "shape":"GlossaryStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateGlossary</code> action.</p>"
        }
      }
    },
    "UpdateGlossaryOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "id",
        "name",
        "owningProjectId"
      ],
      "members":{
        "description":{
          "shape":"GlossaryDescription",
          "documentation":"<p>The description to be updated as part of the <code>UpdateGlossary</code> action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a business glossary is to be updated.</p>"
        },
        "id":{
          "shape":"GlossaryId",
          "documentation":"<p>The identifier of the business glossary that is to be updated.</p>"
        },
        "name":{
          "shape":"GlossaryName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateGlossary</code> action.</p>"
        },
        "owningProjectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project in which to update a business glossary.</p>"
        },
        "status":{
          "shape":"GlossaryStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateGlossary</code> action.</p>"
        },
        "usageRestrictions":{
          "shape":"GlossaryUsageRestrictions",
          "documentation":"<p>The usage restriction of the restricted glossary.</p>"
        }
      }
    },
    "UpdateGlossaryTermInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a business glossary term is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "glossaryIdentifier":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The identifier of the business glossary in which a term is to be updated.</p>"
        },
        "identifier":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The identifier of the business glossary term that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "longDescription":{
          "shape":"LongDescription",
          "documentation":"<p>The long description to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The short description to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "status":{
          "shape":"GlossaryTermStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "termRelations":{
          "shape":"TermRelations",
          "documentation":"<p>The term relations to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        }
      }
    },
    "UpdateGlossaryTermOutput":{
      "type":"structure",
      "required":[
        "domainId",
        "glossaryId",
        "id",
        "name",
        "status"
      ],
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a business glossary term is to be updated.</p>"
        },
        "glossaryId":{
          "shape":"GlossaryId",
          "documentation":"<p>The identifier of the business glossary in which a term is to be updated.</p>"
        },
        "id":{
          "shape":"GlossaryTermId",
          "documentation":"<p>The identifier of the business glossary term that is to be updated.</p>"
        },
        "longDescription":{
          "shape":"LongDescription",
          "documentation":"<p>The long description to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "name":{
          "shape":"GlossaryTermName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "shortDescription":{
          "shape":"ShortDescription",
          "documentation":"<p>The short description to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "status":{
          "shape":"GlossaryTermStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "termRelations":{
          "shape":"TermRelations",
          "documentation":"<p>The term relations to be updated as part of the <code>UpdateGlossaryTerm</code> action.</p>"
        },
        "usageRestrictions":{
          "shape":"GlossaryUsageRestrictions",
          "documentation":"<p>The usage restriction of a term within a restricted glossary.</p>"
        }
      }
    },
    "UpdateGroupProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "groupIdentifier",
        "status"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a group profile is updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "groupIdentifier":{
          "shape":"GroupIdentifier",
          "documentation":"<p>The identifier of the group profile that is updated.</p>",
          "location":"uri",
          "locationName":"groupIdentifier"
        },
        "status":{
          "shape":"GroupProfileStatus",
          "documentation":"<p>The status of the group profile that is updated.</p>"
        }
      }
    },
    "UpdateGroupProfileOutput":{
      "type":"structure",
      "members":{
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a group profile is updated.</p>"
        },
        "groupName":{
          "shape":"GroupProfileName",
          "documentation":"<p>The name of the group profile that is updated.</p>"
        },
        "id":{
          "shape":"GroupProfileId",
          "documentation":"<p>The identifier of the group profile that is updated.</p>"
        },
        "status":{
          "shape":"GroupProfileStatus",
          "documentation":"<p>The status of the group profile that is updated.</p>"
        }
      }
    },
    "UpdateProjectInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description to be updated as part of the <code>UpdateProject</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain where a project is being updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit.</p>"
        },
        "environmentDeploymentDetails":{
          "shape":"EnvironmentDeploymentDetails",
          "documentation":"<p>The environment deployment details of the project.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms to be updated as part of the <code>UpdateProject</code> action.</p>"
        },
        "identifier":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateProject</code> action.</p>"
        },
        "projectProfileVersion":{
          "shape":"String",
          "documentation":"<p>The project profile version to which the project should be updated. You can only specify the following string for this parameter: <code>latest</code>.</p>"
        },
        "userParameters":{
          "shape":"EnvironmentConfigurationUserParametersList",
          "documentation":"<p>The user parameters of the project.</p>"
        }
      }
    },
    "UpdateProjectOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the project.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the project that is to be updated.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a project is updated.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit.</p>"
        },
        "environmentDeploymentDetails":{
          "shape":"EnvironmentDeploymentDetails",
          "documentation":"<p>The environment deployment details of the project.</p>"
        },
        "failureReasons":{
          "shape":"FailureReasons",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "glossaryTerms":{
          "shape":"GlossaryTerms",
          "documentation":"<p>The glossary terms of the project that are to be updated.</p>"
        },
        "id":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project that is to be updated.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp of when the project was last updated.</p>"
        },
        "name":{
          "shape":"ProjectName",
          "documentation":"<p>The name of the project that is to be updated.</p>"
        },
        "projectProfileId":{
          "shape":"ProjectProfileId",
          "documentation":"<p>The ID of the project profile.</p>"
        },
        "projectStatus":{
          "shape":"ProjectStatus",
          "documentation":"<p>The status of the project.</p>"
        },
        "userParameters":{
          "shape":"EnvironmentConfigurationUserParametersList",
          "documentation":"<p>The user parameters of the project.</p>"
        }
      }
    },
    "UpdateProjectProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of a project profile.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where a project profile is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "domainUnitIdentifier":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit where a project profile is to be updated.</p>"
        },
        "environmentConfigurations":{
          "shape":"EnvironmentConfigurationsList",
          "documentation":"<p>The environment configurations of a project profile.</p>"
        },
        "identifier":{
          "shape":"ProjectProfileId",
          "documentation":"<p>The ID of a project profile that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "name":{
          "shape":"ProjectProfileName",
          "documentation":"<p>The name of a project profile.</p>"
        },
        "status":{
          "shape":"Status",
          "documentation":"<p>The status of a project profile.</p>"
        }
      }
    },
    "UpdateProjectProfileOutput":{
      "type":"structure",
      "required":[
        "createdBy",
        "domainId",
        "id",
        "name"
      ],
      "members":{
        "createdAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp at which a project profile is created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created a project profile.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of a project profile.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain where project profile is to be updated.</p>"
        },
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The domain unit ID of the project profile to be updated.</p>"
        },
        "environmentConfigurations":{
          "shape":"EnvironmentConfigurationsList",
          "documentation":"<p>The environment configurations of a project profile.</p>"
        },
        "id":{
          "shape":"ProjectProfileId",
          "documentation":"<p>The ID of the project profile.</p>"
        },
        "lastUpdatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The timestamp at which a project profile was last updated.</p>"
        },
        "name":{
          "shape":"ProjectProfileName",
          "documentation":"<p>The name of the project profile.</p>"
        },
        "status":{
          "shape":"Status",
          "documentation":"<p>The status of the project profile.</p>"
        }
      }
    },
    "UpdateRuleInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier"
      ],
      "members":{
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the rule.</p>"
        },
        "detail":{
          "shape":"RuleDetail",
          "documentation":"<p>The detail of the rule.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the domain in which a rule is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"RuleId",
          "documentation":"<p>The ID of the rule that is to be updated</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "includeChildDomainUnits":{
          "shape":"Boolean",
          "documentation":"<p>Specifies whether to update this rule in the child domain units.</p>"
        },
        "name":{
          "shape":"RuleName",
          "documentation":"<p>The name of the rule.</p>"
        },
        "scope":{
          "shape":"RuleScope",
          "documentation":"<p>The scrope of the rule.</p>"
        }
      }
    },
    "UpdateRuleOutput":{
      "type":"structure",
      "required":[
        "action",
        "createdAt",
        "createdBy",
        "detail",
        "identifier",
        "lastUpdatedBy",
        "name",
        "revision",
        "ruleType",
        "scope",
        "target",
        "updatedAt"
      ],
      "members":{
        "action":{
          "shape":"RuleAction",
          "documentation":"<p>The action of the rule.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp at which the rule was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user who created the rule.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the rule.</p>"
        },
        "detail":{
          "shape":"RuleDetail",
          "documentation":"<p>The detail of the rule.</p>"
        },
        "identifier":{
          "shape":"RuleId",
          "documentation":"<p>The ID of the rule.</p>"
        },
        "lastUpdatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The timestamp at which the rule was last updated.</p>"
        },
        "name":{
          "shape":"RuleName",
          "documentation":"<p>The name of the rule.</p>"
        },
        "revision":{
          "shape":"Revision",
          "documentation":"<p>The revision of the rule.</p>"
        },
        "ruleType":{
          "shape":"RuleType",
          "documentation":"<p>The type of the rule.</p>"
        },
        "scope":{
          "shape":"RuleScope",
          "documentation":"<p>The scope of the rule.</p>"
        },
        "target":{
          "shape":"RuleTarget",
          "documentation":"<p>The target of the rule.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp at which the rule was last updated.</p>"
        }
      }
    },
    "UpdateSubscriptionGrantStatusInput":{
      "type":"structure",
      "required":[
        "assetIdentifier",
        "domainIdentifier",
        "identifier",
        "status"
      ],
      "members":{
        "assetIdentifier":{
          "shape":"AssetId",
          "documentation":"<p>The identifier of the asset the subscription grant status of which is to be updated.</p>",
          "location":"uri",
          "locationName":"assetIdentifier"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription grant status is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "failureCause":{
          "shape":"FailureCause",
          "documentation":"<p>Specifies the error message that is returned if the operation cannot be successfully completed.</p>"
        },
        "identifier":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The identifier of the subscription grant the status of which is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "status":{
          "shape":"SubscriptionGrantStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateSubscriptionGrantStatus</code> action.</p>"
        },
        "targetName":{
          "shape":"String",
          "documentation":"<p>The target name to be updated as part of the <code>UpdateSubscriptionGrantStatus</code> action.</p>"
        }
      }
    },
    "UpdateSubscriptionGrantStatusOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "grantedEntity",
        "id",
        "status",
        "subscriptionTargetId",
        "updatedAt"
      ],
      "members":{
        "assets":{
          "shape":"SubscribedAssets",
          "documentation":"<p>The details of the asset for which the subscription grant is created.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription grant status was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone domain user who created the subscription grant status.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription grant status is to be updated.</p>"
        },
        "grantedEntity":{
          "shape":"GrantedEntity",
          "documentation":"<p>The granted entity to be updated as part of the <code>UpdateSubscriptionGrantStatus</code> action.</p>"
        },
        "id":{
          "shape":"SubscriptionGrantId",
          "documentation":"<p>The identifier of the subscription grant.</p>"
        },
        "status":{
          "shape":"SubscriptionGrantOverallStatus",
          "documentation":"<p>The status to be updated as part of the <code>UpdateSubscriptionGrantStatus</code> action.</p>"
        },
        "subscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The identifier of the subscription.</p>",
          "deprecated":true,
          "deprecatedMessage":"Multiple subscriptions can exist for a single grant"
        },
        "subscriptionTargetId":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>The identifier of the subscription target whose subscription grant status is to be updated.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription grant status is to be updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription grant status.</p>"
        }
      }
    },
    "UpdateSubscriptionRequestInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "identifier",
        "requestReason"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription request is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the <code>UpdateSubscriptionRequest</code> action.</p>"
        }
      }
    },
    "UpdateSubscriptionRequestOutput":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "domainId",
        "id",
        "requestReason",
        "status",
        "subscribedListings",
        "subscribedPrincipals",
        "updatedAt"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when the subscription request was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription request.</p>"
        },
        "decisionComment":{
          "shape":"DecisionComment",
          "documentation":"<p>The decision comment of the <code>UpdateSubscriptionRequest</code> action.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription request is to be updated.</p>"
        },
        "existingSubscriptionId":{
          "shape":"SubscriptionId",
          "documentation":"<p>The ID of the existing subscription.</p>"
        },
        "id":{
          "shape":"SubscriptionRequestId",
          "documentation":"<p>The identifier of the subscription request that is to be updated.</p>"
        },
        "metadataForms":{
          "shape":"MetadataForms",
          "documentation":"<p>Metadata forms included in the subscription request.</p>"
        },
        "requestReason":{
          "shape":"RequestReason",
          "documentation":"<p>The reason for the <code>UpdateSubscriptionRequest</code> action.</p>"
        },
        "reviewerId":{
          "shape":"String",
          "documentation":"<p>The identifier of the Amazon DataZone user who reviews the subscription request.</p>"
        },
        "status":{
          "shape":"SubscriptionRequestStatus",
          "documentation":"<p>The status of the subscription request.</p>"
        },
        "subscribedListings":{
          "shape":"UpdateSubscriptionRequestOutputSubscribedListingsList",
          "documentation":"<p>The subscribed listings of the subscription request.</p>"
        },
        "subscribedPrincipals":{
          "shape":"UpdateSubscriptionRequestOutputSubscribedPrincipalsList",
          "documentation":"<p>The subscribed principals of the subscription request.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription request was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription request.</p>"
        }
      }
    },
    "UpdateSubscriptionRequestOutputSubscribedListingsList":{
      "type":"list",
      "member":{"shape":"SubscribedListing"},
      "max":1,
      "min":1
    },
    "UpdateSubscriptionRequestOutputSubscribedPrincipalsList":{
      "type":"list",
      "member":{"shape":"SubscribedPrincipal"},
      "max":1,
      "min":1
    },
    "UpdateSubscriptionTargetInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "environmentIdentifier",
        "identifier"
      ],
      "members":{
        "applicableAssetTypes":{
          "shape":"ApplicableAssetTypes",
          "documentation":"<p>The applicable asset types to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "authorizedPrincipals":{
          "shape":"AuthorizedPrincipalIdentifiers",
          "documentation":"<p>The authorized principals to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription target is to be updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "environmentIdentifier":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment in which a subscription target is to be updated.</p>",
          "location":"uri",
          "locationName":"environmentIdentifier"
        },
        "identifier":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>Identifier of the subscription target that is to be updated.</p>",
          "location":"uri",
          "locationName":"identifier"
        },
        "manageAccessRole":{
          "shape":"IamRoleArn",
          "documentation":"<p>The manage access role to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "name":{
          "shape":"SubscriptionTargetName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "subscriptionTargetConfig":{
          "shape":"SubscriptionTargetForms",
          "documentation":"<p>The configuration to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        }
      }
    },
    "UpdateSubscriptionTargetOutput":{
      "type":"structure",
      "required":[
        "applicableAssetTypes",
        "authorizedPrincipals",
        "createdAt",
        "createdBy",
        "domainId",
        "environmentId",
        "id",
        "name",
        "projectId",
        "provider",
        "subscriptionTargetConfig",
        "type"
      ],
      "members":{
        "applicableAssetTypes":{
          "shape":"ApplicableAssetTypes",
          "documentation":"<p>The applicable asset types to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "authorizedPrincipals":{
          "shape":"AuthorizedPrincipalIdentifiers",
          "documentation":"<p>The authorized principals to be updated as part of the <code>UpdateSubscriptionTarget</code> action. Updates are supported in batches of 5 at a time.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The timestamp of when a subscription target was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The Amazon DataZone user who created the subscription target.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a subscription target is to be updated.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The identifier of the environment in which a subscription target is to be updated.</p>"
        },
        "id":{
          "shape":"SubscriptionTargetId",
          "documentation":"<p>Identifier of the subscription target that is to be updated.</p>"
        },
        "manageAccessRole":{
          "shape":"IamRoleArn",
          "documentation":"<p>The manage access role to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "name":{
          "shape":"SubscriptionTargetName",
          "documentation":"<p>The name to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "projectId":{
          "shape":"ProjectId",
          "documentation":"<p>The identifier of the project in which a subscription target is to be updated.</p>"
        },
        "provider":{
          "shape":"String",
          "documentation":"<p>The provider to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "subscriptionTargetConfig":{
          "shape":"SubscriptionTargetForms",
          "documentation":"<p>The configuration to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "type":{
          "shape":"String",
          "documentation":"<p>The type to be updated as part of the <code>UpdateSubscriptionTarget</code> action.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The timestamp of when the subscription target was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The Amazon DataZone user who updated the subscription target.</p>"
        }
      }
    },
    "UpdateUserProfileInput":{
      "type":"structure",
      "required":[
        "domainIdentifier",
        "status",
        "userIdentifier"
      ],
      "members":{
        "domainIdentifier":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a user profile is updated.</p>",
          "location":"uri",
          "locationName":"domainIdentifier"
        },
        "status":{
          "shape":"UserProfileStatus",
          "documentation":"<p>The status of the user profile that are to be updated.</p>"
        },
        "type":{
          "shape":"UserProfileType",
          "documentation":"<p>The type of the user profile that are to be updated.</p>"
        },
        "userIdentifier":{
          "shape":"UserIdentifier",
          "documentation":"<p>The identifier of the user whose user profile is to be updated.</p>",
          "location":"uri",
          "locationName":"userIdentifier"
        }
      }
    },
    "UpdateUserProfileOutput":{
      "type":"structure",
      "members":{
        "details":{"shape":"UserProfileDetails"},
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The identifier of the Amazon DataZone domain in which a user profile is updated.</p>"
        },
        "id":{
          "shape":"UserProfileId",
          "documentation":"<p>The identifier of the user profile.</p>"
        },
        "status":{
          "shape":"UserProfileStatus",
          "documentation":"<p>The status of the user profile.</p>"
        },
        "type":{
          "shape":"UserProfileType",
          "documentation":"<p>The type of the user profile.</p>"
        }
      }
    },
    "UpdatedAt":{"type":"timestamp"},
    "UpdatedBy":{"type":"string"},
    "UseAssetTypePolicyGrantDetail":{
      "type":"structure",
      "members":{
        "domainUnitId":{
          "shape":"DomainUnitId",
          "documentation":"<p>The ID of the domain unit.</p>"
        }
      },
      "documentation":"<p>Specifies the domain unit(s) whose projects can use this asset type while creating asset or asset revisions.</p>"
    },
    "UserAssignment":{
      "type":"string",
      "enum":[
        "AUTOMATIC",
        "MANUAL"
      ]
    },
    "UserDesignation":{
      "type":"string",
      "enum":[
        "PROJECT_OWNER",
        "PROJECT_CONTRIBUTOR",
        "PROJECT_CATALOG_VIEWER",
        "PROJECT_CATALOG_CONSUMER",
        "PROJECT_CATALOG_STEWARD"
      ]
    },
    "UserDetails":{
      "type":"structure",
      "required":["userId"],
      "members":{
        "userId":{
          "shape":"String",
          "documentation":"<p>The identifier of the Amazon DataZone user.</p>"
        }
      },
      "documentation":"<p>The user details of a project member.</p>"
    },
    "UserIdentifier":{
      "type":"string",
      "pattern":"(^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$|^[a-zA-Z_0-9+=,.@-]+$|^arn:aws:iam::\\d{12}:.+$)"
    },
    "UserPolicyGrantPrincipal":{
      "type":"structure",
      "members":{
        "allUsersGrantFilter":{
          "shape":"AllUsersGrantFilter",
          "documentation":"<p>The all users grant filter of the user policy grant principal.</p>"
        },
        "userIdentifier":{
          "shape":"UserIdentifier",
          "documentation":"<p>The user ID of the user policy grant principal.</p>"
        }
      },
      "documentation":"<p>The user policy grant principal.</p>",
      "union":true
    },
    "UserProfileDetails":{
      "type":"structure",
      "members":{
        "iam":{
          "shape":"IamUserProfileDetails",
          "documentation":"<p>The IAM details included in the user profile details.</p>"
        },
        "sso":{
          "shape":"SsoUserProfileDetails",
          "documentation":"<p>The single sign-on details included in the user profile details.</p>"
        }
      },
      "documentation":"<p>The details of the user profile in Amazon DataZone.</p>",
      "union":true
    },
    "UserProfileId":{
      "type":"string",
      "pattern":"^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$"
    },
    "UserProfileName":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"^[a-zA-Z_0-9+=,.@-]+$",
      "sensitive":true
    },
    "UserProfileStatus":{
      "type":"string",
      "enum":[
        "ASSIGNED",
        "NOT_ASSIGNED",
        "ACTIVATED",
        "DEACTIVATED"
      ]
    },
    "UserProfileSummaries":{
      "type":"list",
      "member":{"shape":"UserProfileSummary"}
    },
    "UserProfileSummary":{
      "type":"structure",
      "members":{
        "details":{
          "shape":"UserProfileDetails",
          "documentation":"<p>The details of the user profile.</p>"
        },
        "domainId":{
          "shape":"DomainId",
          "documentation":"<p>The ID of the Amazon DataZone domain of the user profile.</p>"
        },
        "id":{
          "shape":"UserProfileId",
          "documentation":"<p>The ID of the user profile.</p>"
        },
        "status":{
          "shape":"UserProfileStatus",
          "documentation":"<p>The status of the user profile.</p>"
        },
        "type":{
          "shape":"UserProfileType",
          "documentation":"<p>The type of the user profile.</p>"
        }
      },
      "documentation":"<p>The details of the user profile.</p>"
    },
    "UserProfileType":{
      "type":"string",
      "enum":[
        "IAM",
        "SSO"
      ]
    },
    "UserSearchText":{
      "type":"string",
      "max":1024,
      "min":0,
      "sensitive":true
    },
    "UserSearchType":{
      "type":"string",
      "enum":[
        "SSO_USER",
        "DATAZONE_USER",
        "DATAZONE_SSO_USER",
        "DATAZONE_IAM_USER"
      ]
    },
    "UserType":{
      "type":"string",
      "enum":[
        "IAM_USER",
        "IAM_ROLE",
        "SSO_USER"
      ]
    },
    "Username":{
      "type":"string",
      "max":64,
      "min":0
    },
    "UsernamePassword":{
      "type":"structure",
      "required":[
        "password",
        "username"
      ],
      "members":{
        "password":{
          "shape":"Password",
          "documentation":"<p>The password of a connection.</p>"
        },
        "username":{
          "shape":"Username",
          "documentation":"<p>The username of a connection.</p>"
        }
      },
      "documentation":"<p>The username and password of a connection.</p>",
      "sensitive":true
    },
    "ValidationException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The input fails to satisfy the constraints specified by the Amazon Web Services service.</p>",
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    }
  },
  "documentation":"<p>Amazon DataZone is a data management service that enables you to catalog, discover, govern, share, and analyze your data. With Amazon DataZone, you can share and access your data across accounts and supported regions. Amazon DataZone simplifies your experience across Amazon Web Services services, including, but not limited to, Amazon Redshift, Amazon Athena, Amazon Web Services Glue, and Amazon Web Services Lake Formation.</p>"
}
