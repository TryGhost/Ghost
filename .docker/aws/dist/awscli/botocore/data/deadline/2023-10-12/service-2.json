{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2023-10-12",
    "auth":["aws.auth#sigv4"],
    "endpointPrefix":"deadline",
    "protocol":"rest-json",
    "protocols":["rest-json"],
    "serviceFullName":"AWSDeadlineCloud",
    "serviceId":"deadline",
    "signatureVersion":"v4",
    "signingName":"deadline",
    "uid":"deadline-2023-10-12"
  },
  "operations":{
    "AssociateMemberToFarm":{
      "name":"AssociateMemberToFarm",
      "http":{
        "method":"PUT",
        "requestUri":"/2023-10-12/farms/{farmId}/members/{principalId}",
        "responseCode":200
      },
      "input":{"shape":"AssociateMemberToFarmRequest"},
      "output":{"shape":"AssociateMemberToFarmResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Assigns a farm membership level to a member.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "AssociateMemberToFleet":{
      "name":"AssociateMemberToFleet",
      "http":{
        "method":"PUT",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/members/{principalId}",
        "responseCode":200
      },
      "input":{"shape":"AssociateMemberToFleetRequest"},
      "output":{"shape":"AssociateMemberToFleetResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Assigns a fleet membership level to a member.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "AssociateMemberToJob":{
      "name":"AssociateMemberToJob",
      "http":{
        "method":"PUT",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/members/{principalId}",
        "responseCode":200
      },
      "input":{"shape":"AssociateMemberToJobRequest"},
      "output":{"shape":"AssociateMemberToJobResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Assigns a job membership level to a member</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "AssociateMemberToQueue":{
      "name":"AssociateMemberToQueue",
      "http":{
        "method":"PUT",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/members/{principalId}",
        "responseCode":200
      },
      "input":{"shape":"AssociateMemberToQueueRequest"},
      "output":{"shape":"AssociateMemberToQueueResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Assigns a queue membership level to a member</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "AssumeFleetRoleForRead":{
      "name":"AssumeFleetRoleForRead",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/read-roles",
        "responseCode":200
      },
      "input":{"shape":"AssumeFleetRoleForReadRequest"},
      "output":{"shape":"AssumeFleetRoleForReadResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Get Amazon Web Services credentials from the fleet role. The IAM permissions of the credentials are scoped down to have read-only access.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "AssumeFleetRoleForWorker":{
      "name":"AssumeFleetRoleForWorker",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}/fleet-roles",
        "responseCode":200
      },
      "input":{"shape":"AssumeFleetRoleForWorkerRequest"},
      "output":{"shape":"AssumeFleetRoleForWorkerResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Get credentials from the fleet role for a worker.</p>",
      "endpoint":{"hostPrefix":"scheduling."}
    },
    "AssumeQueueRoleForRead":{
      "name":"AssumeQueueRoleForRead",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/read-roles",
        "responseCode":200
      },
      "input":{"shape":"AssumeQueueRoleForReadRequest"},
      "output":{"shape":"AssumeQueueRoleForReadResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets Amazon Web Services credentials from the queue role. The IAM permissions of the credentials are scoped down to have read-only access.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "AssumeQueueRoleForUser":{
      "name":"AssumeQueueRoleForUser",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/user-roles",
        "responseCode":200
      },
      "input":{"shape":"AssumeQueueRoleForUserRequest"},
      "output":{"shape":"AssumeQueueRoleForUserResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Allows a user to assume a role for a queue.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "AssumeQueueRoleForWorker":{
      "name":"AssumeQueueRoleForWorker",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}/queue-roles",
        "responseCode":200
      },
      "input":{"shape":"AssumeQueueRoleForWorkerRequest"},
      "output":{"shape":"AssumeQueueRoleForWorkerResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Allows a worker to assume a queue role.</p>",
      "endpoint":{"hostPrefix":"scheduling."}
    },
    "BatchGetJobEntity":{
      "name":"BatchGetJobEntity",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}/batchGetJobEntity",
        "responseCode":200
      },
      "input":{"shape":"BatchGetJobEntityRequest"},
      "output":{"shape":"BatchGetJobEntityResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Get batched job details for a worker.</p>",
      "endpoint":{"hostPrefix":"scheduling."}
    },
    "CopyJobTemplate":{
      "name":"CopyJobTemplate",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/template",
        "responseCode":200
      },
      "input":{"shape":"CopyJobTemplateRequest"},
      "output":{"shape":"CopyJobTemplateResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Copies a job template to an Amazon S3 bucket.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "CreateBudget":{
      "name":"CreateBudget",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/budgets",
        "responseCode":200
      },
      "input":{"shape":"CreateBudgetRequest"},
      "output":{"shape":"CreateBudgetResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Creates a budget to set spending thresholds for your rendering activity.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "CreateFarm":{
      "name":"CreateFarm",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms",
        "responseCode":200
      },
      "input":{"shape":"CreateFarmRequest"},
      "output":{"shape":"CreateFarmResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Creates a farm to allow space for queues and fleets. Farms are the space where the components of your renders gather and are pieced together in the cloud. Farms contain budgets and allow you to enforce permissions. Deadline Cloud farms are a useful container for large projects.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "CreateFleet":{
      "name":"CreateFleet",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets",
        "responseCode":200
      },
      "input":{"shape":"CreateFleetRequest"},
      "output":{"shape":"CreateFleetResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Creates a fleet. Fleets gather information relating to compute, or capacity, for renders within your farms. You can choose to manage your own capacity or opt to have fleets fully managed by Deadline Cloud.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "CreateJob":{
      "name":"CreateJob",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs",
        "responseCode":201
      },
      "input":{"shape":"CreateJobRequest"},
      "output":{"shape":"CreateJobResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Creates a job. A job is a set of instructions that Deadline Cloud uses to schedule and run work on available workers. For more information, see <a href=\"https://docs.aws.amazon.com/deadline-cloud/latest/userguide/deadline-cloud-jobs.html\">Deadline Cloud jobs</a>.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "CreateLicenseEndpoint":{
      "name":"CreateLicenseEndpoint",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/license-endpoints",
        "responseCode":200
      },
      "input":{"shape":"CreateLicenseEndpointRequest"},
      "output":{"shape":"CreateLicenseEndpointResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Creates a license endpoint to integrate your various licensed software used for rendering on Deadline Cloud.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "CreateLimit":{
      "name":"CreateLimit",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/limits",
        "responseCode":200
      },
      "input":{"shape":"CreateLimitRequest"},
      "output":{"shape":"CreateLimitResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Creates a limit that manages the distribution of shared resources, such as floating licenses. A limit can throttle work assignments, help manage workloads, and track current usage. Before you use a limit, you must associate the limit with one or more queues. </p> <p>You must add the <code>amountRequirementName</code> to a step in a job template to declare the limit requirement.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "CreateMonitor":{
      "name":"CreateMonitor",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/monitors",
        "responseCode":200
      },
      "input":{"shape":"CreateMonitorRequest"},
      "output":{"shape":"CreateMonitorResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Creates an Amazon Web Services Deadline Cloud monitor that you can use to view your farms, queues, and fleets. After you submit a job, you can track the progress of the tasks and steps that make up the job, and then download the job's results. </p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "CreateQueue":{
      "name":"CreateQueue",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/queues",
        "responseCode":200
      },
      "input":{"shape":"CreateQueueRequest"},
      "output":{"shape":"CreateQueueResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Creates a queue to coordinate the order in which jobs run on a farm. A queue can also specify where to pull resources and indicate where to output completed jobs.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "CreateQueueEnvironment":{
      "name":"CreateQueueEnvironment",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/environments",
        "responseCode":200
      },
      "input":{"shape":"CreateQueueEnvironmentRequest"},
      "output":{"shape":"CreateQueueEnvironmentResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Creates an environment for a queue that defines how jobs in the queue run.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "CreateQueueFleetAssociation":{
      "name":"CreateQueueFleetAssociation",
      "http":{
        "method":"PUT",
        "requestUri":"/2023-10-12/farms/{farmId}/queue-fleet-associations",
        "responseCode":200
      },
      "input":{"shape":"CreateQueueFleetAssociationRequest"},
      "output":{"shape":"CreateQueueFleetAssociationResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Creates an association between a queue and a fleet.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "CreateQueueLimitAssociation":{
      "name":"CreateQueueLimitAssociation",
      "http":{
        "method":"PUT",
        "requestUri":"/2023-10-12/farms/{farmId}/queue-limit-associations",
        "responseCode":200
      },
      "input":{"shape":"CreateQueueLimitAssociationRequest"},
      "output":{"shape":"CreateQueueLimitAssociationResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Associates a limit with a particular queue. After the limit is associated, all workers for jobs that specify the limit associated with the queue are subject to the limit. You can't associate two limits with the same <code>amountRequirementName</code> to the same queue.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "CreateStorageProfile":{
      "name":"CreateStorageProfile",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/storage-profiles",
        "responseCode":200
      },
      "input":{"shape":"CreateStorageProfileRequest"},
      "output":{"shape":"CreateStorageProfileResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Creates a storage profile that specifies the operating system, file type, and file location of resources used on a farm.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "CreateWorker":{
      "name":"CreateWorker",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/workers",
        "responseCode":200
      },
      "input":{"shape":"CreateWorkerRequest"},
      "output":{"shape":"CreateWorkerResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Creates a worker. A worker tells your instance how much processing power (vCPU), and memory (GiB) you’ll need to assemble the digital assets held within a particular instance. You can specify certain instance types to use, or let the worker know which instances types to exclude.</p> <p>Deadline Cloud limits the number of workers to less than or equal to the fleet's maximum worker count. The service maintains eventual consistency for the worker count. If you make multiple rapid calls to <code>CreateWorker</code> before the field updates, you might exceed your fleet's maximum worker count. For example, if your <code>maxWorkerCount</code> is 10 and you currently have 9 workers, making two quick <code>CreateWorker</code> calls might successfully create 2 workers instead of 1, resulting in 11 total workers.</p>",
      "endpoint":{"hostPrefix":"scheduling."},
      "idempotent":true
    },
    "DeleteBudget":{
      "name":"DeleteBudget",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/budgets/{budgetId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteBudgetRequest"},
      "output":{"shape":"DeleteBudgetResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Deletes a budget.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DeleteFarm":{
      "name":"DeleteFarm",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteFarmRequest"},
      "output":{"shape":"DeleteFarmResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Deletes a farm.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DeleteFleet":{
      "name":"DeleteFleet",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteFleetRequest"},
      "output":{"shape":"DeleteFleetResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Deletes a fleet.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DeleteLicenseEndpoint":{
      "name":"DeleteLicenseEndpoint",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/license-endpoints/{licenseEndpointId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteLicenseEndpointRequest"},
      "output":{"shape":"DeleteLicenseEndpointResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Deletes a license endpoint.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DeleteLimit":{
      "name":"DeleteLimit",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/limits/{limitId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteLimitRequest"},
      "output":{"shape":"DeleteLimitResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Removes a limit from the specified farm. Before you delete a limit you must use the <code>DeleteQueueLimitAssociation</code> operation to remove the association with any queues. </p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DeleteMeteredProduct":{
      "name":"DeleteMeteredProduct",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/license-endpoints/{licenseEndpointId}/metered-products/{productId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteMeteredProductRequest"},
      "output":{"shape":"DeleteMeteredProductResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Deletes a metered product.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DeleteMonitor":{
      "name":"DeleteMonitor",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/monitors/{monitorId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteMonitorRequest"},
      "output":{"shape":"DeleteMonitorResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Removes a Deadline Cloud monitor. After you delete a monitor, you can create a new one and attach farms to the monitor.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DeleteQueue":{
      "name":"DeleteQueue",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteQueueRequest"},
      "output":{"shape":"DeleteQueueResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Deletes a queue.</p> <important> <p>You can't recover the jobs in a queue if you delete the queue. Deleting the queue also deletes the jobs in that queue.</p> </important>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DeleteQueueEnvironment":{
      "name":"DeleteQueueEnvironment",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/environments/{queueEnvironmentId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteQueueEnvironmentRequest"},
      "output":{"shape":"DeleteQueueEnvironmentResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Deletes a queue environment.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DeleteQueueFleetAssociation":{
      "name":"DeleteQueueFleetAssociation",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/queue-fleet-associations/{queueId}/{fleetId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteQueueFleetAssociationRequest"},
      "output":{"shape":"DeleteQueueFleetAssociationResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Deletes a queue-fleet association.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DeleteQueueLimitAssociation":{
      "name":"DeleteQueueLimitAssociation",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/queue-limit-associations/{queueId}/{limitId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteQueueLimitAssociationRequest"},
      "output":{"shape":"DeleteQueueLimitAssociationResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Removes the association between a queue and a limit. You must use the <code>UpdateQueueLimitAssociation</code> operation to set the status to <code>STOP_LIMIT_USAGE_AND_COMPLETE_TASKS</code> or <code>STOP_LIMIT_USAGE_AND_CANCEL_TASKS</code>. The status does not change immediately. Use the <code>GetQueueLimitAssociation</code> operation to see if the status changed to <code>STOPPED</code> before deleting the association.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DeleteStorageProfile":{
      "name":"DeleteStorageProfile",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/storage-profiles/{storageProfileId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteStorageProfileRequest"},
      "output":{"shape":"DeleteStorageProfileResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Deletes a storage profile.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DeleteWorker":{
      "name":"DeleteWorker",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}",
        "responseCode":200
      },
      "input":{"shape":"DeleteWorkerRequest"},
      "output":{"shape":"DeleteWorkerResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Deletes a worker.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DisassociateMemberFromFarm":{
      "name":"DisassociateMemberFromFarm",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/members/{principalId}",
        "responseCode":200
      },
      "input":{"shape":"DisassociateMemberFromFarmRequest"},
      "output":{"shape":"DisassociateMemberFromFarmResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Disassociates a member from a farm.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DisassociateMemberFromFleet":{
      "name":"DisassociateMemberFromFleet",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/members/{principalId}",
        "responseCode":200
      },
      "input":{"shape":"DisassociateMemberFromFleetRequest"},
      "output":{"shape":"DisassociateMemberFromFleetResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Disassociates a member from a fleet.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DisassociateMemberFromJob":{
      "name":"DisassociateMemberFromJob",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/members/{principalId}",
        "responseCode":200
      },
      "input":{"shape":"DisassociateMemberFromJobRequest"},
      "output":{"shape":"DisassociateMemberFromJobResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Disassociates a member from a job.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "DisassociateMemberFromQueue":{
      "name":"DisassociateMemberFromQueue",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/members/{principalId}",
        "responseCode":200
      },
      "input":{"shape":"DisassociateMemberFromQueueRequest"},
      "output":{"shape":"DisassociateMemberFromQueueResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Disassociates a member from a queue.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "GetBudget":{
      "name":"GetBudget",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/budgets/{budgetId}",
        "responseCode":200
      },
      "input":{"shape":"GetBudgetRequest"},
      "output":{"shape":"GetBudgetResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Get a budget.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetFarm":{
      "name":"GetFarm",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}",
        "responseCode":200
      },
      "input":{"shape":"GetFarmRequest"},
      "output":{"shape":"GetFarmResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Get a farm.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetFleet":{
      "name":"GetFleet",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}",
        "responseCode":200
      },
      "input":{"shape":"GetFleetRequest"},
      "output":{"shape":"GetFleetResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Get a fleet.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetJob":{
      "name":"GetJob",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}",
        "responseCode":200
      },
      "input":{"shape":"GetJobRequest"},
      "output":{"shape":"GetJobResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a Deadline Cloud job.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetLicenseEndpoint":{
      "name":"GetLicenseEndpoint",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/license-endpoints/{licenseEndpointId}",
        "responseCode":200
      },
      "input":{"shape":"GetLicenseEndpointRequest"},
      "output":{"shape":"GetLicenseEndpointResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a licence endpoint.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetLimit":{
      "name":"GetLimit",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/limits/{limitId}",
        "responseCode":200
      },
      "input":{"shape":"GetLimitRequest"},
      "output":{"shape":"GetLimitResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets information about a specific limit.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetMonitor":{
      "name":"GetMonitor",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/monitors/{monitorId}",
        "responseCode":200
      },
      "input":{"shape":"GetMonitorRequest"},
      "output":{"shape":"GetMonitorResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets information about the specified monitor.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetQueue":{
      "name":"GetQueue",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}",
        "responseCode":200
      },
      "input":{"shape":"GetQueueRequest"},
      "output":{"shape":"GetQueueResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a queue.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetQueueEnvironment":{
      "name":"GetQueueEnvironment",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/environments/{queueEnvironmentId}",
        "responseCode":200
      },
      "input":{"shape":"GetQueueEnvironmentRequest"},
      "output":{"shape":"GetQueueEnvironmentResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a queue environment.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetQueueFleetAssociation":{
      "name":"GetQueueFleetAssociation",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queue-fleet-associations/{queueId}/{fleetId}",
        "responseCode":200
      },
      "input":{"shape":"GetQueueFleetAssociationRequest"},
      "output":{"shape":"GetQueueFleetAssociationResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a queue-fleet association.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetQueueLimitAssociation":{
      "name":"GetQueueLimitAssociation",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queue-limit-associations/{queueId}/{limitId}",
        "responseCode":200
      },
      "input":{"shape":"GetQueueLimitAssociationRequest"},
      "output":{"shape":"GetQueueLimitAssociationResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets information about a specific association between a queue and a limit.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetSession":{
      "name":"GetSession",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/sessions/{sessionId}",
        "responseCode":200
      },
      "input":{"shape":"GetSessionRequest"},
      "output":{"shape":"GetSessionResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a session.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetSessionAction":{
      "name":"GetSessionAction",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/session-actions/{sessionActionId}",
        "responseCode":200
      },
      "input":{"shape":"GetSessionActionRequest"},
      "output":{"shape":"GetSessionActionResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a session action for the job.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetSessionsStatisticsAggregation":{
      "name":"GetSessionsStatisticsAggregation",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/sessions-statistics-aggregation",
        "responseCode":200
      },
      "input":{"shape":"GetSessionsStatisticsAggregationRequest"},
      "output":{"shape":"GetSessionsStatisticsAggregationResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a set of statistics for queues or farms. Before you can call the <code>GetSessionStatisticsAggregation</code> operation, you must first call the <code>StartSessionsStatisticsAggregation</code> operation. Statistics are available for 1 hour after you call the <code>StartSessionsStatisticsAggregation</code> operation.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetStep":{
      "name":"GetStep",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps/{stepId}",
        "responseCode":200
      },
      "input":{"shape":"GetStepRequest"},
      "output":{"shape":"GetStepResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a step.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetStorageProfile":{
      "name":"GetStorageProfile",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/storage-profiles/{storageProfileId}",
        "responseCode":200
      },
      "input":{"shape":"GetStorageProfileRequest"},
      "output":{"shape":"GetStorageProfileResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a storage profile.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetStorageProfileForQueue":{
      "name":"GetStorageProfileForQueue",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/storage-profiles/{storageProfileId}",
        "responseCode":200
      },
      "input":{"shape":"GetStorageProfileForQueueRequest"},
      "output":{"shape":"GetStorageProfileForQueueResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a storage profile for a queue.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetTask":{
      "name":"GetTask",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps/{stepId}/tasks/{taskId}",
        "responseCode":200
      },
      "input":{"shape":"GetTaskRequest"},
      "output":{"shape":"GetTaskResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a task.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "GetWorker":{
      "name":"GetWorker",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}",
        "responseCode":200
      },
      "input":{"shape":"GetWorkerRequest"},
      "output":{"shape":"GetWorkerResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a worker.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListAvailableMeteredProducts":{
      "name":"ListAvailableMeteredProducts",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/metered-products",
        "responseCode":200
      },
      "input":{"shape":"ListAvailableMeteredProductsRequest"},
      "output":{"shape":"ListAvailableMeteredProductsResponse"},
      "errors":[
        {"shape":"InternalServerErrorException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>A list of the available metered products.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListBudgets":{
      "name":"ListBudgets",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/budgets",
        "responseCode":200
      },
      "input":{"shape":"ListBudgetsRequest"},
      "output":{"shape":"ListBudgetsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>A list of budgets in a farm.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListFarmMembers":{
      "name":"ListFarmMembers",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/members",
        "responseCode":200
      },
      "input":{"shape":"ListFarmMembersRequest"},
      "output":{"shape":"ListFarmMembersResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists the members of a farm.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListFarms":{
      "name":"ListFarms",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms",
        "responseCode":200
      },
      "input":{"shape":"ListFarmsRequest"},
      "output":{"shape":"ListFarmsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists farms.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListFleetMembers":{
      "name":"ListFleetMembers",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/members",
        "responseCode":200
      },
      "input":{"shape":"ListFleetMembersRequest"},
      "output":{"shape":"ListFleetMembersResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists fleet members.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListFleets":{
      "name":"ListFleets",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets",
        "responseCode":200
      },
      "input":{"shape":"ListFleetsRequest"},
      "output":{"shape":"ListFleetsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists fleets.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListJobMembers":{
      "name":"ListJobMembers",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/members",
        "responseCode":200
      },
      "input":{"shape":"ListJobMembersRequest"},
      "output":{"shape":"ListJobMembersResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists members on a job.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListJobParameterDefinitions":{
      "name":"ListJobParameterDefinitions",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/parameter-definitions",
        "responseCode":200
      },
      "input":{"shape":"ListJobParameterDefinitionsRequest"},
      "output":{"shape":"ListJobParameterDefinitionsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists parameter definitions of a job.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListJobs":{
      "name":"ListJobs",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs",
        "responseCode":200
      },
      "input":{"shape":"ListJobsRequest"},
      "output":{"shape":"ListJobsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists jobs.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListLicenseEndpoints":{
      "name":"ListLicenseEndpoints",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/license-endpoints",
        "responseCode":200
      },
      "input":{"shape":"ListLicenseEndpointsRequest"},
      "output":{"shape":"ListLicenseEndpointsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists license endpoints.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListLimits":{
      "name":"ListLimits",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/limits",
        "responseCode":200
      },
      "input":{"shape":"ListLimitsRequest"},
      "output":{"shape":"ListLimitsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a list of limits defined in the specified farm.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListMeteredProducts":{
      "name":"ListMeteredProducts",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/license-endpoints/{licenseEndpointId}/metered-products",
        "responseCode":200
      },
      "input":{"shape":"ListMeteredProductsRequest"},
      "output":{"shape":"ListMeteredProductsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists metered products.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListMonitors":{
      "name":"ListMonitors",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/monitors",
        "responseCode":200
      },
      "input":{"shape":"ListMonitorsRequest"},
      "output":{"shape":"ListMonitorsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Gets a list of your monitors in Deadline Cloud.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListQueueEnvironments":{
      "name":"ListQueueEnvironments",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/environments",
        "responseCode":200
      },
      "input":{"shape":"ListQueueEnvironmentsRequest"},
      "output":{"shape":"ListQueueEnvironmentsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists queue environments.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListQueueFleetAssociations":{
      "name":"ListQueueFleetAssociations",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queue-fleet-associations",
        "responseCode":200
      },
      "input":{"shape":"ListQueueFleetAssociationsRequest"},
      "output":{"shape":"ListQueueFleetAssociationsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Lists queue-fleet associations.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListQueueLimitAssociations":{
      "name":"ListQueueLimitAssociations",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queue-limit-associations",
        "responseCode":200
      },
      "input":{"shape":"ListQueueLimitAssociationsRequest"},
      "output":{"shape":"ListQueueLimitAssociationsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"}
      ],
      "documentation":"<p>Gets a list of the associations between queues and limits defined in a farm.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListQueueMembers":{
      "name":"ListQueueMembers",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/members",
        "responseCode":200
      },
      "input":{"shape":"ListQueueMembersRequest"},
      "output":{"shape":"ListQueueMembersResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists the members in a queue.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListQueues":{
      "name":"ListQueues",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues",
        "responseCode":200
      },
      "input":{"shape":"ListQueuesRequest"},
      "output":{"shape":"ListQueuesResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists queues.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListSessionActions":{
      "name":"ListSessionActions",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/session-actions",
        "responseCode":200
      },
      "input":{"shape":"ListSessionActionsRequest"},
      "output":{"shape":"ListSessionActionsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists session actions.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListSessions":{
      "name":"ListSessions",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/sessions",
        "responseCode":200
      },
      "input":{"shape":"ListSessionsRequest"},
      "output":{"shape":"ListSessionsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists sessions.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListSessionsForWorker":{
      "name":"ListSessionsForWorker",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}/sessions",
        "responseCode":200
      },
      "input":{"shape":"ListSessionsForWorkerRequest"},
      "output":{"shape":"ListSessionsForWorkerResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists sessions for a worker.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListStepConsumers":{
      "name":"ListStepConsumers",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps/{stepId}/consumers",
        "responseCode":200
      },
      "input":{"shape":"ListStepConsumersRequest"},
      "output":{"shape":"ListStepConsumersResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists step consumers.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListStepDependencies":{
      "name":"ListStepDependencies",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps/{stepId}/dependencies",
        "responseCode":200
      },
      "input":{"shape":"ListStepDependenciesRequest"},
      "output":{"shape":"ListStepDependenciesResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists the dependencies for a step.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListSteps":{
      "name":"ListSteps",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps",
        "responseCode":200
      },
      "input":{"shape":"ListStepsRequest"},
      "output":{"shape":"ListStepsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists steps for a job.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListStorageProfiles":{
      "name":"ListStorageProfiles",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/storage-profiles",
        "responseCode":200
      },
      "input":{"shape":"ListStorageProfilesRequest"},
      "output":{"shape":"ListStorageProfilesResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists storage profiles.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListStorageProfilesForQueue":{
      "name":"ListStorageProfilesForQueue",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/storage-profiles",
        "responseCode":200
      },
      "input":{"shape":"ListStorageProfilesForQueueRequest"},
      "output":{"shape":"ListStorageProfilesForQueueResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists storage profiles for a queue.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListTagsForResource":{
      "name":"ListTagsForResource",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/tags/{resourceArn}",
        "responseCode":200
      },
      "input":{"shape":"ListTagsForResourceRequest"},
      "output":{"shape":"ListTagsForResourceResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists tags for a resource.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListTasks":{
      "name":"ListTasks",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps/{stepId}/tasks",
        "responseCode":200
      },
      "input":{"shape":"ListTasksRequest"},
      "output":{"shape":"ListTasksResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists tasks for a job.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "ListWorkers":{
      "name":"ListWorkers",
      "http":{
        "method":"GET",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/workers",
        "responseCode":200
      },
      "input":{"shape":"ListWorkersRequest"},
      "output":{"shape":"ListWorkersResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Lists workers.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "PutMeteredProduct":{
      "name":"PutMeteredProduct",
      "http":{
        "method":"PUT",
        "requestUri":"/2023-10-12/license-endpoints/{licenseEndpointId}/metered-products/{productId}",
        "responseCode":200
      },
      "input":{"shape":"PutMeteredProductRequest"},
      "output":{"shape":"PutMeteredProductResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Adds a metered product.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "SearchJobs":{
      "name":"SearchJobs",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/search/jobs",
        "responseCode":200
      },
      "input":{"shape":"SearchJobsRequest"},
      "output":{"shape":"SearchJobsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Searches for jobs.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "SearchSteps":{
      "name":"SearchSteps",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/search/steps",
        "responseCode":200
      },
      "input":{"shape":"SearchStepsRequest"},
      "output":{"shape":"SearchStepsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Searches for steps.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "SearchTasks":{
      "name":"SearchTasks",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/search/tasks",
        "responseCode":200
      },
      "input":{"shape":"SearchTasksRequest"},
      "output":{"shape":"SearchTasksResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Searches for tasks.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "SearchWorkers":{
      "name":"SearchWorkers",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/search/workers",
        "responseCode":200
      },
      "input":{"shape":"SearchWorkersRequest"},
      "output":{"shape":"SearchWorkersResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Searches for workers.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "StartSessionsStatisticsAggregation":{
      "name":"StartSessionsStatisticsAggregation",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/farms/{farmId}/sessions-statistics-aggregation",
        "responseCode":200
      },
      "input":{"shape":"StartSessionsStatisticsAggregationRequest"},
      "output":{"shape":"StartSessionsStatisticsAggregationResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Starts an asynchronous request for getting aggregated statistics about queues and farms. Get the statistics using the <code>GetSessionsStatisticsAggregation</code> operation. You can only have one running aggregation for your Deadline Cloud farm. Call the <code>GetSessionsStatisticsAggregation</code> operation and check the <code>status</code> field to see if an aggregation is running. Statistics are available for 1 hour after you call the <code>StartSessionsStatisticsAggregation</code> operation.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "TagResource":{
      "name":"TagResource",
      "http":{
        "method":"POST",
        "requestUri":"/2023-10-12/tags/{resourceArn}",
        "responseCode":204
      },
      "input":{"shape":"TagResourceRequest"},
      "output":{"shape":"TagResourceResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Tags a resource using the resource's ARN and desired tags.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "UntagResource":{
      "name":"UntagResource",
      "http":{
        "method":"DELETE",
        "requestUri":"/2023-10-12/tags/{resourceArn}",
        "responseCode":204
      },
      "input":{"shape":"UntagResourceRequest"},
      "output":{"shape":"UntagResourceResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Removes a tag from a resource using the resource's ARN and tag to remove.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateBudget":{
      "name":"UpdateBudget",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/budgets/{budgetId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateBudgetRequest"},
      "output":{"shape":"UpdateBudgetResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates a budget that sets spending thresholds for rendering activity.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateFarm":{
      "name":"UpdateFarm",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateFarmRequest"},
      "output":{"shape":"UpdateFarmResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates a farm.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateFleet":{
      "name":"UpdateFleet",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateFleetRequest"},
      "output":{"shape":"UpdateFleetResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"},
        {"shape":"ServiceQuotaExceededException"}
      ],
      "documentation":"<p>Updates a fleet.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateJob":{
      "name":"UpdateJob",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateJobRequest"},
      "output":{"shape":"UpdateJobResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates a job. </p> <p>When you change the status of the job to <code>ARCHIVED</code>, the job can't be scheduled or archived.</p> <important> <p>An archived jobs and its steps and tasks are deleted after 120 days. The job can't be recovered.</p> </important>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateLimit":{
      "name":"UpdateLimit",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/limits/{limitId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateLimitRequest"},
      "output":{"shape":"UpdateLimitResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates the properties of the specified limit. </p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateMonitor":{
      "name":"UpdateMonitor",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/monitors/{monitorId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateMonitorRequest"},
      "output":{"shape":"UpdateMonitorResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Modifies the settings for a Deadline Cloud monitor. You can modify one or all of the settings when you call <code>UpdateMonitor</code>.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateQueue":{
      "name":"UpdateQueue",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateQueueRequest"},
      "output":{"shape":"UpdateQueueResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates a queue.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateQueueEnvironment":{
      "name":"UpdateQueueEnvironment",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/environments/{queueEnvironmentId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateQueueEnvironmentRequest"},
      "output":{"shape":"UpdateQueueEnvironmentResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates the queue environment.</p>",
      "endpoint":{"hostPrefix":"management."}
    },
    "UpdateQueueFleetAssociation":{
      "name":"UpdateQueueFleetAssociation",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/queue-fleet-associations/{queueId}/{fleetId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateQueueFleetAssociationRequest"},
      "output":{"shape":"UpdateQueueFleetAssociationResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates a queue-fleet association.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateQueueLimitAssociation":{
      "name":"UpdateQueueLimitAssociation",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/queue-limit-associations/{queueId}/{limitId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateQueueLimitAssociationRequest"},
      "output":{"shape":"UpdateQueueLimitAssociationResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates the status of the queue. If you set the status to one of the <code>STOP_LIMIT_USAGE*</code> values, there will be a delay before the status transitions to the <code>STOPPED</code> state. </p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateSession":{
      "name":"UpdateSession",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/sessions/{sessionId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateSessionRequest"},
      "output":{"shape":"UpdateSessionResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates a session.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateStep":{
      "name":"UpdateStep",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps/{stepId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateStepRequest"},
      "output":{"shape":"UpdateStepResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates a step.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateStorageProfile":{
      "name":"UpdateStorageProfile",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/storage-profiles/{storageProfileId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateStorageProfileRequest"},
      "output":{"shape":"UpdateStorageProfileResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates a storage profile.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateTask":{
      "name":"UpdateTask",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps/{stepId}/tasks/{taskId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateTaskRequest"},
      "output":{"shape":"UpdateTaskResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates a task.</p>",
      "endpoint":{"hostPrefix":"management."},
      "idempotent":true
    },
    "UpdateWorker":{
      "name":"UpdateWorker",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}",
        "responseCode":200
      },
      "input":{"shape":"UpdateWorkerRequest"},
      "output":{"shape":"UpdateWorkerResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates a worker.</p>",
      "endpoint":{"hostPrefix":"scheduling."},
      "idempotent":true
    },
    "UpdateWorkerSchedule":{
      "name":"UpdateWorkerSchedule",
      "http":{
        "method":"PATCH",
        "requestUri":"/2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}/schedule",
        "responseCode":200
      },
      "input":{"shape":"UpdateWorkerScheduleRequest"},
      "output":{"shape":"UpdateWorkerScheduleResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"InternalServerErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"ConflictException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>Updates the schedule for a worker.</p>",
      "endpoint":{"hostPrefix":"scheduling."},
      "idempotent":true
    }
  },
  "shapes":{
    "AcceleratorCapabilities":{
      "type":"structure",
      "required":["selections"],
      "members":{
        "selections":{
          "shape":"AcceleratorSelections",
          "documentation":"<p>A list of accelerator capabilities requested for this fleet. Only Amazon Elastic Compute Cloud instances that provide these capabilities will be used. For example, if you specify both L4 and T4 chips, Deadline Cloud will use Amazon EC2 instances that have either the L4 or the T4 chip installed.</p>"
        },
        "count":{
          "shape":"AcceleratorCountRange",
          "documentation":"<p>The number of GPU accelerators specified for worker hosts in this fleet. </p>"
        }
      },
      "documentation":"<p>Provides information about the GPU accelerators used for jobs processed by a fleet.</p>"
    },
    "AcceleratorCountRange":{
      "type":"structure",
      "required":["min"],
      "members":{
        "min":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The minimum number of GPU accelerators in the worker host.</p>"
        },
        "max":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The maximum number of GPU accelerators in the worker host.</p>"
        }
      },
      "documentation":"<p>Defines the maximum and minimum number of GPU accelerators required for a worker instance..</p>"
    },
    "AcceleratorName":{
      "type":"string",
      "enum":[
        "t4",
        "a10g",
        "l4",
        "l40s"
      ]
    },
    "AcceleratorRuntime":{
      "type":"string",
      "max":100,
      "min":1
    },
    "AcceleratorSelection":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{
          "shape":"AcceleratorName",
          "documentation":"<p>The name of the chip used by the GPU accelerator.</p> <p>If you specify <code>l4</code> as the name of the accelerator, you must specify <code>latest</code> or <code>grid:r570</code> as the runtime.</p> <p>The available GPU accelerators are:</p> <ul> <li> <p> <code>t4</code> - NVIDIA T4 Tensor Core GPU</p> </li> <li> <p> <code>a10g</code> - NVIDIA A10G Tensor Core GPU</p> </li> <li> <p> <code>l4</code> - NVIDIA L4 Tensor Core GPU</p> </li> <li> <p> <code>l40s</code> - NVIDIA L40S Tensor Core GPU</p> </li> </ul>"
        },
        "runtime":{
          "shape":"AcceleratorRuntime",
          "documentation":"<p>Specifies the runtime driver to use for the GPU accelerator. You must use the same runtime for all GPUs. </p> <p>You can choose from the following runtimes:</p> <ul> <li> <p> <code>latest</code> - Use the latest runtime available for the chip. If you specify <code>latest</code> and a new version of the runtime is released, the new version of the runtime is used.</p> </li> <li> <p> <code>grid:r570</code> - <a href=\"https://docs.nvidia.com/vgpu/18.0/index.html\">NVIDIA vGPU software 18</a> </p> </li> <li> <p> <code>grid:r535</code> - <a href=\"https://docs.nvidia.com/vgpu/16.0/index.html\">NVIDIA vGPU software 16</a> </p> </li> </ul> <p>If you don't specify a runtime, Deadline Cloud uses <code>latest</code> as the default. However, if you have multiple accelerators and specify <code>latest</code> for some and leave others blank, Deadline Cloud raises an exception.</p>"
        }
      },
      "documentation":"<p>Describes a specific GPU accelerator required for an Amazon Elastic Compute Cloud worker host.</p>"
    },
    "AcceleratorSelections":{
      "type":"list",
      "member":{"shape":"AcceleratorSelection"}
    },
    "AcceleratorTotalMemoryMiBRange":{
      "type":"structure",
      "required":["min"],
      "members":{
        "min":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The minimum amount of memory to use for the accelerator, measured in MiB.</p>"
        },
        "max":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The maximum amount of memory to use for the accelerator, measured in MiB.</p>"
        }
      },
      "documentation":"<p>Defines the maximum and minimum amount of memory, in MiB, to use for the accelerator.</p>"
    },
    "AcceleratorType":{
      "type":"string",
      "enum":["gpu"]
    },
    "AcceleratorTypes":{
      "type":"list",
      "member":{"shape":"AcceleratorType"}
    },
    "AccessDeniedException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"},
        "context":{
          "shape":"ExceptionContext",
          "documentation":"<p>Information about the resources in use when the exception was thrown.</p>"
        }
      },
      "documentation":"<p>You don't have permission to perform the action.</p>",
      "error":{
        "httpStatusCode":403,
        "senderFault":true
      },
      "exception":true
    },
    "AccessKeyId":{
      "type":"string",
      "sensitive":true
    },
    "AcquiredLimit":{
      "type":"structure",
      "required":[
        "limitId",
        "count"
      ],
      "members":{
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>The unique identifier of the limit.</p>"
        },
        "count":{
          "shape":"MinOneMaxInteger",
          "documentation":"<p>The number of limit resources used.</p>"
        }
      },
      "documentation":"<p>Provides information about the number of resources used.</p>"
    },
    "AcquiredLimits":{
      "type":"list",
      "member":{"shape":"AcquiredLimit"}
    },
    "AggregationId":{
      "type":"string",
      "pattern":"[0-9a-f]{32}"
    },
    "AllowedStorageProfileIds":{
      "type":"list",
      "member":{"shape":"StorageProfileId"},
      "max":20,
      "min":0
    },
    "AmountCapabilityName":{
      "type":"string",
      "max":100,
      "min":1,
      "pattern":"([a-zA-Z][a-zA-Z0-9]{0,63}:)?amount(\\.[a-zA-Z][a-zA-Z0-9]{0,63})+"
    },
    "AmountRequirementName":{
      "type":"string",
      "max":1024,
      "min":0
    },
    "AssignedEnvironmentEnterSessionActionDefinition":{
      "type":"structure",
      "required":["environmentId"],
      "members":{
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID of the assigned environment at the start of a session.</p>"
        }
      },
      "documentation":"<p>The assigned starting environment for a worker during session.</p>"
    },
    "AssignedEnvironmentExitSessionActionDefinition":{
      "type":"structure",
      "required":["environmentId"],
      "members":{
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID of the assigned environment when exiting a session.</p>"
        }
      },
      "documentation":"<p>The assigned environment when a worker exits a session.</p>"
    },
    "AssignedSession":{
      "type":"structure",
      "required":[
        "queueId",
        "jobId",
        "sessionActions",
        "logConfiguration"
      ],
      "members":{
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID of the assigned session.</p>"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the assigned session.</p>"
        },
        "sessionActions":{
          "shape":"AssignedSessionActions",
          "documentation":"<p>The session actions to apply to the assigned session.</p>"
        },
        "logConfiguration":{
          "shape":"LogConfiguration",
          "documentation":"<p>The log configuration for the worker's assigned session.</p>"
        }
      },
      "documentation":"<p>The assigned session for the worker.</p>"
    },
    "AssignedSessionAction":{
      "type":"structure",
      "required":[
        "sessionActionId",
        "definition"
      ],
      "members":{
        "sessionActionId":{
          "shape":"SessionActionId",
          "documentation":"<p>The session action ID for the assigned session.</p>"
        },
        "definition":{
          "shape":"AssignedSessionActionDefinition",
          "documentation":"<p>The definition of the assigned session action.</p>"
        }
      },
      "documentation":"<p>The action for a session defined by the session action ID.</p>"
    },
    "AssignedSessionActionDefinition":{
      "type":"structure",
      "members":{
        "envEnter":{
          "shape":"AssignedEnvironmentEnterSessionActionDefinition",
          "documentation":"<p>The environment a session starts on.</p>"
        },
        "envExit":{
          "shape":"AssignedEnvironmentExitSessionActionDefinition",
          "documentation":"<p>The environment a session exits from.</p>"
        },
        "taskRun":{
          "shape":"AssignedTaskRunSessionActionDefinition",
          "documentation":"<p>The task run.</p>"
        },
        "syncInputJobAttachments":{
          "shape":"AssignedSyncInputJobAttachmentsSessionActionDefinition",
          "documentation":"<p>The job attachment to sync with an assigned session action.</p>"
        }
      },
      "documentation":"<p>The definition of the assigned session action.</p>",
      "union":true
    },
    "AssignedSessionActions":{
      "type":"list",
      "member":{"shape":"AssignedSessionAction"}
    },
    "AssignedSessions":{
      "type":"map",
      "key":{"shape":"SessionId"},
      "value":{"shape":"AssignedSession"}
    },
    "AssignedSyncInputJobAttachmentsSessionActionDefinition":{
      "type":"structure",
      "members":{
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        }
      },
      "documentation":"<p>The details for an assigned session action as it relates to a job attachment.</p>"
    },
    "AssignedTaskRunSessionActionDefinition":{
      "type":"structure",
      "required":[
        "stepId",
        "parameters"
      ],
      "members":{
        "taskId":{
          "shape":"TaskId",
          "documentation":"<p>The task ID.</p>"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        },
        "parameters":{
          "shape":"TaskParameters",
          "documentation":"<p>The parameters to include.</p>"
        }
      },
      "documentation":"<p>The specific task, step, and parameters to include.</p>"
    },
    "AssociateMemberToFarmRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "principalId",
        "principalType",
        "identityStoreId",
        "membershipLevel"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The ID of the farm to associate with the member.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>The member's principal ID to associate with the farm.</p>",
          "location":"uri",
          "locationName":"principalId"
        },
        "principalType":{
          "shape":"PrincipalType",
          "documentation":"<p>The principal type of the member to associate with the farm.</p>"
        },
        "identityStoreId":{
          "shape":"IdentityStoreId",
          "documentation":"<p>The identity store ID of the member to associate with the farm.</p>"
        },
        "membershipLevel":{
          "shape":"MembershipLevel",
          "documentation":"<p>The principal's membership level for the associated farm.</p>"
        }
      }
    },
    "AssociateMemberToFarmResponse":{
      "type":"structure",
      "members":{
      }
    },
    "AssociateMemberToFleetRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId",
        "principalId",
        "principalType",
        "identityStoreId",
        "membershipLevel"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the fleet to associate with the member.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The ID of the fleet to associate with a member.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>The member's principal ID to associate with a fleet.</p>",
          "location":"uri",
          "locationName":"principalId"
        },
        "principalType":{
          "shape":"PrincipalType",
          "documentation":"<p>The member's principal type to associate with the fleet.</p>"
        },
        "identityStoreId":{
          "shape":"IdentityStoreId",
          "documentation":"<p>The member's identity store ID to associate with the fleet.</p>"
        },
        "membershipLevel":{
          "shape":"MembershipLevel",
          "documentation":"<p>The principal's membership level for the associated fleet.</p>"
        }
      }
    },
    "AssociateMemberToFleetResponse":{
      "type":"structure",
      "members":{
      }
    },
    "AssociateMemberToJobRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId",
        "principalId",
        "principalType",
        "identityStoreId",
        "membershipLevel"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the job to associate with the member.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID to associate to the member.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID to associate with the member.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>The member's principal ID to associate with the job.</p>",
          "location":"uri",
          "locationName":"principalId"
        },
        "principalType":{
          "shape":"PrincipalType",
          "documentation":"<p>The member's principal type to associate with the job.</p>"
        },
        "identityStoreId":{
          "shape":"IdentityStoreId",
          "documentation":"<p>The member's identity store ID to associate with the job.</p>"
        },
        "membershipLevel":{
          "shape":"MembershipLevel",
          "documentation":"<p>The principal's membership level for the associated job.</p>"
        }
      }
    },
    "AssociateMemberToJobResponse":{
      "type":"structure",
      "members":{
      }
    },
    "AssociateMemberToQueueRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "principalId",
        "principalType",
        "identityStoreId",
        "membershipLevel"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the queue to associate with the member.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The ID of the queue to associate to the member.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>The member's principal ID to associate with the queue.</p>",
          "location":"uri",
          "locationName":"principalId"
        },
        "principalType":{
          "shape":"PrincipalType",
          "documentation":"<p>The member's principal type to associate with the queue.</p>"
        },
        "identityStoreId":{
          "shape":"IdentityStoreId",
          "documentation":"<p>The member's identity store ID to associate with the queue.</p>"
        },
        "membershipLevel":{
          "shape":"MembershipLevel",
          "documentation":"<p>The principal's membership level for the associated queue.</p>"
        }
      }
    },
    "AssociateMemberToQueueResponse":{
      "type":"structure",
      "members":{
      }
    },
    "AssumeFleetRoleForReadRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the fleet's farm.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID.</p>",
          "location":"uri",
          "locationName":"fleetId"
        }
      }
    },
    "AssumeFleetRoleForReadResponse":{
      "type":"structure",
      "required":["credentials"],
      "members":{
        "credentials":{
          "shape":"AwsCredentials",
          "documentation":"<p>The credentials for the fleet role.</p>"
        }
      },
      "sensitive":true
    },
    "AssumeFleetRoleForWorkerRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId",
        "workerId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the fleet's farm.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID that contains the worker.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The ID of the worker assuming the fleet role.</p>",
          "location":"uri",
          "locationName":"workerId"
        }
      }
    },
    "AssumeFleetRoleForWorkerResponse":{
      "type":"structure",
      "required":["credentials"],
      "members":{
        "credentials":{
          "shape":"AwsCredentials",
          "documentation":"<p>The credentials for the worker.</p>"
        }
      },
      "sensitive":true
    },
    "AssumeQueueRoleForReadRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm containing the queue.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>",
          "location":"uri",
          "locationName":"queueId"
        }
      }
    },
    "AssumeQueueRoleForReadResponse":{
      "type":"structure",
      "required":["credentials"],
      "members":{
        "credentials":{
          "shape":"AwsCredentials",
          "documentation":"<p>The credentials for the queue role.</p>"
        }
      },
      "sensitive":true
    },
    "AssumeQueueRoleForUserRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the queue that the user assumes the role for.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID of the queue that the user assumes the role for.</p>",
          "location":"uri",
          "locationName":"queueId"
        }
      }
    },
    "AssumeQueueRoleForUserResponse":{
      "type":"structure",
      "required":["credentials"],
      "members":{
        "credentials":{
          "shape":"AwsCredentials",
          "documentation":"<p>The credentials for the queue role that a user has access to.</p>"
        }
      },
      "sensitive":true
    },
    "AssumeQueueRoleForWorkerRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId",
        "workerId",
        "queueId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the worker assuming the queue role.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID of the worker assuming the queue role.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID of the worker assuming the queue role.</p>",
          "location":"uri",
          "locationName":"workerId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID of the worker assuming the queue role.</p>",
          "location":"querystring",
          "locationName":"queueId"
        }
      }
    },
    "AssumeQueueRoleForWorkerResponse":{
      "type":"structure",
      "members":{
        "credentials":{
          "shape":"AwsCredentials",
          "documentation":"<p>The Amazon Web Services credentials for the role that the worker is assuming.</p>"
        }
      },
      "sensitive":true
    },
    "Attachments":{
      "type":"structure",
      "required":["manifests"],
      "members":{
        "manifests":{
          "shape":"ManifestPropertiesList",
          "documentation":"<p>A list of manifests which describe job attachment configurations.</p>"
        },
        "fileSystem":{
          "shape":"JobAttachmentsFileSystem",
          "documentation":"<p>The file system.</p>"
        }
      },
      "documentation":"<p>The attachments for jobs.</p>"
    },
    "AttributeCapabilityName":{
      "type":"string",
      "max":100,
      "min":1,
      "pattern":"([a-zA-Z][a-zA-Z0-9]{0,63}:)?attr(\\.[a-zA-Z][a-zA-Z0-9]{0,63})+"
    },
    "AttributeCapabilityValue":{
      "type":"string",
      "max":100,
      "min":1,
      "pattern":"[a-zA-Z_]([a-zA-Z0-9_\\-]{0,99})"
    },
    "AttributeCapabilityValuesList":{
      "type":"list",
      "member":{"shape":"AttributeCapabilityValue"},
      "max":10,
      "min":1
    },
    "AutoScalingMode":{
      "type":"string",
      "enum":[
        "NO_SCALING",
        "EVENT_BASED_AUTO_SCALING"
      ]
    },
    "AutoScalingStatus":{
      "type":"string",
      "enum":[
        "GROWING",
        "STEADY",
        "SHRINKING"
      ]
    },
    "AwsCredentials":{
      "type":"structure",
      "required":[
        "accessKeyId",
        "secretAccessKey",
        "sessionToken",
        "expiration"
      ],
      "members":{
        "accessKeyId":{
          "shape":"AccessKeyId",
          "documentation":"<p>The IAM access key ID.</p>"
        },
        "secretAccessKey":{
          "shape":"SecretAccessKey",
          "documentation":"<p>The IAM secret access key.</p>"
        },
        "sessionToken":{
          "shape":"SessionToken",
          "documentation":"<p>The IAM session token</p>"
        },
        "expiration":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The expiration date and time of the IAM credentials.</p>"
        }
      },
      "documentation":"<p>The Identity and Access Management credentials.</p>",
      "sensitive":true
    },
    "BatchGetJobEntityErrors":{
      "type":"list",
      "member":{"shape":"GetJobEntityError"}
    },
    "BatchGetJobEntityList":{
      "type":"list",
      "member":{"shape":"JobEntity"},
      "max":25,
      "min":0
    },
    "BatchGetJobEntityRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId",
        "workerId",
        "identifiers"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the worker that's fetching job details. The worker must have an assignment on a job to fetch job details.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID of the worker that's fetching job details. The worker must have an assignment on a job to fetch job details.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID of the worker containing the job details to get.</p>",
          "location":"uri",
          "locationName":"workerId"
        },
        "identifiers":{
          "shape":"JobEntityIdentifiers",
          "documentation":"<p>The job identifiers to include within the job entity batch details.</p>"
        }
      }
    },
    "BatchGetJobEntityResponse":{
      "type":"structure",
      "required":[
        "entities",
        "errors"
      ],
      "members":{
        "entities":{
          "shape":"BatchGetJobEntityList",
          "documentation":"<p>A list of the job entities, or details, in the batch.</p>"
        },
        "errors":{
          "shape":"BatchGetJobEntityErrors",
          "documentation":"<p>A list of errors from the job error logs for the batch.</p>"
        }
      }
    },
    "BoundedString":{
      "type":"string",
      "max":64,
      "min":1
    },
    "BudgetActionToAdd":{
      "type":"structure",
      "required":[
        "type",
        "thresholdPercentage"
      ],
      "members":{
        "type":{
          "shape":"BudgetActionType",
          "documentation":"<p>The type of budget action to add.</p>"
        },
        "thresholdPercentage":{
          "shape":"ThresholdPercentage",
          "documentation":"<p>The percentage threshold for the budget action to add.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>A description for the budget action to add.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        }
      },
      "documentation":"<p>The budget action to add.</p>"
    },
    "BudgetActionToRemove":{
      "type":"structure",
      "required":[
        "type",
        "thresholdPercentage"
      ],
      "members":{
        "type":{
          "shape":"BudgetActionType",
          "documentation":"<p>The type of budget action to remove.</p>"
        },
        "thresholdPercentage":{
          "shape":"ThresholdPercentage",
          "documentation":"<p>The percentage threshold for the budget action to remove.</p>"
        }
      },
      "documentation":"<p>The budget action to remove.</p>"
    },
    "BudgetActionType":{
      "type":"string",
      "enum":[
        "STOP_SCHEDULING_AND_COMPLETE_TASKS",
        "STOP_SCHEDULING_AND_CANCEL_TASKS"
      ]
    },
    "BudgetActionsToAdd":{
      "type":"list",
      "member":{"shape":"BudgetActionToAdd"},
      "max":10,
      "min":0
    },
    "BudgetActionsToRemove":{
      "type":"list",
      "member":{"shape":"BudgetActionToRemove"},
      "max":10,
      "min":0
    },
    "BudgetId":{
      "type":"string",
      "pattern":"budget-[0-9a-f]{32}"
    },
    "BudgetSchedule":{
      "type":"structure",
      "members":{
        "fixed":{
          "shape":"FixedBudgetSchedule",
          "documentation":"<p>The fixed start and end time of the budget's schedule.</p>"
        }
      },
      "documentation":"<p>The start and end time of the budget.</p>",
      "union":true
    },
    "BudgetStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "INACTIVE"
      ]
    },
    "BudgetSummaries":{
      "type":"list",
      "member":{"shape":"BudgetSummary"}
    },
    "BudgetSummary":{
      "type":"structure",
      "required":[
        "budgetId",
        "usageTrackingResource",
        "status",
        "displayName",
        "approximateDollarLimit",
        "usages",
        "createdBy",
        "createdAt"
      ],
      "members":{
        "budgetId":{
          "shape":"BudgetId",
          "documentation":"<p>The budget ID.</p>"
        },
        "usageTrackingResource":{
          "shape":"UsageTrackingResource",
          "documentation":"<p>The resource used to track expenditure in the budget.</p>"
        },
        "status":{
          "shape":"BudgetStatus",
          "documentation":"<p>The status of the budget.</p> <ul> <li> <p> <code>ACTIVE</code>–The budget is being evaluated.</p> </li> <li> <p> <code>INACTIVE</code>–The budget is inactive. This can include Expired, Canceled, or deleted Deleted statuses.</p> </li> </ul>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the budget summary to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the budget summary.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>",
          "deprecated":true,
          "deprecatedMessage":"ListBudgets no longer supports description. Use GetBudget if description is needed."
        },
        "approximateDollarLimit":{
          "shape":"ConsumedUsageLimit",
          "documentation":"<p>The approximate dollar limit of the budget.</p>"
        },
        "usages":{
          "shape":"ConsumedUsages",
          "documentation":"<p>The consumed usage for the budget.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        }
      },
      "documentation":"<p>The budget summary.</p>"
    },
    "CancelSessionActions":{
      "type":"map",
      "key":{"shape":"SessionId"},
      "value":{"shape":"SessionActionIdList"}
    },
    "ClientToken":{
      "type":"string",
      "max":64,
      "min":1
    },
    "CombinationExpression":{
      "type":"string",
      "max":1280,
      "min":1
    },
    "ComparisonOperator":{
      "type":"string",
      "enum":[
        "EQUAL",
        "NOT_EQUAL",
        "GREATER_THAN_EQUAL_TO",
        "GREATER_THAN",
        "LESS_THAN_EQUAL_TO",
        "LESS_THAN"
      ]
    },
    "CompletedStatus":{
      "type":"string",
      "enum":[
        "SUCCEEDED",
        "FAILED",
        "INTERRUPTED",
        "CANCELED",
        "NEVER_ATTEMPTED"
      ]
    },
    "ConflictException":{
      "type":"structure",
      "required":[
        "message",
        "reason",
        "resourceId",
        "resourceType"
      ],
      "members":{
        "message":{"shape":"String"},
        "reason":{
          "shape":"ConflictExceptionReason",
          "documentation":"<p>A description of the error.</p>"
        },
        "resourceId":{
          "shape":"String",
          "documentation":"<p>The identifier of the resource in use.</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>The type of the resource in use.</p>"
        },
        "context":{
          "shape":"ExceptionContext",
          "documentation":"<p>Information about the resources in use when the exception was thrown.</p>"
        }
      },
      "documentation":"<p>Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.</p>",
      "error":{
        "httpStatusCode":409,
        "senderFault":true
      },
      "exception":true
    },
    "ConflictExceptionReason":{
      "type":"string",
      "enum":[
        "CONFLICT_EXCEPTION",
        "CONCURRENT_MODIFICATION",
        "RESOURCE_ALREADY_EXISTS",
        "RESOURCE_IN_USE",
        "STATUS_CONFLICT"
      ]
    },
    "ConsumedUsageLimit":{
      "type":"float",
      "box":true,
      "min":0.01
    },
    "ConsumedUsages":{
      "type":"structure",
      "required":["approximateDollarUsage"],
      "members":{
        "approximateDollarUsage":{
          "shape":"Float",
          "documentation":"<p>The amount of the budget consumed.</p>"
        }
      },
      "documentation":"<p>The consumed usage for the resource.</p>"
    },
    "CopyJobTemplateRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "jobId",
        "queueId",
        "targetS3Location"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to copy.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID to copy.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID to copy.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "targetS3Location":{
          "shape":"S3Location",
          "documentation":"<p>The Amazon S3 bucket name and key where you would like to add a copy of the job template.</p>"
        }
      }
    },
    "CopyJobTemplateResponse":{
      "type":"structure",
      "required":["templateType"],
      "members":{
        "templateType":{
          "shape":"JobTemplateType",
          "documentation":"<p>The format of the job template, either <code>JSON</code> or <code>YAML</code>.</p>"
        }
      }
    },
    "CpuArchitectureType":{
      "type":"string",
      "enum":[
        "x86_64",
        "arm64"
      ]
    },
    "CreateBudgetRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "usageTrackingResource",
        "displayName",
        "approximateDollarLimit",
        "actions",
        "schedule"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to include in this budget.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "usageTrackingResource":{
          "shape":"UsageTrackingResource",
          "documentation":"<p>The queue ID provided to this budget to track usage.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the budget.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the budget.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "approximateDollarLimit":{
          "shape":"ConsumedUsageLimit",
          "documentation":"<p>The dollar limit based on consumed usage.</p>"
        },
        "actions":{
          "shape":"BudgetActionsToAdd",
          "documentation":"<p>The budget actions to specify what happens when the budget runs out.</p>"
        },
        "schedule":{
          "shape":"BudgetSchedule",
          "documentation":"<p>The schedule to associate with this budget.</p>"
        }
      }
    },
    "CreateBudgetResponse":{
      "type":"structure",
      "required":["budgetId"],
      "members":{
        "budgetId":{
          "shape":"BudgetId",
          "documentation":"<p>The budget ID.</p>"
        }
      }
    },
    "CreateFarmRequest":{
      "type":"structure",
      "required":["displayName"],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the farm.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the farm.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "kmsKeyArn":{
          "shape":"KmsKeyArn",
          "documentation":"<p>The ARN of the KMS key to use on the farm.</p>"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>The tags to add to your farm. Each tag consists of a tag key and a tag value. Tag keys and values are both required, but tag values can be empty strings.</p>"
        }
      }
    },
    "CreateFarmResponse":{
      "type":"structure",
      "required":["farmId"],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID.</p>"
        }
      }
    },
    "CreateFleetRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "displayName",
        "roleArn",
        "maxWorkerCount",
        "configuration"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm to connect to the fleet.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the fleet.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the fleet.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "roleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The IAM role ARN for the role that the fleet's workers will use.</p>"
        },
        "minWorkerCount":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The minimum number of workers for the fleet.</p>"
        },
        "maxWorkerCount":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The maximum number of workers for the fleet.</p> <p>Deadline Cloud limits the number of workers to less than or equal to the fleet's maximum worker count. The service maintains eventual consistency for the worker count. If you make multiple rapid calls to <code>CreateWorker</code> before the field updates, you might exceed your fleet's maximum worker count. For example, if your <code>maxWorkerCount</code> is 10 and you currently have 9 workers, making two quick <code>CreateWorker</code> calls might successfully create 2 workers instead of 1, resulting in 11 total workers.</p>"
        },
        "configuration":{
          "shape":"FleetConfiguration",
          "documentation":"<p>The configuration settings for the fleet. Customer managed fleets are self-managed. Service managed Amazon EC2 fleets are managed by Deadline Cloud.</p>"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>Each tag consists of a tag key and a tag value. Tag keys and values are both required, but tag values can be empty strings.</p>"
        },
        "hostConfiguration":{
          "shape":"HostConfiguration",
          "documentation":"<p>Provides a script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet.</p>"
        }
      }
    },
    "CreateFleetResponse":{
      "type":"structure",
      "required":["fleetId"],
      "members":{
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID.</p>"
        }
      }
    },
    "CreateJobRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "priority"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm to connect to the job.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The ID of the queue that the job is submitted to.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "template":{
          "shape":"JobTemplate",
          "documentation":"<p>The job template to use for this job.</p>"
        },
        "templateType":{
          "shape":"JobTemplateType",
          "documentation":"<p>The file type for the job template.</p>"
        },
        "priority":{
          "shape":"JobPriority",
          "documentation":"<p>The priority of the job. The highest priority (first scheduled) is 100. When two jobs have the same priority, the oldest job is scheduled first.</p>"
        },
        "parameters":{
          "shape":"JobParameters",
          "documentation":"<p>The parameters for the job.</p>"
        },
        "attachments":{
          "shape":"Attachments",
          "documentation":"<p>The attachments for the job. Attach files required for the job to run to a render job.</p>"
        },
        "storageProfileId":{
          "shape":"StorageProfileId",
          "documentation":"<p>The storage profile ID for the storage profile to connect to the job.</p>"
        },
        "targetTaskRunStatus":{
          "shape":"CreateJobTargetTaskRunStatus",
          "documentation":"<p>The initial job status when it is created. Jobs that are created with a <code>SUSPENDED</code> status will not run until manually requeued.</p>"
        },
        "maxFailedTasksCount":{
          "shape":"MaxFailedTasksCount",
          "documentation":"<p>The number of task failures before the job stops running and is marked as <code>FAILED</code>.</p>"
        },
        "maxRetriesPerTask":{
          "shape":"MaxRetriesPerTask",
          "documentation":"<p>The maximum number of retries for each task.</p>"
        },
        "maxWorkerCount":{
          "shape":"MaxWorkerCount",
          "documentation":"<p>The maximum number of worker hosts that can concurrently process a job. When the <code>maxWorkerCount</code> is reached, no more workers will be assigned to process the job, even if the fleets assigned to the job's queue has available workers.</p> <p>You can't set the <code>maxWorkerCount</code> to 0. If you set it to -1, there is no maximum number of workers.</p> <p>If you don't specify the <code>maxWorkerCount</code>, Deadline Cloud won't throttle the number of workers used to process the job.</p>"
        },
        "sourceJobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the source job.</p>"
        }
      }
    },
    "CreateJobResponse":{
      "type":"structure",
      "required":["jobId"],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        }
      }
    },
    "CreateJobTargetTaskRunStatus":{
      "type":"string",
      "enum":[
        "READY",
        "SUSPENDED"
      ]
    },
    "CreateLicenseEndpointRequest":{
      "type":"structure",
      "required":[
        "vpcId",
        "subnetIds",
        "securityGroupIds"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "vpcId":{
          "shape":"VpcId",
          "documentation":"<p>The VPC (virtual private cloud) ID to use with the license endpoint.</p>"
        },
        "subnetIds":{
          "shape":"CreateLicenseEndpointRequestSubnetIdsList",
          "documentation":"<p>The subnet IDs.</p>"
        },
        "securityGroupIds":{
          "shape":"CreateLicenseEndpointRequestSecurityGroupIdsList",
          "documentation":"<p>The security group IDs.</p>"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>Each tag consists of a tag key and a tag value. Tag keys and values are both required, but tag values can be empty strings.</p>"
        }
      }
    },
    "CreateLicenseEndpointRequestSecurityGroupIdsList":{
      "type":"list",
      "member":{"shape":"SecurityGroupId"},
      "max":10,
      "min":1
    },
    "CreateLicenseEndpointRequestSubnetIdsList":{
      "type":"list",
      "member":{"shape":"SubnetId"},
      "max":10,
      "min":1
    },
    "CreateLicenseEndpointResponse":{
      "type":"structure",
      "required":["licenseEndpointId"],
      "members":{
        "licenseEndpointId":{
          "shape":"LicenseEndpointId",
          "documentation":"<p>The license endpoint ID.</p>"
        }
      }
    },
    "CreateLimitRequest":{
      "type":"structure",
      "required":[
        "displayName",
        "amountRequirementName",
        "maxCount",
        "farmId"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the limit.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "amountRequirementName":{
          "shape":"AmountRequirementName",
          "documentation":"<p>The value that you specify as the <code>name</code> in the <code>amounts</code> field of the <code>hostRequirements</code> in a step of a job template to declare the limit requirement.</p>"
        },
        "maxCount":{
          "shape":"MaxCount",
          "documentation":"<p>The maximum number of resources constrained by this limit. When all of the resources are in use, steps that require the limit won't be scheduled until the resource is available.</p> <p>The <code>maxCount</code> must not be 0. If the value is -1, there is no restriction on the number of resources that can be acquired for this limit.</p>"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm that contains the limit.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>A description of the limit. A description helps you identify the purpose of the limit.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        }
      }
    },
    "CreateLimitResponse":{
      "type":"structure",
      "required":["limitId"],
      "members":{
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>A unique identifier for the limit. Use this identifier in other operations, such as <code>CreateQueueLimitAssociation</code> and <code>DeleteLimit</code>.</p>"
        }
      }
    },
    "CreateMonitorRequest":{
      "type":"structure",
      "required":[
        "displayName",
        "identityCenterInstanceArn",
        "subdomain",
        "roleArn"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The name that you give the monitor that is displayed in the Deadline Cloud console.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "identityCenterInstanceArn":{
          "shape":"IdentityCenterInstanceArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM Identity Center instance that authenticates monitor users.</p>"
        },
        "subdomain":{
          "shape":"Subdomain",
          "documentation":"<p>The subdomain to use when creating the monitor URL. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.</p>"
        },
        "roleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role that the monitor uses to connect to Deadline Cloud. Every user that signs in to the monitor using IAM Identity Center uses this role to access Deadline Cloud resources.</p>"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>The tags to add to your monitor. Each tag consists of a tag key and a tag value. Tag keys and values are both required, but tag values can be empty strings.</p>"
        }
      }
    },
    "CreateMonitorResponse":{
      "type":"structure",
      "required":[
        "monitorId",
        "identityCenterApplicationArn"
      ],
      "members":{
        "monitorId":{
          "shape":"MonitorId",
          "documentation":"<p>The unique identifier of the monitor.</p>"
        },
        "identityCenterApplicationArn":{
          "shape":"IdentityCenterApplicationArn",
          "documentation":"<p>The Amazon Resource Name (ARN) that IAM Identity Center assigns to the monitor.</p>"
        }
      }
    },
    "CreateQueueEnvironmentRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "priority",
        "templateType",
        "template"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm to connect to the environment.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID to connect the queue and environment.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "priority":{
          "shape":"Priority",
          "documentation":"<p>Sets the priority of the environments in the queue from 0 to 10,000, where 0 is the highest priority (activated first and deactivated last). If two environments share the same priority value, the environment created first takes higher priority.</p>"
        },
        "templateType":{
          "shape":"EnvironmentTemplateType",
          "documentation":"<p>The template's file type, <code>JSON</code> or <code>YAML</code>.</p>"
        },
        "template":{
          "shape":"EnvironmentTemplate",
          "documentation":"<p>The environment template to use in the queue.</p>"
        }
      }
    },
    "CreateQueueEnvironmentResponse":{
      "type":"structure",
      "required":["queueEnvironmentId"],
      "members":{
        "queueEnvironmentId":{
          "shape":"QueueEnvironmentId",
          "documentation":"<p>The queue environment ID.</p>"
        }
      }
    },
    "CreateQueueFleetAssociationRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "fleetId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The ID of the farm that the queue and fleet belong to.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID.</p>"
        }
      }
    },
    "CreateQueueFleetAssociationResponse":{
      "type":"structure",
      "members":{
      }
    },
    "CreateQueueLimitAssociationRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "limitId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The unique identifier of the farm that contains the queue and limit to associate.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The unique identifier of the queue to associate with the limit.</p>"
        },
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>The unique identifier of the limit to associate with the queue.</p>"
        }
      }
    },
    "CreateQueueLimitAssociationResponse":{
      "type":"structure",
      "members":{
      }
    },
    "CreateQueueRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "displayName"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm to connect to the queue.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the queue.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the queue.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "defaultBudgetAction":{
          "shape":"DefaultQueueBudgetAction",
          "documentation":"<p>The default action to take on a queue if a budget isn't configured.</p>"
        },
        "jobAttachmentSettings":{
          "shape":"JobAttachmentSettings",
          "documentation":"<p>The job attachment settings for the queue. These are the Amazon S3 bucket name and the Amazon S3 prefix.</p>"
        },
        "roleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The IAM role ARN that workers will use while running jobs for this queue.</p>"
        },
        "jobRunAsUser":{
          "shape":"JobRunAsUser",
          "documentation":"<p>The jobs in the queue run as the specified POSIX user.</p>"
        },
        "requiredFileSystemLocationNames":{
          "shape":"RequiredFileSystemLocationNames",
          "documentation":"<p>The file system location name to include in the queue.</p>"
        },
        "allowedStorageProfileIds":{
          "shape":"AllowedStorageProfileIds",
          "documentation":"<p>The storage profile IDs to include in the queue.</p>"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>Each tag consists of a tag key and a tag value. Tag keys and values are both required, but tag values can be empty strings.</p>"
        }
      }
    },
    "CreateQueueResponse":{
      "type":"structure",
      "required":["queueId"],
      "members":{
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>"
        }
      }
    },
    "CreateStorageProfileRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "displayName",
        "osFamily"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm to connect to the storage profile.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the storage profile.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "osFamily":{
          "shape":"StorageProfileOperatingSystemFamily",
          "documentation":"<p>The type of operating system (OS) for the storage profile.</p>"
        },
        "fileSystemLocations":{
          "shape":"FileSystemLocationsList",
          "documentation":"<p>File system paths to include in the storage profile.</p>"
        }
      }
    },
    "CreateStorageProfileResponse":{
      "type":"structure",
      "required":["storageProfileId"],
      "members":{
        "storageProfileId":{
          "shape":"StorageProfileId",
          "documentation":"<p>The storage profile ID.</p>"
        }
      }
    },
    "CreateWorkerRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm to connect to the worker.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID to connect to the worker.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "hostProperties":{
          "shape":"HostPropertiesRequest",
          "documentation":"<p>The IP address and host name of the worker.</p>"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>Each tag consists of a tag key and a tag value. Tag keys and values are both required, but tag values can be empty strings.</p>"
        }
      }
    },
    "CreateWorkerResponse":{
      "type":"structure",
      "required":["workerId"],
      "members":{
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID.</p>"
        }
      }
    },
    "CreatedAt":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "CreatedBy":{"type":"string"},
    "CustomFleetAmountCapabilities":{
      "type":"list",
      "member":{"shape":"FleetAmountCapability"},
      "max":15,
      "min":1
    },
    "CustomFleetAttributeCapabilities":{
      "type":"list",
      "member":{"shape":"FleetAttributeCapability"},
      "max":15,
      "min":1
    },
    "CustomerManagedFleetConfiguration":{
      "type":"structure",
      "required":[
        "mode",
        "workerCapabilities"
      ],
      "members":{
        "mode":{
          "shape":"AutoScalingMode",
          "documentation":"<p>The Auto Scaling mode for the customer managed fleet configuration.</p>"
        },
        "workerCapabilities":{
          "shape":"CustomerManagedWorkerCapabilities",
          "documentation":"<p>The worker capabilities for a customer managed fleet configuration.</p>"
        },
        "storageProfileId":{
          "shape":"StorageProfileId",
          "documentation":"<p>The storage profile ID.</p>"
        },
        "tagPropagationMode":{
          "shape":"TagPropagationMode",
          "documentation":"<p>Specifies whether tags associated with a fleet are attached to workers when the worker is launched. </p> <p>When the <code>tagPropagationMode</code> is set to <code>PROPAGATE_TAGS_TO_WORKERS_AT_LAUNCH</code> any tag associated with a fleet is attached to workers when they launch. If the tags for a fleet change, the tags associated with running workers <b>do not</b> change.</p> <p>If you don't specify <code>tagPropagationMode</code>, the default is <code>NO_PROPAGATION</code>.</p>"
        }
      },
      "documentation":"<p>The details of a customer managed fleet configuration.</p>"
    },
    "CustomerManagedFleetOperatingSystemFamily":{
      "type":"string",
      "enum":[
        "WINDOWS",
        "LINUX",
        "MACOS"
      ]
    },
    "CustomerManagedWorkerCapabilities":{
      "type":"structure",
      "required":[
        "vCpuCount",
        "memoryMiB",
        "osFamily",
        "cpuArchitectureType"
      ],
      "members":{
        "vCpuCount":{
          "shape":"VCpuCountRange",
          "documentation":"<p>The vCPU count for the customer manged worker capabilities.</p>"
        },
        "memoryMiB":{
          "shape":"MemoryMiBRange",
          "documentation":"<p>The memory (MiB).</p>"
        },
        "acceleratorTypes":{
          "shape":"AcceleratorTypes",
          "documentation":"<p>The accelerator types for the customer managed worker capabilities.</p>"
        },
        "acceleratorCount":{
          "shape":"AcceleratorCountRange",
          "documentation":"<p>The range of the accelerator.</p>"
        },
        "acceleratorTotalMemoryMiB":{
          "shape":"AcceleratorTotalMemoryMiBRange",
          "documentation":"<p>The total memory (MiB) for the customer managed worker capabilities.</p>"
        },
        "osFamily":{
          "shape":"CustomerManagedFleetOperatingSystemFamily",
          "documentation":"<p>The operating system (OS) family.</p>"
        },
        "cpuArchitectureType":{
          "shape":"CpuArchitectureType",
          "documentation":"<p>The CPU architecture type for the customer managed worker capabilities.</p>"
        },
        "customAmounts":{
          "shape":"CustomFleetAmountCapabilities",
          "documentation":"<p>Custom requirement ranges for customer managed worker capabilities.</p>"
        },
        "customAttributes":{
          "shape":"CustomFleetAttributeCapabilities",
          "documentation":"<p>Custom attributes for the customer manged worker capabilities.</p>"
        }
      },
      "documentation":"<p>The worker capabilities for a customer managed workflow.</p>"
    },
    "DateTimeFilterExpression":{
      "type":"structure",
      "required":[
        "name",
        "operator",
        "dateTime"
      ],
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the date-time field to filter on.</p>"
        },
        "operator":{
          "shape":"ComparisonOperator",
          "documentation":"<p>The type of comparison to use to filter the results.</p>"
        },
        "dateTime":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The date and time.</p>"
        }
      },
      "documentation":"<p>The time stamp in date-time format.</p>"
    },
    "DefaultQueueBudgetAction":{
      "type":"string",
      "enum":[
        "NONE",
        "STOP_SCHEDULING_AND_COMPLETE_TASKS",
        "STOP_SCHEDULING_AND_CANCEL_TASKS"
      ]
    },
    "DeleteBudgetRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "budgetId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm to remove from the budget.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "budgetId":{
          "shape":"BudgetId",
          "documentation":"<p>The budget ID of the budget to delete.</p>",
          "location":"uri",
          "locationName":"budgetId"
        }
      }
    },
    "DeleteBudgetResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteFarmRequest":{
      "type":"structure",
      "required":["farmId"],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm to delete.</p>",
          "location":"uri",
          "locationName":"farmId"
        }
      }
    },
    "DeleteFarmResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteFleetRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm to remove from the fleet.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID of the fleet to delete.</p>",
          "location":"uri",
          "locationName":"fleetId"
        }
      }
    },
    "DeleteFleetResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteLicenseEndpointRequest":{
      "type":"structure",
      "required":["licenseEndpointId"],
      "members":{
        "licenseEndpointId":{
          "shape":"LicenseEndpointId",
          "documentation":"<p>The license endpoint ID of the license endpoint to delete.</p>",
          "location":"uri",
          "locationName":"licenseEndpointId"
        }
      }
    },
    "DeleteLicenseEndpointResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteLimitRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "limitId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The unique identifier of the farm that contains the limit to delete.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>The unique identifier of the limit to delete.</p>",
          "location":"uri",
          "locationName":"limitId"
        }
      }
    },
    "DeleteLimitResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteMeteredProductRequest":{
      "type":"structure",
      "required":[
        "licenseEndpointId",
        "productId"
      ],
      "members":{
        "licenseEndpointId":{
          "shape":"LicenseEndpointId",
          "documentation":"<p>The ID of the license endpoint from which to remove the metered product.</p>",
          "location":"uri",
          "locationName":"licenseEndpointId"
        },
        "productId":{
          "shape":"MeteredProductId",
          "documentation":"<p>The product ID to remove from the license endpoint.</p>",
          "location":"uri",
          "locationName":"productId"
        }
      }
    },
    "DeleteMeteredProductResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteMonitorRequest":{
      "type":"structure",
      "required":["monitorId"],
      "members":{
        "monitorId":{
          "shape":"MonitorId",
          "documentation":"<p>The unique identifier of the monitor to delete. This ID is returned by the <code>CreateMonitor</code> operation, and is included in the response to the <code>GetMonitor</code> operation.</p>",
          "location":"uri",
          "locationName":"monitorId"
        }
      }
    },
    "DeleteMonitorResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteQueueEnvironmentRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "queueEnvironmentId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm from which to remove the queue environment.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID of the queue environment to delete.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "queueEnvironmentId":{
          "shape":"QueueEnvironmentId",
          "documentation":"<p>The queue environment ID of the queue environment to delete.</p>",
          "location":"uri",
          "locationName":"queueEnvironmentId"
        }
      }
    },
    "DeleteQueueEnvironmentResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteQueueFleetAssociationRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "fleetId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm that holds the queue-fleet association.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID of the queue-fleet association.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID of the queue-fleet association.</p>",
          "location":"uri",
          "locationName":"fleetId"
        }
      }
    },
    "DeleteQueueFleetAssociationResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteQueueLimitAssociationRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "limitId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The unique identifier of the farm that contains the queue and limit to disassociate.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The unique identifier of the queue to disassociate.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>The unique identifier of the limit to disassociate.</p>",
          "location":"uri",
          "locationName":"limitId"
        }
      }
    },
    "DeleteQueueLimitAssociationResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteQueueRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The ID of the farm from which to remove the queue.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID of the queue to delete.</p>",
          "location":"uri",
          "locationName":"queueId"
        }
      }
    },
    "DeleteQueueResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteStorageProfileRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "storageProfileId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm from which to remove the storage profile.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "storageProfileId":{
          "shape":"StorageProfileId",
          "documentation":"<p>The storage profile ID of the storage profile to delete.</p>",
          "location":"uri",
          "locationName":"storageProfileId"
        }
      }
    },
    "DeleteStorageProfileResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteWorkerRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId",
        "workerId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the worker to delete.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID of the worker to delete.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID of the worker to delete.</p>",
          "location":"uri",
          "locationName":"workerId"
        }
      }
    },
    "DeleteWorkerResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DependenciesList":{
      "type":"list",
      "member":{"shape":"StepId"}
    },
    "DependencyConsumerResolutionStatus":{
      "type":"string",
      "enum":[
        "RESOLVED",
        "UNRESOLVED"
      ]
    },
    "DependencyCounts":{
      "type":"structure",
      "required":[
        "dependenciesResolved",
        "dependenciesUnresolved",
        "consumersResolved",
        "consumersUnresolved"
      ],
      "members":{
        "dependenciesResolved":{
          "shape":"Integer",
          "documentation":"<p>The number of resolved dependencies.</p>"
        },
        "dependenciesUnresolved":{
          "shape":"Integer",
          "documentation":"<p>The number of unresolved dependencies.</p>"
        },
        "consumersResolved":{
          "shape":"Integer",
          "documentation":"<p>The number of consumers resolved.</p>"
        },
        "consumersUnresolved":{
          "shape":"Integer",
          "documentation":"<p>The number of unresolved consumers.</p>"
        }
      },
      "documentation":"<p>The number of dependencies for the consumer.</p>"
    },
    "Description":{
      "type":"string",
      "max":100,
      "min":0,
      "sensitive":true
    },
    "DesiredWorkerStatus":{
      "type":"string",
      "enum":["STOPPED"]
    },
    "DisassociateMemberFromFarmRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "principalId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm to disassociate from the member.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>A member's principal ID to disassociate from a farm.</p>",
          "location":"uri",
          "locationName":"principalId"
        }
      }
    },
    "DisassociateMemberFromFarmResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DisassociateMemberFromFleetRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId",
        "principalId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the fleet to disassociate a member from.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID of the fleet to from which to disassociate a member.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>A member's principal ID to disassociate from a fleet.</p>",
          "location":"uri",
          "locationName":"principalId"
        }
      }
    },
    "DisassociateMemberFromFleetResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DisassociateMemberFromJobRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId",
        "principalId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the job to disassociate from the member.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID connected to a job for which you're disassociating a member.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID to disassociate from a member in a job.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>A member's principal ID to disassociate from a job.</p>",
          "location":"uri",
          "locationName":"principalId"
        }
      }
    },
    "DisassociateMemberFromJobResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DisassociateMemberFromQueueRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "principalId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the queue to disassociate from a member.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID of the queue in which you're disassociating from a member.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>A member's principal ID to disassociate from a queue.</p>",
          "location":"uri",
          "locationName":"principalId"
        }
      }
    },
    "DisassociateMemberFromQueueResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DnsName":{"type":"string"},
    "Document":{
      "type":"structure",
      "members":{
      },
      "document":true,
      "sensitive":true
    },
    "Double":{
      "type":"double",
      "box":true
    },
    "EbsIops":{
      "type":"integer",
      "box":true,
      "max":16000,
      "min":3000
    },
    "EbsThroughputMiB":{
      "type":"integer",
      "box":true,
      "max":1000,
      "min":125
    },
    "Ec2EbsVolume":{
      "type":"structure",
      "members":{
        "sizeGiB":{
          "shape":"Integer",
          "documentation":"<p>The EBS volume size in GiB.</p>"
        },
        "iops":{
          "shape":"EbsIops",
          "documentation":"<p>The IOPS per volume.</p>"
        },
        "throughputMiB":{
          "shape":"EbsThroughputMiB",
          "documentation":"<p>The throughput per volume in MiB.</p>"
        }
      },
      "documentation":"<p>Specifies the EBS volume.</p>"
    },
    "Ec2MarketType":{
      "type":"string",
      "enum":[
        "on-demand",
        "spot",
        "wait-and-save"
      ]
    },
    "EndedAt":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "EndsAt":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "EnvironmentDetailsEntity":{
      "type":"structure",
      "required":[
        "jobId",
        "environmentId",
        "schemaVersion",
        "template"
      ],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID.</p>"
        },
        "schemaVersion":{
          "shape":"String",
          "documentation":"<p>The schema version in the environment.</p>"
        },
        "template":{
          "shape":"Document",
          "documentation":"<p>The template used for the environment.</p>"
        }
      },
      "documentation":"<p>The details of a specified environment.</p>"
    },
    "EnvironmentDetailsError":{
      "type":"structure",
      "required":[
        "jobId",
        "environmentId",
        "code",
        "message"
      ],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID.</p>"
        },
        "code":{
          "shape":"JobEntityErrorCode",
          "documentation":"<p>The error code.</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>The error message detailing the error's cause.</p>"
        }
      },
      "documentation":"<p>The error details for the environment.</p>"
    },
    "EnvironmentDetailsIdentifiers":{
      "type":"structure",
      "required":[
        "jobId",
        "environmentId"
      ],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID.</p>"
        }
      },
      "documentation":"<p>The IDs of the job and environment.</p>"
    },
    "EnvironmentEnterSessionActionDefinition":{
      "type":"structure",
      "required":["environmentId"],
      "members":{
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID.</p>"
        }
      },
      "documentation":"<p>The environment ID to use to enter a session action.</p>"
    },
    "EnvironmentEnterSessionActionDefinitionSummary":{
      "type":"structure",
      "required":["environmentId"],
      "members":{
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID.</p>"
        }
      },
      "documentation":"<p>Defines the environment a session action enters in.</p>"
    },
    "EnvironmentExitSessionActionDefinition":{
      "type":"structure",
      "required":["environmentId"],
      "members":{
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID.</p>"
        }
      },
      "documentation":"<p>Defines the environment a session action exits from.</p>"
    },
    "EnvironmentExitSessionActionDefinitionSummary":{
      "type":"structure",
      "required":["environmentId"],
      "members":{
        "environmentId":{
          "shape":"EnvironmentId",
          "documentation":"<p>The environment ID.</p>"
        }
      },
      "documentation":"<p>A summary of the environment details for which a session action to exits.</p>"
    },
    "EnvironmentId":{
      "type":"string",
      "max":1024,
      "min":1,
      "pattern":"(STEP:step-[0-9a-f]{32}:.*)|(JOB:job-[0-9a-f]{32}:.*)"
    },
    "EnvironmentName":{"type":"string"},
    "EnvironmentTemplate":{
      "type":"string",
      "max":15000,
      "min":1,
      "sensitive":true
    },
    "EnvironmentTemplateType":{
      "type":"string",
      "enum":[
        "JSON",
        "YAML"
      ]
    },
    "ExceptionContext":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "FarmId":{
      "type":"string",
      "pattern":"farm-[0-9a-f]{32}"
    },
    "FarmMember":{
      "type":"structure",
      "required":[
        "farmId",
        "principalId",
        "principalType",
        "identityStoreId",
        "membershipLevel"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm member.</p>"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>The principal ID of the farm member.</p>"
        },
        "principalType":{
          "shape":"PrincipalType",
          "documentation":"<p>The principal type of the farm member.</p>"
        },
        "identityStoreId":{
          "shape":"IdentityStoreId",
          "documentation":"<p>The identity store ID of the farm member.</p>"
        },
        "membershipLevel":{
          "shape":"MembershipLevel",
          "documentation":"<p>The farm member's membership level.</p>"
        }
      },
      "documentation":"<p>The member of a farm.</p>"
    },
    "FarmMembers":{
      "type":"list",
      "member":{"shape":"FarmMember"}
    },
    "FarmSummaries":{
      "type":"list",
      "member":{"shape":"FarmSummary"}
    },
    "FarmSummary":{
      "type":"structure",
      "required":[
        "farmId",
        "displayName",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the farm.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "kmsKeyArn":{
          "shape":"KmsKeyArn",
          "documentation":"<p>The ARN for the KMS key.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        }
      },
      "documentation":"<p>The summary of details for a farm.</p>"
    },
    "FieldSortExpression":{
      "type":"structure",
      "required":[
        "sortOrder",
        "name"
      ],
      "members":{
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>The sort order for the field.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the field.</p>"
        }
      },
      "documentation":"<p>The field sorting order and name of the field.</p>"
    },
    "FileSystemLocation":{
      "type":"structure",
      "required":[
        "name",
        "path",
        "type"
      ],
      "members":{
        "name":{
          "shape":"FileSystemLocationName",
          "documentation":"<p>The location name.</p>"
        },
        "path":{
          "shape":"PathString",
          "documentation":"<p>The file path.</p>"
        },
        "type":{
          "shape":"FileSystemLocationType",
          "documentation":"<p>The type of file.</p>"
        }
      },
      "documentation":"<p>The details of the file system location for the resource.</p>",
      "sensitive":true
    },
    "FileSystemLocationName":{
      "type":"string",
      "max":64,
      "min":1,
      "pattern":"[0-9A-Za-z ]*"
    },
    "FileSystemLocationType":{
      "type":"string",
      "enum":[
        "SHARED",
        "LOCAL"
      ]
    },
    "FileSystemLocationsList":{
      "type":"list",
      "member":{"shape":"FileSystemLocation"},
      "max":20,
      "min":0
    },
    "FixedBudgetSchedule":{
      "type":"structure",
      "required":[
        "startTime",
        "endTime"
      ],
      "members":{
        "startTime":{
          "shape":"StartsAt",
          "documentation":"<p>When the budget starts.</p>"
        },
        "endTime":{
          "shape":"EndsAt",
          "documentation":"<p>When the budget ends.</p>"
        }
      },
      "documentation":"<p>The details of a fixed budget schedule.</p>"
    },
    "FleetAmountCapabilities":{
      "type":"list",
      "member":{"shape":"FleetAmountCapability"},
      "max":25,
      "min":1
    },
    "FleetAmountCapability":{
      "type":"structure",
      "required":[
        "name",
        "min"
      ],
      "members":{
        "name":{
          "shape":"AmountCapabilityName",
          "documentation":"<p>The name of the fleet capability.</p>"
        },
        "min":{
          "shape":"Float",
          "documentation":"<p>The minimum amount of fleet worker capability.</p>"
        },
        "max":{
          "shape":"Float",
          "documentation":"<p>The maximum amount of the fleet worker capability.</p>"
        }
      },
      "documentation":"<p>The fleet amount and attribute capabilities.</p>"
    },
    "FleetAttributeCapabilities":{
      "type":"list",
      "member":{"shape":"FleetAttributeCapability"},
      "max":25,
      "min":1
    },
    "FleetAttributeCapability":{
      "type":"structure",
      "required":[
        "name",
        "values"
      ],
      "members":{
        "name":{
          "shape":"AttributeCapabilityName",
          "documentation":"<p>The name of the fleet attribute capability for the worker.</p>"
        },
        "values":{
          "shape":"AttributeCapabilityValuesList",
          "documentation":"<p>The number of fleet attribute capabilities.</p>"
        }
      },
      "documentation":"<p>Defines the fleet's capability name, minimum, and maximum.</p>"
    },
    "FleetCapabilities":{
      "type":"structure",
      "members":{
        "amounts":{
          "shape":"FleetAmountCapabilities",
          "documentation":"<p>Amount capabilities of the fleet.</p>"
        },
        "attributes":{
          "shape":"FleetAttributeCapabilities",
          "documentation":"<p>Attribute capabilities of the fleet.</p>"
        }
      },
      "documentation":"<p>The amounts and attributes of fleets.</p>"
    },
    "FleetConfiguration":{
      "type":"structure",
      "members":{
        "customerManaged":{
          "shape":"CustomerManagedFleetConfiguration",
          "documentation":"<p>The customer managed fleets within a fleet configuration.</p>"
        },
        "serviceManagedEc2":{
          "shape":"ServiceManagedEc2FleetConfiguration",
          "documentation":"<p>The service managed Amazon EC2 instances for a fleet configuration.</p>"
        }
      },
      "documentation":"<p>Fleet configuration details.</p>",
      "union":true
    },
    "FleetId":{
      "type":"string",
      "pattern":"fleet-[0-9a-f]{32}"
    },
    "FleetMember":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId",
        "principalId",
        "principalType",
        "identityStoreId",
        "membershipLevel"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID.</p>"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID.</p>"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>The principal ID of the fleet member.</p>"
        },
        "principalType":{
          "shape":"PrincipalType",
          "documentation":"<p>The principal type of the fleet member.</p>"
        },
        "identityStoreId":{
          "shape":"IdentityStoreId",
          "documentation":"<p>The identity store ID.</p>"
        },
        "membershipLevel":{
          "shape":"MembershipLevel",
          "documentation":"<p>The fleet member's membership level.</p>"
        }
      },
      "documentation":"<p>The fleet member.</p>"
    },
    "FleetMembers":{
      "type":"list",
      "member":{"shape":"FleetMember"}
    },
    "FleetStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "CREATE_IN_PROGRESS",
        "UPDATE_IN_PROGRESS",
        "CREATE_FAILED",
        "UPDATE_FAILED",
        "SUSPENDED"
      ]
    },
    "FleetSummaries":{
      "type":"list",
      "member":{"shape":"FleetSummary"}
    },
    "FleetSummary":{
      "type":"structure",
      "required":[
        "fleetId",
        "farmId",
        "displayName",
        "status",
        "workerCount",
        "minWorkerCount",
        "maxWorkerCount",
        "configuration",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID.</p>"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the fleet summary to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "status":{
          "shape":"FleetStatus",
          "documentation":"<p>The status of the fleet.</p>"
        },
        "statusMessage":{
          "shape":"String",
          "documentation":"<p>A message that communicates a suspended status of the fleet.</p>"
        },
        "autoScalingStatus":{
          "shape":"AutoScalingStatus",
          "documentation":"<p>The Auto Scaling status of a fleet.</p>"
        },
        "targetWorkerCount":{
          "shape":"Integer",
          "documentation":"<p>The target number of workers in a fleet.</p>"
        },
        "workerCount":{
          "shape":"Integer",
          "documentation":"<p>The number of workers in the fleet summary.</p>"
        },
        "minWorkerCount":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The minimum number of workers in the fleet.</p>"
        },
        "maxWorkerCount":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The maximum number of workers specified in the fleet.</p>"
        },
        "configuration":{
          "shape":"FleetConfiguration",
          "documentation":"<p>The configuration details for the fleet.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        }
      },
      "documentation":"<p>The details of a fleet.</p>"
    },
    "Float":{
      "type":"float",
      "box":true
    },
    "FloatString":{
      "type":"string",
      "max":26,
      "min":1,
      "pattern":"[-]?(0|[1-9][0-9]*)([.][0-9]+)?([eE][+-]?[0-9]+)?"
    },
    "GetBudgetRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "budgetId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm connected to the budget.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "budgetId":{
          "shape":"BudgetId",
          "documentation":"<p>The budget ID.</p>",
          "location":"uri",
          "locationName":"budgetId"
        }
      }
    },
    "GetBudgetResponse":{
      "type":"structure",
      "required":[
        "budgetId",
        "usageTrackingResource",
        "status",
        "displayName",
        "approximateDollarLimit",
        "usages",
        "actions",
        "schedule",
        "createdBy",
        "createdAt"
      ],
      "members":{
        "budgetId":{
          "shape":"BudgetId",
          "documentation":"<p>The budget ID.</p>"
        },
        "usageTrackingResource":{
          "shape":"UsageTrackingResource",
          "documentation":"<p>The resource that the budget is tracking usage for.</p>"
        },
        "status":{
          "shape":"BudgetStatus",
          "documentation":"<p>The status of the budget.</p> <ul> <li> <p> <code>ACTIVE</code>–Get a budget being evaluated.</p> </li> <li> <p> <code>INACTIVE</code>–Get an inactive budget. This can include expired, canceled, or deleted statuses.</p> </li> </ul>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the budget.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the budget.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "approximateDollarLimit":{
          "shape":"ConsumedUsageLimit",
          "documentation":"<p>The consumed usage limit for the budget.</p>"
        },
        "usages":{
          "shape":"ConsumedUsages",
          "documentation":"<p>The usages of the budget.</p>"
        },
        "actions":{
          "shape":"ResponseBudgetActionList",
          "documentation":"<p>The budget actions for the budget.</p>"
        },
        "schedule":{
          "shape":"BudgetSchedule",
          "documentation":"<p>The budget schedule.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "queueStoppedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the queue stopped.</p>"
        }
      }
    },
    "GetFarmRequest":{
      "type":"structure",
      "required":["farmId"],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm.</p>",
          "location":"uri",
          "locationName":"farmId"
        }
      }
    },
    "GetFarmResponse":{
      "type":"structure",
      "required":[
        "farmId",
        "displayName",
        "kmsKeyArn",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm to get.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the farm.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the farm.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "kmsKeyArn":{
          "shape":"KmsKeyArn",
          "documentation":"<p>The ARN of the KMS key used on the farm.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        }
      }
    },
    "GetFleetRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm in the fleet.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID of the fleet to get.</p>",
          "location":"uri",
          "locationName":"fleetId"
        }
      }
    },
    "GetFleetResponse":{
      "type":"structure",
      "required":[
        "fleetId",
        "farmId",
        "displayName",
        "status",
        "workerCount",
        "minWorkerCount",
        "maxWorkerCount",
        "configuration",
        "roleArn",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID.</p>"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm in the fleet.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the fleet.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the fleet.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "status":{
          "shape":"FleetStatus",
          "documentation":"<p>The status of the fleet.</p>"
        },
        "statusMessage":{
          "shape":"String",
          "documentation":"<p>A message that communicates a suspended status of the fleet.</p>"
        },
        "autoScalingStatus":{
          "shape":"AutoScalingStatus",
          "documentation":"<p>The Auto Scaling status of the fleet. Either <code>GROWING</code>, <code>STEADY</code>, or <code>SHRINKING</code>.</p>"
        },
        "targetWorkerCount":{
          "shape":"Integer",
          "documentation":"<p>The number of target workers in the fleet.</p>"
        },
        "workerCount":{
          "shape":"Integer",
          "documentation":"<p>The number of workers in the fleet.</p>"
        },
        "minWorkerCount":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The minimum number of workers specified in the fleet.</p>"
        },
        "maxWorkerCount":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The maximum number of workers specified in the fleet.</p>"
        },
        "configuration":{
          "shape":"FleetConfiguration",
          "documentation":"<p>The configuration setting for the fleet.</p>"
        },
        "hostConfiguration":{
          "shape":"HostConfiguration",
          "documentation":"<p>The script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet.</p>"
        },
        "capabilities":{
          "shape":"FleetCapabilities",
          "documentation":"<p>Outlines what the fleet is capable of for minimums, maximums, and naming, in addition to attribute names and values.</p>"
        },
        "roleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The IAM role ARN.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        }
      }
    },
    "GetJobEntityError":{
      "type":"structure",
      "members":{
        "jobDetails":{
          "shape":"JobDetailsError",
          "documentation":"<p>The job details for the failed job entity.</p>"
        },
        "jobAttachmentDetails":{
          "shape":"JobAttachmentDetailsError",
          "documentation":"<p>The job attachment details for the failed job entity.</p>"
        },
        "stepDetails":{
          "shape":"StepDetailsError",
          "documentation":"<p>The step details for the failed job entity.</p>"
        },
        "environmentDetails":{
          "shape":"EnvironmentDetailsError",
          "documentation":"<p>The environment details for the failed job entity.</p>"
        }
      },
      "documentation":"<p>The error for the job entity.</p>",
      "union":true
    },
    "GetJobRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm in the job.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID associated with the job.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>",
          "location":"uri",
          "locationName":"jobId"
        }
      }
    },
    "GetJobResponse":{
      "type":"structure",
      "required":[
        "jobId",
        "name",
        "lifecycleStatus",
        "lifecycleStatusMessage",
        "priority",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "name":{
          "shape":"JobName",
          "documentation":"<p>The name of the job.</p>"
        },
        "lifecycleStatus":{
          "shape":"JobLifecycleStatus",
          "documentation":"<p>The life cycle status for the job. </p>"
        },
        "lifecycleStatusMessage":{
          "shape":"String",
          "documentation":"<p>A message that communicates the status of the life cycle for the job.</p>"
        },
        "priority":{
          "shape":"JobPriority",
          "documentation":"<p>The job priority.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "taskRunStatus":{
          "shape":"TaskRunStatus",
          "documentation":"<p>The task run status for the job.</p>"
        },
        "targetTaskRunStatus":{
          "shape":"JobTargetTaskRunStatus",
          "documentation":"<p>The task status with which the job started.</p>"
        },
        "taskRunStatusCounts":{
          "shape":"TaskRunStatusCounts",
          "documentation":"<p>The number of tasks running on the job.</p>"
        },
        "taskFailureRetryCount":{
          "shape":"TaskFailureRetryCount",
          "documentation":"<p>The total number of times tasks from the job failed and were retried.</p>"
        },
        "storageProfileId":{
          "shape":"StorageProfileId",
          "documentation":"<p>The storage profile ID associated with the job.</p>"
        },
        "maxFailedTasksCount":{
          "shape":"MaxFailedTasksCount",
          "documentation":"<p>The number of task failures before the job stops running and is marked as <code>FAILED</code>.</p>"
        },
        "maxRetriesPerTask":{
          "shape":"MaxRetriesPerTask",
          "documentation":"<p>The maximum number of retries per failed tasks.</p>"
        },
        "parameters":{
          "shape":"JobParameters",
          "documentation":"<p>The parameters for the job.</p>"
        },
        "attachments":{
          "shape":"Attachments",
          "documentation":"<p>The attachments for the job.</p>"
        },
        "description":{
          "shape":"JobDescription",
          "documentation":"<p>The description of the job.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "maxWorkerCount":{
          "shape":"MaxWorkerCount",
          "documentation":"<p>The maximum number of worker hosts that can concurrently process a job. When the <code>maxWorkerCount</code> is reached, no more workers will be assigned to process the job, even if the fleets assigned to the job's queue has available workers.</p> <p>If you don't set the <code>maxWorkerCount</code> when you create a job, this value is not returned in the response.</p>"
        },
        "sourceJobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the source job.</p>"
        }
      }
    },
    "GetLicenseEndpointRequest":{
      "type":"structure",
      "required":["licenseEndpointId"],
      "members":{
        "licenseEndpointId":{
          "shape":"LicenseEndpointId",
          "documentation":"<p>The license endpoint ID.</p>",
          "location":"uri",
          "locationName":"licenseEndpointId"
        }
      }
    },
    "GetLicenseEndpointResponse":{
      "type":"structure",
      "required":[
        "licenseEndpointId",
        "status",
        "statusMessage"
      ],
      "members":{
        "licenseEndpointId":{
          "shape":"LicenseEndpointId",
          "documentation":"<p>The license endpoint ID.</p>"
        },
        "status":{
          "shape":"LicenseEndpointStatus",
          "documentation":"<p>The status of the license endpoint.</p>"
        },
        "statusMessage":{
          "shape":"StatusMessage",
          "documentation":"<p>The status message of the license endpoint.</p>"
        },
        "vpcId":{
          "shape":"VpcId",
          "documentation":"<p>The VCP(virtual private cloud) ID associated with the license endpoint.</p>"
        },
        "dnsName":{
          "shape":"DnsName",
          "documentation":"<p>The DNS name.</p>"
        },
        "subnetIds":{
          "shape":"GetLicenseEndpointResponseSubnetIdsList",
          "documentation":"<p>The subnet IDs.</p>"
        },
        "securityGroupIds":{
          "shape":"GetLicenseEndpointResponseSecurityGroupIdsList",
          "documentation":"<p>The security group IDs for the license endpoint.</p>"
        }
      }
    },
    "GetLicenseEndpointResponseSecurityGroupIdsList":{
      "type":"list",
      "member":{"shape":"SecurityGroupId"},
      "max":10,
      "min":1
    },
    "GetLicenseEndpointResponseSubnetIdsList":{
      "type":"list",
      "member":{"shape":"SubnetId"},
      "max":10,
      "min":1
    },
    "GetLimitRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "limitId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The unique identifier of the farm that contains the limit.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>The unique identifier of the limit to return.</p>",
          "location":"uri",
          "locationName":"limitId"
        }
      }
    },
    "GetLimitResponse":{
      "type":"structure",
      "required":[
        "displayName",
        "amountRequirementName",
        "maxCount",
        "createdAt",
        "createdBy",
        "farmId",
        "limitId",
        "currentCount"
      ],
      "members":{
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the limit.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "amountRequirementName":{
          "shape":"AmountRequirementName",
          "documentation":"<p>The value that you specify as the <code>name</code> in the <code>amounts</code> field of the <code>hostRequirements</code> in a step of a job template to declare the limit requirement.</p>"
        },
        "maxCount":{
          "shape":"MaxCount",
          "documentation":"<p>The maximum number of resources constrained by this limit. When all of the resources are in use, steps that require the limit won't be scheduled until the resource is available.</p> <p>The <code>maxValue</code> must not be 0. If the value is -1, there is no restriction on the number of resources that can be acquired for this limit.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The Unix timestamp of the date and time that the limit was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user identifier of the person that created the limit.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The Unix timestamp of the date and time that the limit was last updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user identifier of the person that last updated the limit.</p>"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The unique identifier of the farm that contains the limit.</p>"
        },
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>The unique identifier of the limit.</p>"
        },
        "currentCount":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The number of resources from the limit that are being used by jobs. The result is delayed and may not be the count at the time that you called the operation.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the limit that helps identify what the limit is used for.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        }
      }
    },
    "GetMonitorRequest":{
      "type":"structure",
      "required":["monitorId"],
      "members":{
        "monitorId":{
          "shape":"MonitorId",
          "documentation":"<p>The unique identifier for the monitor. This ID is returned by the <code>CreateMonitor</code> operation.</p>",
          "location":"uri",
          "locationName":"monitorId"
        }
      }
    },
    "GetMonitorResponse":{
      "type":"structure",
      "required":[
        "monitorId",
        "displayName",
        "subdomain",
        "url",
        "roleArn",
        "identityCenterInstanceArn",
        "identityCenterApplicationArn",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "monitorId":{
          "shape":"MonitorId",
          "documentation":"<p>The unique identifier for the monitor.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The name used to identify the monitor on the Deadline Cloud console.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "subdomain":{
          "shape":"Subdomain",
          "documentation":"<p>The subdomain used for the monitor URL. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.</p>"
        },
        "url":{
          "shape":"Url",
          "documentation":"<p>The complete URL of the monitor. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.</p>"
        },
        "roleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role for the monitor. Users of the monitor use this role to access Deadline Cloud resources.</p>"
        },
        "identityCenterInstanceArn":{
          "shape":"IdentityCenterInstanceArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM Identity Center instance responsible for authenticating monitor users.</p>"
        },
        "identityCenterApplicationArn":{
          "shape":"IdentityCenterApplicationArn",
          "documentation":"<p>The Amazon Resource Name (ARN) that the IAM Identity Center assigned to the monitor when it was created.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The UNIX timestamp of the date and time that the monitor was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user name of the person that created the monitor.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The UNIX timestamp of the last date and time that the monitor was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user name of the person that last updated the monitor.</p>"
        }
      }
    },
    "GetQueueEnvironmentRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "queueEnvironmentId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the queue environment.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the queue environment.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "queueEnvironmentId":{
          "shape":"QueueEnvironmentId",
          "documentation":"<p>The queue environment ID.</p>",
          "location":"uri",
          "locationName":"queueEnvironmentId"
        }
      }
    },
    "GetQueueEnvironmentResponse":{
      "type":"structure",
      "required":[
        "queueEnvironmentId",
        "name",
        "priority",
        "templateType",
        "template",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "queueEnvironmentId":{
          "shape":"QueueEnvironmentId",
          "documentation":"<p>The queue environment ID.</p>"
        },
        "name":{
          "shape":"EnvironmentName",
          "documentation":"<p>The name of the queue environment.</p>"
        },
        "priority":{
          "shape":"Priority",
          "documentation":"<p>The priority of the queue environment.</p>"
        },
        "templateType":{
          "shape":"EnvironmentTemplateType",
          "documentation":"<p>The type of template for the queue environment.</p>"
        },
        "template":{
          "shape":"EnvironmentTemplate",
          "documentation":"<p>The template for the queue environment.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.&gt;</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        }
      }
    },
    "GetQueueFleetAssociationRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "fleetId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm that contains the queue-fleet association.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the queue-fleet association.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID for the queue-fleet association.</p>",
          "location":"uri",
          "locationName":"fleetId"
        }
      }
    },
    "GetQueueFleetAssociationResponse":{
      "type":"structure",
      "required":[
        "queueId",
        "fleetId",
        "status",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the queue-fleet association.</p>"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID for the queue-fleet association.</p>"
        },
        "status":{
          "shape":"QueueFleetAssociationStatus",
          "documentation":"<p>The status of the queue-fleet association.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        }
      }
    },
    "GetQueueLimitAssociationRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "limitId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The unique identifier of the farm that contains the associated queue and limit.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The unique identifier of the queue associated with the limit.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>The unique identifier of the limit associated with the queue.</p>",
          "location":"uri",
          "locationName":"limitId"
        }
      }
    },
    "GetQueueLimitAssociationResponse":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "queueId",
        "limitId",
        "status"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The Unix timestamp of the date and time that the association was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user identifier of the person that created the association.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The Unix timestamp of the date and time that the association was last updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user identifier of the person that last updated the association.</p>"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The unique identifier of the queue associated with the limit.</p>"
        },
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>The unique identifier of the limit associated with the queue.</p>"
        },
        "status":{
          "shape":"QueueLimitAssociationStatus",
          "documentation":"<p>The current status of the limit.</p>"
        }
      }
    },
    "GetQueueRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm in the queue.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the queue to retrieve.</p>",
          "location":"uri",
          "locationName":"queueId"
        }
      }
    },
    "GetQueueResponse":{
      "type":"structure",
      "required":[
        "queueId",
        "displayName",
        "farmId",
        "status",
        "defaultBudgetAction",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the queue.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the queue.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the queue.</p>"
        },
        "status":{
          "shape":"QueueStatus",
          "documentation":"<p>The status of the queue.</p> <ul> <li> <p> <code>ACTIVE</code>–The queue is active.</p> </li> <li> <p> <code>SCHEDULING</code>–The queue is scheduling.</p> </li> <li> <p> <code>SCHEDULING_BLOCKED</code>–The queue scheduling is blocked. See the provided reason.</p> </li> </ul>"
        },
        "defaultBudgetAction":{
          "shape":"DefaultQueueBudgetAction",
          "documentation":"<p>The default action taken on a queue if a budget wasn't configured.</p>"
        },
        "blockedReason":{
          "shape":"QueueBlockedReason",
          "documentation":"<p>The reason the queue was blocked.</p>"
        },
        "jobAttachmentSettings":{
          "shape":"JobAttachmentSettings",
          "documentation":"<p>The job attachment settings for the queue.</p>"
        },
        "roleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The IAM role ARN.</p>"
        },
        "requiredFileSystemLocationNames":{
          "shape":"RequiredFileSystemLocationNames",
          "documentation":"<p>A list of the required file system location names in the queue.</p>"
        },
        "allowedStorageProfileIds":{
          "shape":"AllowedStorageProfileIds",
          "documentation":"<p>The storage profile IDs for the queue.</p>"
        },
        "jobRunAsUser":{
          "shape":"JobRunAsUser",
          "documentation":"<p>The jobs in the queue ran as this specified POSIX user.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        }
      }
    },
    "GetSessionActionRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId",
        "sessionActionId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the session action.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the session action.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the session.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "sessionActionId":{
          "shape":"SessionActionId",
          "documentation":"<p>The session action ID for the session.</p>",
          "location":"uri",
          "locationName":"sessionActionId"
        }
      }
    },
    "GetSessionActionResponse":{
      "type":"structure",
      "required":[
        "sessionActionId",
        "status",
        "sessionId",
        "definition"
      ],
      "members":{
        "sessionActionId":{
          "shape":"SessionActionId",
          "documentation":"<p>The session action ID.</p>"
        },
        "status":{
          "shape":"SessionActionStatus",
          "documentation":"<p>The status of the session action.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "workerUpdatedAt":{
          "shape":"Timestamp",
          "documentation":"<p>The Linux timestamp of the date and time the session action was last updated.</p>"
        },
        "progressPercent":{
          "shape":"SessionActionProgressPercent",
          "documentation":"<p>The percentage completed for a session action.</p>"
        },
        "sessionId":{
          "shape":"SessionId",
          "documentation":"<p>The session ID for the session action.</p>"
        },
        "processExitCode":{
          "shape":"ProcessExitCode",
          "documentation":"<p>The process exit code. The default Deadline Cloud worker agent converts unsigned 32-bit exit codes to signed 32-bit exit codes.</p>"
        },
        "progressMessage":{
          "shape":"SessionActionProgressMessage",
          "documentation":"<p>The message that communicates the progress of the session action.</p>"
        },
        "definition":{
          "shape":"SessionActionDefinition",
          "documentation":"<p>The session action definition.</p>"
        },
        "acquiredLimits":{
          "shape":"AcquiredLimits",
          "documentation":"<p>The limits and their amounts acquired during a session action. If no limits were acquired during the session, this field isn't returned.</p>"
        },
        "manifests":{
          "shape":"TaskRunManifestPropertiesListResponse",
          "documentation":"<p>The list of manifest properties that describe file attachments for the task run.</p>"
        }
      }
    },
    "GetSessionRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId",
        "sessionId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the session.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the session.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the session.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "sessionId":{
          "shape":"SessionId",
          "documentation":"<p>The session ID.</p>",
          "location":"uri",
          "locationName":"sessionId"
        }
      }
    },
    "GetSessionResponse":{
      "type":"structure",
      "required":[
        "sessionId",
        "fleetId",
        "workerId",
        "startedAt",
        "log",
        "lifecycleStatus"
      ],
      "members":{
        "sessionId":{
          "shape":"SessionId",
          "documentation":"<p>The session ID.</p>"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID for the session.</p>"
        },
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID for the session.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "log":{
          "shape":"LogConfiguration",
          "documentation":"<p>The session log.</p>"
        },
        "lifecycleStatus":{
          "shape":"SessionLifecycleStatus",
          "documentation":"<p>The life cycle status of the session.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "targetLifecycleStatus":{
          "shape":"SessionLifecycleTargetStatus",
          "documentation":"<p>The life cycle status with which the session started.</p>"
        },
        "hostProperties":{
          "shape":"HostPropertiesResponse",
          "documentation":"<p>Provides the Amazon EC2 properties of the host.</p>"
        },
        "workerLog":{
          "shape":"LogConfiguration",
          "documentation":"<p>The worker log for the session.</p>"
        }
      }
    },
    "GetSessionsStatisticsAggregationRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "aggregationId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The identifier of the farm to include in the statistics. This should be the same as the farm ID used in the call to the <code>StartSessionsStatisticsAggregation</code> operation.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "aggregationId":{
          "shape":"AggregationId",
          "documentation":"<p>The identifier returned by the <code>StartSessionsStatisticsAggregation</code> operation that identifies the aggregated statistics.</p>",
          "location":"querystring",
          "locationName":"aggregationId"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        }
      }
    },
    "GetSessionsStatisticsAggregationResponse":{
      "type":"structure",
      "required":["status"],
      "members":{
        "statistics":{
          "shape":"StatisticsList",
          "documentation":"<p>The statistics for the specified fleets or queues.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        },
        "status":{
          "shape":"SessionsStatisticsAggregationStatus",
          "documentation":"<p>The status of the aggregated results. An aggregation may fail or time out if the results are too large. If this happens, you can call the <code>StartSessionsStatisticsAggregation</code> operation after you reduce the aggregation time frame, reduce the number of queues or fleets in the aggregation, or increase the period length.</p> <p>If you call the <code>StartSessionsStatisticsAggregation </code> operation when the status is <code>IN_PROGRESS</code>, you will receive a <code>ThrottlingException</code>.</p>"
        },
        "statusMessage":{
          "shape":"String",
          "documentation":"<p>A message that describes the status.</p>"
        }
      }
    },
    "GetStepRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId",
        "stepId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the step.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the step.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the step.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>",
          "location":"uri",
          "locationName":"stepId"
        }
      }
    },
    "GetStepResponse":{
      "type":"structure",
      "required":[
        "stepId",
        "name",
        "lifecycleStatus",
        "taskRunStatus",
        "taskRunStatusCounts",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        },
        "name":{
          "shape":"StepName",
          "documentation":"<p>The name of the step.</p>"
        },
        "lifecycleStatus":{
          "shape":"StepLifecycleStatus",
          "documentation":"<p>The life cycle status of the step.</p>"
        },
        "lifecycleStatusMessage":{
          "shape":"String",
          "documentation":"<p>A message that describes the lifecycle status of the step.</p>"
        },
        "taskRunStatus":{
          "shape":"TaskRunStatus",
          "documentation":"<p>The task run status for the job.</p>"
        },
        "taskRunStatusCounts":{
          "shape":"TaskRunStatusCounts",
          "documentation":"<p>The number of tasks running on the job.</p>"
        },
        "taskFailureRetryCount":{
          "shape":"TaskFailureRetryCount",
          "documentation":"<p>The total number of times tasks from the step failed and were retried.</p>"
        },
        "targetTaskRunStatus":{
          "shape":"StepTargetTaskRunStatus",
          "documentation":"<p>The task status with which the job started.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "dependencyCounts":{
          "shape":"DependencyCounts",
          "documentation":"<p>The number of dependencies in the step.</p>"
        },
        "requiredCapabilities":{
          "shape":"StepRequiredCapabilities",
          "documentation":"<p>The required capabilities of the step.</p>"
        },
        "parameterSpace":{
          "shape":"ParameterSpace",
          "documentation":"<p>A list of step parameters and the combination expression for the step.</p>"
        },
        "description":{
          "shape":"StepDescription",
          "documentation":"<p>The description of the step.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        }
      }
    },
    "GetStorageProfileForQueueRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "storageProfileId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the queue in storage profile.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID the queue in the storage profile.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "storageProfileId":{
          "shape":"StorageProfileId",
          "documentation":"<p>The storage profile ID for the storage profile in the queue.</p>",
          "location":"uri",
          "locationName":"storageProfileId"
        }
      }
    },
    "GetStorageProfileForQueueResponse":{
      "type":"structure",
      "required":[
        "storageProfileId",
        "displayName",
        "osFamily"
      ],
      "members":{
        "storageProfileId":{
          "shape":"StorageProfileId",
          "documentation":"<p>The storage profile ID.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the storage profile connected to a queue.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "osFamily":{
          "shape":"StorageProfileOperatingSystemFamily",
          "documentation":"<p>The operating system of the storage profile in the queue.</p>"
        },
        "fileSystemLocations":{
          "shape":"FileSystemLocationsList",
          "documentation":"<p>The location of the files for the storage profile within the queue.</p>"
        }
      }
    },
    "GetStorageProfileRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "storageProfileId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the storage profile.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "storageProfileId":{
          "shape":"StorageProfileId",
          "documentation":"<p>The storage profile ID.</p>",
          "location":"uri",
          "locationName":"storageProfileId"
        }
      }
    },
    "GetStorageProfileResponse":{
      "type":"structure",
      "required":[
        "storageProfileId",
        "displayName",
        "osFamily",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "storageProfileId":{
          "shape":"StorageProfileId",
          "documentation":"<p>The storage profile ID.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the storage profile.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "osFamily":{
          "shape":"StorageProfileOperatingSystemFamily",
          "documentation":"<p>The operating system (OS) for the storage profile.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "fileSystemLocations":{
          "shape":"FileSystemLocationsList",
          "documentation":"<p>The location of the files for the storage profile.</p>"
        }
      }
    },
    "GetTaskRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId",
        "stepId",
        "taskId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the farm connected to the task.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the queue connected to the task.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID of the job connected to the task.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID for the step connected to the task.</p>",
          "location":"uri",
          "locationName":"stepId"
        },
        "taskId":{
          "shape":"TaskId",
          "documentation":"<p>The task ID.</p>",
          "location":"uri",
          "locationName":"taskId"
        }
      }
    },
    "GetTaskResponse":{
      "type":"structure",
      "required":[
        "taskId",
        "createdAt",
        "createdBy",
        "runStatus"
      ],
      "members":{
        "taskId":{
          "shape":"TaskId",
          "documentation":"<p>The task ID.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "runStatus":{
          "shape":"TaskRunStatus",
          "documentation":"<p>The run status for the task.</p>"
        },
        "targetRunStatus":{
          "shape":"TaskTargetRunStatus",
          "documentation":"<p>The run status with which to start the task.</p>"
        },
        "failureRetryCount":{
          "shape":"TaskRetryCount",
          "documentation":"<p>The number of times that the task failed and was retried.</p>"
        },
        "parameters":{
          "shape":"TaskParameters",
          "documentation":"<p>The parameters for the task.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "latestSessionActionId":{
          "shape":"SessionActionId",
          "documentation":"<p>The latest session ID for the task.</p>"
        }
      }
    },
    "GetWorkerRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId",
        "workerId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the worker.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID of the worker.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID.</p>",
          "location":"uri",
          "locationName":"workerId"
        }
      }
    },
    "GetWorkerResponse":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId",
        "workerId",
        "status",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID.</p>"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID.</p>"
        },
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID.</p>"
        },
        "hostProperties":{
          "shape":"HostPropertiesResponse",
          "documentation":"<p>The host properties for the worker.</p>"
        },
        "status":{
          "shape":"WorkerStatus",
          "documentation":"<p>The status of the worker.</p>"
        },
        "log":{
          "shape":"LogConfiguration",
          "documentation":"<p>The logs for the associated worker.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        }
      }
    },
    "HostConfiguration":{
      "type":"structure",
      "required":["scriptBody"],
      "members":{
        "scriptBody":{
          "shape":"HostConfigurationScript",
          "documentation":"<p>The text of the script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet. The script runs after a worker enters the <code>STARTING</code> state and before the worker processes tasks.</p> <p>For more information about using the script, see <a href=\"https://docs.aws.amazon.com/deadline-cloud/latest/developerguide/smf-admin.html\">Run scripts as an administrator to configure workers</a> in the <i>Deadline Cloud Developer Guide</i>. </p> <important> <p>The script runs as an administrative user (<code>sudo root</code> on Linux, as an Administrator on Windows). </p> </important>"
        },
        "scriptTimeoutSeconds":{
          "shape":"HostConfigurationScriptTimeoutSeconds",
          "documentation":"<p>The maximum time that the host configuration can run. If the timeout expires, the worker enters the <code>NOT RESPONDING</code> state and shuts down. You are charged for the time that the worker is running the host configuration script.</p> <note> <p>You should configure your fleet for a maximum of one worker while testing your host configuration script to avoid starting additional workers.</p> </note> <p>The default is 300 seconds (5 minutes).</p>"
        }
      },
      "documentation":"<p>Provides a script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet. </p> <p>To remove a script from a fleet, use the <a href=\"https://docs.aws.amazon.com/deadline-cloud/latest/APIReference/API_UpdateFleet.html\">UpdateFleet</a> operation with the <code>hostConfiguration</code> <code>scriptBody</code> parameter set to an empty string (\"\").</p>"
    },
    "HostConfigurationScript":{
      "type":"string",
      "max":15000,
      "min":0,
      "sensitive":true
    },
    "HostConfigurationScriptTimeoutSeconds":{
      "type":"integer",
      "box":true,
      "max":3600,
      "min":300
    },
    "HostName":{
      "type":"string",
      "pattern":"[a-zA-Z0-9_\\.\\-]{0,255}"
    },
    "HostPropertiesRequest":{
      "type":"structure",
      "members":{
        "ipAddresses":{
          "shape":"IpAddresses",
          "documentation":"<p>The IP address of the host.</p>"
        },
        "hostName":{
          "shape":"HostName",
          "documentation":"<p>The host name.</p>"
        }
      },
      "documentation":"<p>The host property details.</p>"
    },
    "HostPropertiesResponse":{
      "type":"structure",
      "members":{
        "ipAddresses":{
          "shape":"IpAddresses",
          "documentation":"<p>The IP address of the host.</p>"
        },
        "hostName":{
          "shape":"HostName",
          "documentation":"<p>The host name.</p>"
        },
        "ec2InstanceArn":{
          "shape":"String",
          "documentation":"<p>The ARN of the host EC2 instance.</p>"
        },
        "ec2InstanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The instance type of the host EC2 instance.</p>"
        }
      },
      "documentation":"<p>The host property details.</p>"
    },
    "IamRoleArn":{
      "type":"string",
      "pattern":"arn:(aws[a-zA-Z-]*):iam::\\d{12}:role(/[!-.0-~]+)*/[\\w+=,.@-]+"
    },
    "IdentityCenterApplicationArn":{"type":"string"},
    "IdentityCenterInstanceArn":{
      "type":"string",
      "pattern":"arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}"
    },
    "IdentityCenterPrincipalId":{
      "type":"string",
      "max":47,
      "min":1,
      "pattern":"([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}"
    },
    "IdentityStoreId":{
      "type":"string",
      "max":36,
      "min":1,
      "pattern":"d-[0-9a-f]{10}$|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
    },
    "InstanceType":{
      "type":"string",
      "pattern":"[a-zA-Z0-9]+\\.[a-zA-Z0-9]+"
    },
    "InstanceTypes":{
      "type":"list",
      "member":{"shape":"InstanceType"},
      "max":100,
      "min":1
    },
    "IntString":{
      "type":"string",
      "max":20,
      "min":1,
      "pattern":"[-]?(0|[1-9][0-9]*)"
    },
    "Integer":{
      "type":"integer",
      "box":true
    },
    "InternalServerErrorException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"},
        "retryAfterSeconds":{
          "shape":"Integer",
          "documentation":"<p>The number of seconds a client should wait before retrying the request.</p>",
          "location":"header",
          "locationName":"Retry-After"
        }
      },
      "documentation":"<p>Deadline Cloud can't process your request right now. Try again later.</p>",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true,
      "retryable":{"throttling":false}
    },
    "IpAddresses":{
      "type":"structure",
      "members":{
        "ipV4Addresses":{
          "shape":"IpV4Addresses",
          "documentation":"<p>The IpV4 address of the network.</p>"
        },
        "ipV6Addresses":{
          "shape":"IpV6Addresses",
          "documentation":"<p>The IpV6 address for the network and node component.</p>"
        }
      },
      "documentation":"<p>The IP addresses for a host.</p>"
    },
    "IpV4Address":{
      "type":"string",
      "pattern":"(?:[0-9]{1,3}\\.){3}[0-9]{1,3}"
    },
    "IpV4Addresses":{
      "type":"list",
      "member":{"shape":"IpV4Address"}
    },
    "IpV6Address":{
      "type":"string",
      "pattern":"(?:[A-F0-9]{1,4}:){7}[A-F0-9]{1,4}"
    },
    "IpV6Addresses":{
      "type":"list",
      "member":{"shape":"IpV6Address"}
    },
    "JobAttachmentDetailsEntity":{
      "type":"structure",
      "required":[
        "jobId",
        "attachments"
      ],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "attachments":{
          "shape":"Attachments",
          "documentation":"<p>The job attachments.</p>"
        }
      },
      "documentation":"<p>The job attachments.</p>"
    },
    "JobAttachmentDetailsError":{
      "type":"structure",
      "required":[
        "jobId",
        "code",
        "message"
      ],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "code":{
          "shape":"JobEntityErrorCode",
          "documentation":"<p>The error code.</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>The error message detailing the error's cause.</p>"
        }
      },
      "documentation":"<p>The error details for job attachments.</p>"
    },
    "JobAttachmentDetailsIdentifiers":{
      "type":"structure",
      "required":["jobId"],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        }
      },
      "documentation":"<p>Identifier details for job attachments.</p>"
    },
    "JobAttachmentSettings":{
      "type":"structure",
      "required":[
        "s3BucketName",
        "rootPrefix"
      ],
      "members":{
        "s3BucketName":{
          "shape":"S3BucketName",
          "documentation":"<p>The Amazon S3 bucket name.</p>"
        },
        "rootPrefix":{
          "shape":"S3Prefix",
          "documentation":"<p>The root prefix.</p>"
        }
      },
      "documentation":"<p>The job attachment settings. These are the Amazon S3 bucket name and the Amazon S3 prefix.</p>"
    },
    "JobAttachmentsFileSystem":{
      "type":"string",
      "enum":[
        "COPIED",
        "VIRTUAL"
      ]
    },
    "JobDescription":{
      "type":"string",
      "max":2048,
      "min":1,
      "sensitive":true
    },
    "JobDetailsEntity":{
      "type":"structure",
      "required":[
        "jobId",
        "logGroupName",
        "schemaVersion"
      ],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "jobAttachmentSettings":{
          "shape":"JobAttachmentSettings",
          "documentation":"<p>The job attachment settings.</p>"
        },
        "jobRunAsUser":{
          "shape":"JobRunAsUser",
          "documentation":"<p>The user name and group that the job uses when run.</p>"
        },
        "logGroupName":{
          "shape":"String",
          "documentation":"<p>The log group name.</p>"
        },
        "queueRoleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The queue role ARN.</p>"
        },
        "parameters":{
          "shape":"JobParameters",
          "documentation":"<p>The parameters.</p>"
        },
        "schemaVersion":{
          "shape":"String",
          "documentation":"<p>The schema version.</p>"
        },
        "pathMappingRules":{
          "shape":"PathMappingRules",
          "documentation":"<p>The path mapping rules.</p>"
        }
      },
      "documentation":"<p>The job details for a specific job.</p>"
    },
    "JobDetailsError":{
      "type":"structure",
      "required":[
        "jobId",
        "code",
        "message"
      ],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "code":{
          "shape":"JobEntityErrorCode",
          "documentation":"<p>The error code.</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>The error message detailing the error's cause.</p>"
        }
      },
      "documentation":"<p>The details of a job error.</p>"
    },
    "JobDetailsIdentifiers":{
      "type":"structure",
      "required":["jobId"],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        }
      },
      "documentation":"<p>The identifiers for a job.</p>"
    },
    "JobEntity":{
      "type":"structure",
      "members":{
        "jobDetails":{
          "shape":"JobDetailsEntity",
          "documentation":"<p>The job details.</p>"
        },
        "jobAttachmentDetails":{
          "shape":"JobAttachmentDetailsEntity",
          "documentation":"<p>The job attachment details.</p>"
        },
        "stepDetails":{
          "shape":"StepDetailsEntity",
          "documentation":"<p>The step details.</p>"
        },
        "environmentDetails":{
          "shape":"EnvironmentDetailsEntity",
          "documentation":"<p>The environment details for the job entity.</p>"
        }
      },
      "documentation":"<p>The details of a job entity.</p>",
      "union":true
    },
    "JobEntityErrorCode":{
      "type":"string",
      "enum":[
        "AccessDeniedException",
        "InternalServerException",
        "ValidationException",
        "ResourceNotFoundException",
        "MaxPayloadSizeExceeded",
        "ConflictException"
      ]
    },
    "JobEntityIdentifiers":{
      "type":"list",
      "member":{"shape":"JobEntityIdentifiersUnion"},
      "max":10,
      "min":1
    },
    "JobEntityIdentifiersUnion":{
      "type":"structure",
      "members":{
        "jobDetails":{
          "shape":"JobDetailsIdentifiers",
          "documentation":"<p>The job details.</p>"
        },
        "jobAttachmentDetails":{
          "shape":"JobAttachmentDetailsIdentifiers",
          "documentation":"<p>The job attachment details.</p>"
        },
        "stepDetails":{
          "shape":"StepDetailsIdentifiers",
          "documentation":"<p>The step details.</p>"
        },
        "environmentDetails":{
          "shape":"EnvironmentDetailsIdentifiers",
          "documentation":"<p>The environment details.</p>"
        }
      },
      "documentation":"<p>The details of a job entity identifier.</p>",
      "union":true
    },
    "JobId":{
      "type":"string",
      "pattern":"job-[0-9a-f]{32}"
    },
    "JobLifecycleStatus":{
      "type":"string",
      "enum":[
        "CREATE_IN_PROGRESS",
        "CREATE_FAILED",
        "CREATE_COMPLETE",
        "UPLOAD_IN_PROGRESS",
        "UPLOAD_FAILED",
        "UPDATE_IN_PROGRESS",
        "UPDATE_FAILED",
        "UPDATE_SUCCEEDED",
        "ARCHIVED"
      ]
    },
    "JobMember":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId",
        "principalId",
        "principalType",
        "identityStoreId",
        "membershipLevel"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID.</p>"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>The principal ID of the job member.</p>"
        },
        "principalType":{
          "shape":"PrincipalType",
          "documentation":"<p>The principal type of the job member.</p>"
        },
        "identityStoreId":{
          "shape":"IdentityStoreId",
          "documentation":"<p>The identity store ID.</p>"
        },
        "membershipLevel":{
          "shape":"MembershipLevel",
          "documentation":"<p>The job member's membership level.</p>"
        }
      },
      "documentation":"<p>The details for a job member.</p>"
    },
    "JobMembers":{
      "type":"list",
      "member":{"shape":"JobMember"}
    },
    "JobName":{
      "type":"string",
      "max":128,
      "min":1
    },
    "JobParameter":{
      "type":"structure",
      "members":{
        "int":{
          "shape":"IntString",
          "documentation":"<p>A signed integer represented as a string.</p>"
        },
        "float":{
          "shape":"FloatString",
          "documentation":"<p>A double precision IEEE-754 floating point number represented as a string.</p>"
        },
        "string":{
          "shape":"ParameterString",
          "documentation":"<p>A UTF-8 string.</p>"
        },
        "path":{
          "shape":"PathString",
          "documentation":"<p>A file system path represented as a string.</p>"
        }
      },
      "documentation":"<p>The details of job parameters.</p>",
      "union":true
    },
    "JobParameterDefinition":{
      "type":"structure",
      "members":{
      },
      "document":true
    },
    "JobParameterDefinitions":{
      "type":"list",
      "member":{"shape":"JobParameterDefinition"}
    },
    "JobParameters":{
      "type":"map",
      "key":{"shape":"JobParametersKeyString"},
      "value":{"shape":"JobParameter"},
      "sensitive":true
    },
    "JobParametersKeyString":{
      "type":"string",
      "max":1024,
      "min":1
    },
    "JobPriority":{
      "type":"integer",
      "box":true,
      "max":100,
      "min":0
    },
    "JobRunAsUser":{
      "type":"structure",
      "required":["runAs"],
      "members":{
        "posix":{
          "shape":"PosixUser",
          "documentation":"<p>The user and group that the jobs in the queue run as.</p>"
        },
        "windows":{
          "shape":"WindowsUser",
          "documentation":"<p>Identifies a Microsoft Windows user.</p>"
        },
        "runAs":{
          "shape":"RunAs",
          "documentation":"<p>Specifies whether the job should run using the queue's system user or if the job should run using the worker agent system user.</p>"
        }
      },
      "documentation":"<p>Identifies the user for a job.</p>"
    },
    "JobSearchSummaries":{
      "type":"list",
      "member":{"shape":"JobSearchSummary"}
    },
    "JobSearchSummary":{
      "type":"structure",
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>"
        },
        "name":{
          "shape":"JobName",
          "documentation":"<p>The job name.</p>"
        },
        "lifecycleStatus":{
          "shape":"JobLifecycleStatus",
          "documentation":"<p>The life cycle status.</p>"
        },
        "lifecycleStatusMessage":{
          "shape":"String",
          "documentation":"<p>The life cycle status message.</p>"
        },
        "taskRunStatus":{
          "shape":"TaskRunStatus",
          "documentation":"<p>The task run status for the job.</p> <ul> <li> <p> <code>PENDING</code>–pending and waiting for resources.</p> </li> <li> <p> <code>READY</code>–ready to be processed.</p> </li> <li> <p> <code>ASSIGNED</code>–assigned and will run next on a worker.</p> </li> <li> <p> <code>SCHEDULED</code>–scheduled to be run on a worker.</p> </li> <li> <p> <code>INTERRUPTING</code>–being interrupted.</p> </li> <li> <p> <code>RUNNING</code>–running on a worker.</p> </li> <li> <p> <code>SUSPENDED</code>–the task is suspended.</p> </li> <li> <p> <code>CANCELED</code>–the task has been canceled.</p> </li> <li> <p> <code>FAILED</code>–the task has failed.</p> </li> <li> <p> <code>SUCCEEDED</code>–the task has succeeded.</p> </li> </ul>"
        },
        "targetTaskRunStatus":{
          "shape":"JobTargetTaskRunStatus",
          "documentation":"<p>The task status to start with on the job.</p>"
        },
        "taskRunStatusCounts":{
          "shape":"TaskRunStatusCounts",
          "documentation":"<p>The number of tasks running on the job.</p>"
        },
        "taskFailureRetryCount":{
          "shape":"TaskFailureRetryCount",
          "documentation":"<p>The total number of times tasks from the job failed and were retried.</p>"
        },
        "priority":{
          "shape":"JobPriority",
          "documentation":"<p>The job priority.</p>"
        },
        "maxFailedTasksCount":{
          "shape":"MaxFailedTasksCount",
          "documentation":"<p>The number of task failures before the job stops running and is marked as <code>FAILED</code>.</p>"
        },
        "maxRetriesPerTask":{
          "shape":"MaxRetriesPerTask",
          "documentation":"<p>The maximum number of retries for a job.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "jobParameters":{
          "shape":"JobParameters",
          "documentation":"<p>The job parameters.</p>"
        },
        "maxWorkerCount":{
          "shape":"MaxWorkerCount",
          "documentation":"<p>The maximum number of worker hosts that can concurrently process a job. When the <code>maxWorkerCount</code> is reached, no more workers will be assigned to process the job, even if the fleets assigned to the job's queue has available workers.</p> <p>You can't set the <code>maxWorkerCount</code> to 0. If you set it to -1, there is no maximum number of workers.</p> <p>If you don't specify the <code>maxWorkerCount</code>, the default is -1.</p>"
        },
        "sourceJobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the source job.</p>"
        }
      },
      "documentation":"<p>The details of a job search.</p>"
    },
    "JobSummaries":{
      "type":"list",
      "member":{"shape":"JobSummary"}
    },
    "JobSummary":{
      "type":"structure",
      "required":[
        "jobId",
        "name",
        "lifecycleStatus",
        "lifecycleStatusMessage",
        "priority",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "name":{
          "shape":"JobName",
          "documentation":"<p>The job name.</p>"
        },
        "lifecycleStatus":{
          "shape":"JobLifecycleStatus",
          "documentation":"<p>The life cycle status.</p>"
        },
        "lifecycleStatusMessage":{
          "shape":"String",
          "documentation":"<p>The life cycle status message.</p>"
        },
        "priority":{
          "shape":"JobPriority",
          "documentation":"<p>The job priority.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "taskRunStatus":{
          "shape":"TaskRunStatus",
          "documentation":"<p>The task run status for the job.</p> <ul> <li> <p> <code>PENDING</code>–pending and waiting for resources.</p> </li> <li> <p> <code>READY</code>–ready to be processed.</p> </li> <li> <p> <code>ASSIGNED</code>–assigned and will run next on a worker.</p> </li> <li> <p> <code>SCHEDULED</code>–scheduled to be run on a worker.</p> </li> <li> <p> <code>INTERRUPTING</code>–being interrupted.</p> </li> <li> <p> <code>RUNNING</code>–running on a worker.</p> </li> <li> <p> <code>SUSPENDED</code>–the task is suspended.</p> </li> <li> <p> <code>CANCELED</code>–the task has been canceled.</p> </li> <li> <p> <code>FAILED</code>–the task has failed.</p> </li> <li> <p> <code>SUCCEEDED</code>–the task has succeeded.</p> </li> </ul>"
        },
        "targetTaskRunStatus":{
          "shape":"JobTargetTaskRunStatus",
          "documentation":"<p>The task status to start with on the job.</p>"
        },
        "taskRunStatusCounts":{
          "shape":"TaskRunStatusCounts",
          "documentation":"<p>The number of tasks running on the job.</p>"
        },
        "taskFailureRetryCount":{
          "shape":"TaskFailureRetryCount",
          "documentation":"<p>The total number of times tasks from the job failed and were retried.</p>"
        },
        "maxFailedTasksCount":{
          "shape":"MaxFailedTasksCount",
          "documentation":"<p>The number of task failures before the job stops running and is marked as <code>FAILED</code>.</p>"
        },
        "maxRetriesPerTask":{
          "shape":"MaxRetriesPerTask",
          "documentation":"<p>The maximum number of retries for a job.</p>"
        },
        "maxWorkerCount":{
          "shape":"MaxWorkerCount",
          "documentation":"<p>The maximum number of worker hosts that can concurrently process a job. When the <code>maxWorkerCount</code> is reached, no more workers will be assigned to process the job, even if the fleets assigned to the job's queue has available workers.</p> <p>You can't set the <code>maxWorkerCount</code> to 0. If you set it to -1, there is no maximum number of workers.</p> <p>If you don't specify the <code>maxWorkerCount</code>, the default is -1.</p>"
        },
        "sourceJobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the source job.</p>"
        }
      },
      "documentation":"<p>A summary of job details.</p>"
    },
    "JobTargetTaskRunStatus":{
      "type":"string",
      "enum":[
        "READY",
        "FAILED",
        "SUCCEEDED",
        "CANCELED",
        "SUSPENDED",
        "PENDING"
      ]
    },
    "JobTemplate":{
      "type":"string",
      "max":1000000,
      "min":1,
      "sensitive":true
    },
    "JobTemplateType":{
      "type":"string",
      "enum":[
        "JSON",
        "YAML"
      ]
    },
    "KmsKeyArn":{
      "type":"string",
      "pattern":"arn:(aws[a-zA-Z-]*):kms:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:key/[\\w-]{1,120}"
    },
    "LicenseEndpointId":{
      "type":"string",
      "pattern":"le-[0-9a-f]{32}"
    },
    "LicenseEndpointStatus":{
      "type":"string",
      "enum":[
        "CREATE_IN_PROGRESS",
        "DELETE_IN_PROGRESS",
        "READY",
        "NOT_READY"
      ]
    },
    "LicenseEndpointSummaries":{
      "type":"list",
      "member":{"shape":"LicenseEndpointSummary"}
    },
    "LicenseEndpointSummary":{
      "type":"structure",
      "members":{
        "licenseEndpointId":{
          "shape":"LicenseEndpointId",
          "documentation":"<p>The license endpoint ID.</p>"
        },
        "status":{
          "shape":"LicenseEndpointStatus",
          "documentation":"<p>The status of the license endpoint.</p>"
        },
        "statusMessage":{
          "shape":"StatusMessage",
          "documentation":"<p>The status message of the license endpoint.</p>"
        },
        "vpcId":{
          "shape":"VpcId",
          "documentation":"<p>The VCP(virtual private cloud) ID associated with the license endpoint.</p>"
        }
      },
      "documentation":"<p>The details for a license endpoint.</p>"
    },
    "LicenseProduct":{"type":"string"},
    "LimitId":{
      "type":"string",
      "pattern":"limit-[0-9a-f]{32}"
    },
    "LimitSummaries":{
      "type":"list",
      "member":{"shape":"LimitSummary"}
    },
    "LimitSummary":{
      "type":"structure",
      "required":[
        "displayName",
        "amountRequirementName",
        "maxCount",
        "createdAt",
        "createdBy",
        "farmId",
        "limitId",
        "currentCount"
      ],
      "members":{
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The name of the limit used in lists to identify the limit.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "amountRequirementName":{
          "shape":"AmountRequirementName",
          "documentation":"<p>The value that you specify as the <code>name</code> in the <code>amounts</code> field of the <code>hostRequirements</code> in a step of a job template to declare the limit requirement.</p>"
        },
        "maxCount":{
          "shape":"MaxCount",
          "documentation":"<p>The maximum number of resources constrained by this limit. When all of the resources are in use, steps that require the limit won't be scheduled until the resource is available.</p> <p>The <code>maxValue</code> must not be 0. If the value is -1, there is no restriction on the number of resources that can be acquired for this limit.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The Unix timestamp of the date and time that the limit was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user identifier of the person that created the limit.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The Unix timestamp of the date and time that the limit was last updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user identifier of the person that last updated the limit.</p>"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The unique identifier of the farm that contains the limit.</p>"
        },
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>The unique identifier of the limit.</p>"
        },
        "currentCount":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The number of resources from the limit that are being used by jobs. The result is delayed and may not be the count at the time that you called the operation.</p>"
        }
      },
      "documentation":"<p>Provides information about a specific limit.</p>"
    },
    "ListAttributeCapabilityValue":{
      "type":"list",
      "member":{"shape":"AttributeCapabilityValue"}
    },
    "ListAvailableMeteredProductsRequest":{
      "type":"structure",
      "members":{
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListAvailableMeteredProductsResponse":{
      "type":"structure",
      "required":["meteredProducts"],
      "members":{
        "meteredProducts":{
          "shape":"MeteredProductSummaryList",
          "documentation":"<p>The metered products.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListBudgetsRequest":{
      "type":"structure",
      "required":["farmId"],
      "members":{
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID associated with the budgets.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        },
        "status":{
          "shape":"BudgetStatus",
          "documentation":"<p>The status to list for the budgets.</p>",
          "location":"querystring",
          "locationName":"status"
        }
      }
    },
    "ListBudgetsResponse":{
      "type":"structure",
      "required":["budgets"],
      "members":{
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        },
        "budgets":{
          "shape":"BudgetSummaries",
          "documentation":"<p>The budgets to include on the list.</p>"
        }
      }
    },
    "ListFarmMembersRequest":{
      "type":"structure",
      "required":["farmId"],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListFarmMembersResponse":{
      "type":"structure",
      "required":["members"],
      "members":{
        "members":{
          "shape":"FarmMembers",
          "documentation":"<p>The members on the list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListFarmsRequest":{
      "type":"structure",
      "members":{
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>The principal ID of the member to list on the farm.</p>",
          "location":"querystring",
          "locationName":"principalId"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListFarmsResponse":{
      "type":"structure",
      "required":["farms"],
      "members":{
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        },
        "farms":{
          "shape":"FarmSummaries",
          "documentation":"<p>Farms on the list.</p>"
        }
      }
    },
    "ListFleetMembersRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the fleet.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID to include on the list.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListFleetMembersResponse":{
      "type":"structure",
      "required":["members"],
      "members":{
        "members":{
          "shape":"FleetMembers",
          "documentation":"<p>The members on the list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListFleetsRequest":{
      "type":"structure",
      "required":["farmId"],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the fleets.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>The principal ID of the members to include in the fleet.</p>",
          "location":"querystring",
          "locationName":"principalId"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display names of a list of fleets.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>",
          "location":"querystring",
          "locationName":"displayName"
        },
        "status":{
          "shape":"FleetStatus",
          "documentation":"<p>The status of the fleet.</p>",
          "location":"querystring",
          "locationName":"status"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListFleetsResponse":{
      "type":"structure",
      "required":["fleets"],
      "members":{
        "fleets":{
          "shape":"FleetSummaries",
          "documentation":"<p>The fleets on the list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListJobMembersRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the job to list.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID to include on the list.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID to include on the list.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListJobMembersResponse":{
      "type":"structure",
      "required":["members"],
      "members":{
        "members":{
          "shape":"JobMembers",
          "documentation":"<p>The members on the list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListJobParameterDefinitionsRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "jobId",
        "queueId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the job to list.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID to include on the list.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID to include on the list.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListJobParameterDefinitionsResponse":{
      "type":"structure",
      "required":["jobParameterDefinitions"],
      "members":{
        "jobParameterDefinitions":{
          "shape":"JobParameterDefinitions",
          "documentation":"<p>Lists parameter definitions of a job.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListJobsRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the jobs.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>The principal ID of the members on the jobs.</p>",
          "location":"querystring",
          "locationName":"principalId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the job.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListJobsResponse":{
      "type":"structure",
      "required":["jobs"],
      "members":{
        "jobs":{
          "shape":"JobSummaries",
          "documentation":"<p>The jobs on the list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListLicenseEndpointsRequest":{
      "type":"structure",
      "members":{
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListLicenseEndpointsResponse":{
      "type":"structure",
      "required":["licenseEndpoints"],
      "members":{
        "licenseEndpoints":{
          "shape":"LicenseEndpointSummaries",
          "documentation":"<p>The license endpoints.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListLimitsRequest":{
      "type":"structure",
      "required":["farmId"],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The unique identifier of the farm that contains the limits.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of limits to return in each page of results.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListLimitsResponse":{
      "type":"structure",
      "required":["limits"],
      "members":{
        "limits":{
          "shape":"LimitSummaries",
          "documentation":"<p>A list of limits that the farm contains.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListMeteredProductsRequest":{
      "type":"structure",
      "required":["licenseEndpointId"],
      "members":{
        "licenseEndpointId":{
          "shape":"LicenseEndpointId",
          "documentation":"<p>The license endpoint ID to include on the list of metered products.</p>",
          "location":"uri",
          "locationName":"licenseEndpointId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListMeteredProductsResponse":{
      "type":"structure",
      "required":["meteredProducts"],
      "members":{
        "meteredProducts":{
          "shape":"MeteredProductSummaryList",
          "documentation":"<p>The metered products to list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListMonitorsRequest":{
      "type":"structure",
      "members":{
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListMonitorsResponse":{
      "type":"structure",
      "required":["monitors"],
      "members":{
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        },
        "monitors":{
          "shape":"MonitorSummaries",
          "documentation":"<p>A list of <code>MonitorSummary</code> objects that describe your monitors in the Deadline Cloud.</p>"
        }
      }
    },
    "ListQueueEnvironmentsRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the queue environment list.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the queue environment list.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListQueueEnvironmentsResponse":{
      "type":"structure",
      "required":["environments"],
      "members":{
        "environments":{
          "shape":"QueueEnvironmentSummaries",
          "documentation":"<p>The environments to include in the queue environments list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListQueueFleetAssociationsRequest":{
      "type":"structure",
      "required":["farmId"],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the queue-fleet association list.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the queue-fleet association list.</p>",
          "location":"querystring",
          "locationName":"queueId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID for the queue-fleet association list.</p>",
          "location":"querystring",
          "locationName":"fleetId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListQueueFleetAssociationsResponse":{
      "type":"structure",
      "required":["queueFleetAssociations"],
      "members":{
        "queueFleetAssociations":{
          "shape":"QueueFleetAssociationSummaries",
          "documentation":"<p>The queue-fleet associations on the list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListQueueLimitAssociationsRequest":{
      "type":"structure",
      "required":["farmId"],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The unique identifier of the farm that contains the limits and associations.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>Specifies that the operation should return only the queue limit associations for the specified queue. If you specify both the <code>queueId</code> and the <code>limitId</code>, only the specified limit is returned if it exists.</p>",
          "location":"querystring",
          "locationName":"queueId"
        },
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>Specifies that the operation should return only the queue limit associations for the specified limit. If you specify both the <code>queueId</code> and the <code>limitId</code>, only the specified limit is returned if it exists.</p>",
          "location":"querystring",
          "locationName":"limitId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of associations to return in each page of results.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListQueueLimitAssociationsResponse":{
      "type":"structure",
      "required":["queueLimitAssociations"],
      "members":{
        "queueLimitAssociations":{
          "shape":"QueueLimitAssociationSummaries",
          "documentation":"<p>A list of associations between limits and queues in the farm specified in the request.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListQueueMembersRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the queue.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID to include on the list.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListQueueMembersResponse":{
      "type":"structure",
      "required":["members"],
      "members":{
        "members":{
          "shape":"QueueMemberList",
          "documentation":"<p>The members on the list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListQueuesRequest":{
      "type":"structure",
      "required":["farmId"],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the queue.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>The principal IDs to include in the list of queues.</p>",
          "location":"querystring",
          "locationName":"principalId"
        },
        "status":{
          "shape":"QueueStatus",
          "documentation":"<p>The status of the queues listed.</p> <ul> <li> <p> <code>ACTIVE</code>–The queues are active.</p> </li> <li> <p> <code>SCHEDULING</code>–The queues are scheduling.</p> </li> <li> <p> <code>SCHEDULING_BLOCKED</code>–The queue scheduling is blocked for these queues.</p> </li> </ul>",
          "location":"querystring",
          "locationName":"status"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListQueuesResponse":{
      "type":"structure",
      "required":["queues"],
      "members":{
        "queues":{
          "shape":"QueueSummaries",
          "documentation":"<p>The queues on the list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListSessionActionsRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the session actions list.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the session actions list.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the session actions list.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "sessionId":{
          "shape":"SessionId",
          "documentation":"<p>The session ID to include on the sessions action list.</p>",
          "location":"querystring",
          "locationName":"sessionId"
        },
        "taskId":{
          "shape":"TaskId",
          "documentation":"<p>The task ID for the session actions list.</p>",
          "location":"querystring",
          "locationName":"taskId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListSessionActionsResponse":{
      "type":"structure",
      "required":["sessionActions"],
      "members":{
        "sessionActions":{
          "shape":"SessionActionSummaries",
          "documentation":"<p>The session actions.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListSessionsForWorkerRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId",
        "workerId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the session.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID for the session.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID for the session.</p>",
          "location":"uri",
          "locationName":"workerId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListSessionsForWorkerResponse":{
      "type":"structure",
      "required":["sessions"],
      "members":{
        "sessions":{
          "shape":"ListSessionsForWorkerSummaries",
          "documentation":"<p>The sessions in the response.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>"
        }
      }
    },
    "ListSessionsForWorkerSummaries":{
      "type":"list",
      "member":{"shape":"WorkerSessionSummary"}
    },
    "ListSessionsRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the list of sessions.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the list of sessions</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the list of sessions.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListSessionsResponse":{
      "type":"structure",
      "required":["sessions"],
      "members":{
        "sessions":{
          "shape":"SessionSummaries",
          "documentation":"<p>The sessions on the list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListStepConsumersRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId",
        "stepId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the list of step consumers.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the step consumer.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the step consumer.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID to include on the list.</p>",
          "location":"uri",
          "locationName":"stepId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"ListStepConsumersRequestMaxResultsInteger",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListStepConsumersRequestMaxResultsInteger":{
      "type":"integer",
      "box":true,
      "max":1000,
      "min":1
    },
    "ListStepConsumersResponse":{
      "type":"structure",
      "required":["consumers"],
      "members":{
        "consumers":{
          "shape":"StepConsumers",
          "documentation":"<p>The consumers on the list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListStepDependenciesRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId",
        "stepId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID for the step dependencies list.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the step dependencies list.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the step dependencies list.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID to include on the list.</p>",
          "location":"uri",
          "locationName":"stepId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"ListStepDependenciesRequestMaxResultsInteger",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListStepDependenciesRequestMaxResultsInteger":{
      "type":"integer",
      "box":true,
      "max":1000,
      "min":1
    },
    "ListStepDependenciesResponse":{
      "type":"structure",
      "required":["dependencies"],
      "members":{
        "dependencies":{
          "shape":"StepDependencies",
          "documentation":"<p>The dependencies on the list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListStepsRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to include on the list of steps.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID to include on the list of steps.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID to include on the list of steps.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListStepsResponse":{
      "type":"structure",
      "required":["steps"],
      "members":{
        "steps":{
          "shape":"StepSummaries",
          "documentation":"<p>The steps on the list.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListStorageProfilesForQueueRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the queue's storage profile.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the storage profile.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListStorageProfilesForQueueResponse":{
      "type":"structure",
      "required":["storageProfiles"],
      "members":{
        "storageProfiles":{
          "shape":"StorageProfileSummaries",
          "documentation":"<p>The storage profiles in the queue.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListStorageProfilesRequest":{
      "type":"structure",
      "required":["farmId"],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the storage profile.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListStorageProfilesResponse":{
      "type":"structure",
      "required":["storageProfiles"],
      "members":{
        "storageProfiles":{
          "shape":"StorageProfileSummaries",
          "documentation":"<p>The storage profiles.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListTagsForResourceRequest":{
      "type":"structure",
      "required":["resourceArn"],
      "members":{
        "resourceArn":{
          "shape":"String",
          "documentation":"<p>The resource ARN to list tags for.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        }
      }
    },
    "ListTagsForResourceResponse":{
      "type":"structure",
      "members":{
        "tags":{
          "shape":"Tags",
          "documentation":"<p>Each tag consists of a tag key and a tag value. Tag keys and values are both required, but tag values can be empty strings.</p>"
        }
      }
    },
    "ListTasksRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId",
        "stepId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID connected to the tasks.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID connected to the tasks.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the tasks.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID for the tasks.</p>",
          "location":"uri",
          "locationName":"stepId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListTasksResponse":{
      "type":"structure",
      "required":["tasks"],
      "members":{
        "tasks":{
          "shape":"TaskSummaries",
          "documentation":"<p>Tasks for the job.</p>"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        }
      }
    },
    "ListWorkersRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID connected to the workers.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID of the workers.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "nextToken":{
          "shape":"String",
          "documentation":"<p>The token for the next set of results, or <code>null</code> to start from the beginning.</p>",
          "location":"querystring",
          "locationName":"nextToken"
        },
        "maxResults":{
          "shape":"MaxResults",
          "documentation":"<p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>",
          "location":"querystring",
          "locationName":"maxResults"
        }
      }
    },
    "ListWorkersResponse":{
      "type":"structure",
      "required":["workers"],
      "members":{
        "nextToken":{
          "shape":"String",
          "documentation":"<p>If Deadline Cloud returns <code>nextToken</code>, then there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. To retrieve the next page, call the operation again using the returned token. Keep all other arguments unchanged. If no results remain, then <code>nextToken</code> is set to <code>null</code>. Each pagination token expires after 24 hours. If you provide a token that isn't valid, then you receive an HTTP 400 <code>ValidationException</code> error.</p>"
        },
        "workers":{
          "shape":"WorkerSummaries",
          "documentation":"<p>The workers on the list.</p>"
        }
      }
    },
    "LogConfiguration":{
      "type":"structure",
      "required":["logDriver"],
      "members":{
        "logDriver":{
          "shape":"LogDriver",
          "documentation":"<p>The log drivers for worker related logs.</p>"
        },
        "options":{
          "shape":"LogOptions",
          "documentation":"<p>The options for a log driver.</p>"
        },
        "parameters":{
          "shape":"LogParameters",
          "documentation":"<p>The parameters for the log configuration.</p>"
        },
        "error":{
          "shape":"LogError",
          "documentation":"<p>The log configuration error details.</p>"
        }
      },
      "documentation":"<p>Log configuration details.</p>"
    },
    "LogDriver":{
      "type":"string",
      "max":512,
      "min":1
    },
    "LogError":{
      "type":"string",
      "max":512,
      "min":1
    },
    "LogOptions":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "LogParameters":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "LogicalOperator":{
      "type":"string",
      "enum":[
        "AND",
        "OR"
      ]
    },
    "ManifestProperties":{
      "type":"structure",
      "required":[
        "rootPath",
        "rootPathFormat"
      ],
      "members":{
        "fileSystemLocationName":{
          "shape":"FileSystemLocationName",
          "documentation":"<p>The file system location name.</p>"
        },
        "rootPath":{
          "shape":"ManifestPropertiesRootPathString",
          "documentation":"<p>The file's root path.</p>"
        },
        "rootPathFormat":{
          "shape":"PathFormat",
          "documentation":"<p>The format of the root path.</p>"
        },
        "outputRelativeDirectories":{
          "shape":"OutputRelativeDirectoriesList",
          "documentation":"<p>The file path relative to the directory.</p>"
        },
        "inputManifestPath":{
          "shape":"ManifestPropertiesInputManifestPathString",
          "documentation":"<p>The file path.</p>"
        },
        "inputManifestHash":{
          "shape":"ManifestPropertiesInputManifestHashString",
          "documentation":"<p>The hash value of the file.</p>"
        }
      },
      "documentation":"<p>The details of the manifest that links a job's source information.</p>",
      "sensitive":true
    },
    "ManifestPropertiesInputManifestHashString":{
      "type":"string",
      "max":256,
      "min":1
    },
    "ManifestPropertiesInputManifestPathString":{
      "type":"string",
      "max":512,
      "min":1
    },
    "ManifestPropertiesList":{
      "type":"list",
      "member":{"shape":"ManifestProperties"},
      "max":10,
      "min":1
    },
    "ManifestPropertiesRootPathString":{
      "type":"string",
      "max":1024,
      "min":1
    },
    "MaxCount":{
      "type":"integer",
      "box":true,
      "max":2147483647,
      "min":-1
    },
    "MaxFailedTasksCount":{
      "type":"integer",
      "box":true,
      "max":2147483647,
      "min":0
    },
    "MaxResults":{
      "type":"integer",
      "box":true,
      "max":100,
      "min":1
    },
    "MaxRetriesPerTask":{
      "type":"integer",
      "box":true,
      "max":2147483647,
      "min":0
    },
    "MaxWorkerCount":{
      "type":"integer",
      "box":true,
      "max":2147483647,
      "min":-1
    },
    "MembershipLevel":{
      "type":"string",
      "enum":[
        "VIEWER",
        "CONTRIBUTOR",
        "OWNER",
        "MANAGER"
      ]
    },
    "MemoryAmountMiB":{
      "type":"integer",
      "box":true,
      "max":2147483647,
      "min":512
    },
    "MemoryMiBRange":{
      "type":"structure",
      "required":["min"],
      "members":{
        "min":{
          "shape":"MemoryAmountMiB",
          "documentation":"<p>The minimum amount of memory (in MiB).</p>"
        },
        "max":{
          "shape":"MemoryAmountMiB",
          "documentation":"<p>The maximum amount of memory (in MiB).</p>"
        }
      },
      "documentation":"<p>The range of memory in MiB.</p>"
    },
    "MeteredProductId":{
      "type":"string",
      "pattern":"[0-9a-z]{1,32}-[.0-9a-z]{1,32}"
    },
    "MeteredProductSummary":{
      "type":"structure",
      "required":[
        "productId",
        "family",
        "vendor",
        "port"
      ],
      "members":{
        "productId":{
          "shape":"MeteredProductId",
          "documentation":"<p>The product ID.</p>"
        },
        "family":{
          "shape":"BoundedString",
          "documentation":"<p>The family to which the metered product belongs.</p>"
        },
        "vendor":{
          "shape":"BoundedString",
          "documentation":"<p>The vendor.</p>"
        },
        "port":{
          "shape":"PortNumber",
          "documentation":"<p>The port on which the metered product should run.</p>"
        }
      },
      "documentation":"<p>The details of a metered product.</p>"
    },
    "MeteredProductSummaryList":{
      "type":"list",
      "member":{"shape":"MeteredProductSummary"}
    },
    "MinOneMaxInteger":{
      "type":"integer",
      "box":true,
      "max":2147483647,
      "min":1
    },
    "MinOneMaxTenThousand":{
      "type":"integer",
      "box":true,
      "max":10000,
      "min":1
    },
    "MinZeroMaxInteger":{
      "type":"integer",
      "box":true,
      "max":2147483647,
      "min":0
    },
    "MonitorId":{
      "type":"string",
      "pattern":"monitor-[0-9a-f]{32}"
    },
    "MonitorSummaries":{
      "type":"list",
      "member":{"shape":"MonitorSummary"}
    },
    "MonitorSummary":{
      "type":"structure",
      "required":[
        "monitorId",
        "displayName",
        "subdomain",
        "url",
        "roleArn",
        "identityCenterInstanceArn",
        "identityCenterApplicationArn",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "monitorId":{
          "shape":"MonitorId",
          "documentation":"<p>The unique identifier for the monitor.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The name of the monitor that displays on the Deadline Cloud console.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "subdomain":{
          "shape":"Subdomain",
          "documentation":"<p>The subdomain used for the monitor URL. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.</p>"
        },
        "url":{
          "shape":"Url",
          "documentation":"<p>The complete URL of the monitor. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.</p>"
        },
        "roleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM role for the monitor. Users of the monitor use this role to access Deadline Cloud resources.</p>"
        },
        "identityCenterInstanceArn":{
          "shape":"IdentityCenterInstanceArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the IAM Identity Center instance responsible for authenticating monitor users.</p>"
        },
        "identityCenterApplicationArn":{
          "shape":"IdentityCenterApplicationArn",
          "documentation":"<p>The Amazon Resource Name (ARN) that the IAM Identity Center assigned to the monitor when it was created.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The UNIX timestamp of the date and time that the monitor was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user name of the person that created the monitor.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The UNIX timestamp of the date and time that the monitor was last updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user name of the person that last updated the monitor.</p>"
        }
      },
      "documentation":"<p>Provides information about a monitor in Deadline Cloud.</p>"
    },
    "NextItemOffset":{
      "type":"integer",
      "box":true,
      "max":10000,
      "min":0
    },
    "OutputRelativeDirectoriesList":{
      "type":"list",
      "member":{"shape":"OutputRelativeDirectoriesListMemberString"},
      "max":100,
      "min":0
    },
    "OutputRelativeDirectoriesListMemberString":{
      "type":"string",
      "max":1024,
      "min":1
    },
    "ParameterFilterExpression":{
      "type":"structure",
      "required":[
        "name",
        "operator",
        "value"
      ],
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the parameter to filter on.</p>"
        },
        "operator":{
          "shape":"ComparisonOperator",
          "documentation":"<p>The type of comparison to use to filter results.</p>"
        },
        "value":{
          "shape":"ParameterValue",
          "documentation":"<p>The parameter's value.</p>"
        }
      },
      "documentation":"<p>The details of a filtered search for parameters.</p>"
    },
    "ParameterSortExpression":{
      "type":"structure",
      "required":[
        "sortOrder",
        "name"
      ],
      "members":{
        "sortOrder":{
          "shape":"SortOrder",
          "documentation":"<p>The sort order for the parameter.</p>"
        },
        "name":{
          "shape":"String",
          "documentation":"<p>The parameter name to sort by.</p>"
        }
      },
      "documentation":"<p>Organizes parameters according to your specifications.</p>"
    },
    "ParameterSpace":{
      "type":"structure",
      "required":["parameters"],
      "members":{
        "parameters":{
          "shape":"StepParameterList",
          "documentation":"<p>The parameters to search for.</p>"
        },
        "combination":{
          "shape":"CombinationExpression",
          "documentation":"<p>The combination expression to use in the search.</p>"
        }
      },
      "documentation":"<p>The details of a search for two or more step parameters.</p>"
    },
    "ParameterString":{
      "type":"string",
      "max":1024,
      "min":0
    },
    "ParameterValue":{
      "type":"string",
      "max":256,
      "min":1
    },
    "PathFormat":{
      "type":"string",
      "enum":[
        "windows",
        "posix"
      ]
    },
    "PathMappingRule":{
      "type":"structure",
      "required":[
        "sourcePathFormat",
        "sourcePath",
        "destinationPath"
      ],
      "members":{
        "sourcePathFormat":{
          "shape":"PathFormat",
          "documentation":"<p>The source path format.</p>"
        },
        "sourcePath":{
          "shape":"String",
          "documentation":"<p>The source path.</p>"
        },
        "destinationPath":{
          "shape":"String",
          "documentation":"<p>The destination path.</p>"
        }
      },
      "documentation":"<p>The details of a source and destination path.</p>",
      "sensitive":true
    },
    "PathMappingRules":{
      "type":"list",
      "member":{"shape":"PathMappingRule"}
    },
    "PathString":{
      "type":"string",
      "max":1024,
      "min":0
    },
    "Period":{
      "type":"string",
      "enum":[
        "HOURLY",
        "DAILY",
        "WEEKLY",
        "MONTHLY"
      ]
    },
    "PortNumber":{
      "type":"integer",
      "box":true,
      "max":65535,
      "min":1024
    },
    "PosixUser":{
      "type":"structure",
      "required":[
        "user",
        "group"
      ],
      "members":{
        "user":{
          "shape":"PosixUserUserString",
          "documentation":"<p>The name of the POSIX user.</p>"
        },
        "group":{
          "shape":"PosixUserGroupString",
          "documentation":"<p>The name of the POSIX user's group.</p>"
        }
      },
      "documentation":"<p>The POSIX user.</p>"
    },
    "PosixUserGroupString":{
      "type":"string",
      "max":31,
      "min":0,
      "pattern":"(?:[a-z][a-z0-9-]{0,30})?"
    },
    "PosixUserUserString":{
      "type":"string",
      "max":31,
      "min":0,
      "pattern":"(?:[a-z][a-z0-9-]{0,30})?"
    },
    "PrincipalType":{
      "type":"string",
      "enum":[
        "USER",
        "GROUP"
      ]
    },
    "Priority":{
      "type":"integer",
      "box":true,
      "max":10000,
      "min":0
    },
    "ProcessExitCode":{
      "type":"integer",
      "box":true,
      "max":2147483647,
      "min":-2147483648
    },
    "PutMeteredProductRequest":{
      "type":"structure",
      "required":[
        "licenseEndpointId",
        "productId"
      ],
      "members":{
        "licenseEndpointId":{
          "shape":"LicenseEndpointId",
          "documentation":"<p>The license endpoint ID to add to the metered product.</p>",
          "location":"uri",
          "locationName":"licenseEndpointId"
        },
        "productId":{
          "shape":"MeteredProductId",
          "documentation":"<p>The product ID to add to the metered product.</p>",
          "location":"uri",
          "locationName":"productId"
        }
      }
    },
    "PutMeteredProductResponse":{
      "type":"structure",
      "members":{
      }
    },
    "QueueBlockedReason":{
      "type":"string",
      "enum":[
        "NO_BUDGET_CONFIGURED",
        "BUDGET_THRESHOLD_REACHED"
      ]
    },
    "QueueEnvironmentId":{
      "type":"string",
      "pattern":"queueenv-[0-9a-f]{32}"
    },
    "QueueEnvironmentSummaries":{
      "type":"list",
      "member":{"shape":"QueueEnvironmentSummary"}
    },
    "QueueEnvironmentSummary":{
      "type":"structure",
      "required":[
        "queueEnvironmentId",
        "name",
        "priority"
      ],
      "members":{
        "queueEnvironmentId":{
          "shape":"QueueEnvironmentId",
          "documentation":"<p>The queue environment ID.</p>"
        },
        "name":{
          "shape":"EnvironmentName",
          "documentation":"<p>The name of the queue environment.</p>"
        },
        "priority":{
          "shape":"Priority",
          "documentation":"<p>The queue environment's priority.</p>"
        }
      },
      "documentation":"<p>The summary of a queue environment.</p>"
    },
    "QueueFleetAssociationStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "STOP_SCHEDULING_AND_COMPLETE_TASKS",
        "STOP_SCHEDULING_AND_CANCEL_TASKS",
        "STOPPED"
      ]
    },
    "QueueFleetAssociationSummaries":{
      "type":"list",
      "member":{"shape":"QueueFleetAssociationSummary"}
    },
    "QueueFleetAssociationSummary":{
      "type":"structure",
      "required":[
        "queueId",
        "fleetId",
        "status",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID.</p>"
        },
        "status":{
          "shape":"QueueFleetAssociationStatus",
          "documentation":"<p>The status of task scheduling in the queue-fleet association.</p> <ul> <li> <p> <code>ACTIVE</code>–Association is active.</p> </li> <li> <p> <code>STOP_SCHEDULING_AND_COMPLETE_TASKS</code>–Association has stopped scheduling new tasks and is completing current tasks.</p> </li> <li> <p> <code>STOP_SCHEDULING_AND_CANCEL_TASKS</code>–Association has stopped scheduling new tasks and is canceling current tasks.</p> </li> <li> <p> <code>STOPPED</code>–Association has been stopped.</p> </li> </ul>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        }
      },
      "documentation":"<p>The details of a queue-fleet association.</p>"
    },
    "QueueId":{
      "type":"string",
      "pattern":"queue-[0-9a-f]{32}"
    },
    "QueueLimitAssociationStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "STOP_LIMIT_USAGE_AND_COMPLETE_TASKS",
        "STOP_LIMIT_USAGE_AND_CANCEL_TASKS",
        "STOPPED"
      ]
    },
    "QueueLimitAssociationSummaries":{
      "type":"list",
      "member":{"shape":"QueueLimitAssociationSummary"}
    },
    "QueueLimitAssociationSummary":{
      "type":"structure",
      "required":[
        "createdAt",
        "createdBy",
        "queueId",
        "limitId",
        "status"
      ],
      "members":{
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The Unix timestamp of the date and time that the association was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user identifier of the person that created the association.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The Unix timestamp of the date and time that the association was last updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user identifier of the person that updated the association.</p>"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The unique identifier of the queue in the association.</p>"
        },
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>The unique identifier of the limit in the association.</p>"
        },
        "status":{
          "shape":"QueueLimitAssociationStatus",
          "documentation":"<p>The status of task scheduling in the queue-limit association.</p> <ul> <li> <p> <code>ACTIVE</code> - Association is active.</p> </li> <li> <p> <code>STOP_LIMIT_USAGE_AND_COMPLETE_TASKS</code> - Association has stopped scheduling new tasks and is completing current tasks.</p> </li> <li> <p> <code>STOP_LIMIT_USAGE_AND_CANCEL_TASKS</code> - Association has stopped scheduling new tasks and is canceling current tasks.</p> </li> <li> <p> <code>STOPPED</code> - Association has been stopped.</p> </li> </ul>"
        }
      },
      "documentation":"<p>Provides information about the association between a queue and a limit.</p>"
    },
    "QueueMember":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "principalId",
        "principalType",
        "identityStoreId",
        "membershipLevel"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID.</p>"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>"
        },
        "principalId":{
          "shape":"IdentityCenterPrincipalId",
          "documentation":"<p>The principal ID of the queue member.</p>"
        },
        "principalType":{
          "shape":"PrincipalType",
          "documentation":"<p>The principal type of the queue member.</p>"
        },
        "identityStoreId":{
          "shape":"IdentityStoreId",
          "documentation":"<p>The identity store ID.</p>"
        },
        "membershipLevel":{
          "shape":"MembershipLevel",
          "documentation":"<p>The queue member's membership level.</p>"
        }
      },
      "documentation":"<p>The details of a queue member.</p>"
    },
    "QueueMemberList":{
      "type":"list",
      "member":{"shape":"QueueMember"}
    },
    "QueueStatus":{
      "type":"string",
      "enum":[
        "IDLE",
        "SCHEDULING",
        "SCHEDULING_BLOCKED"
      ]
    },
    "QueueSummaries":{
      "type":"list",
      "member":{"shape":"QueueSummary"}
    },
    "QueueSummary":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "displayName",
        "status",
        "defaultBudgetAction",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID.</p>"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the queue summary to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "status":{
          "shape":"QueueStatus",
          "documentation":"<p>That status of the queue.</p>"
        },
        "defaultBudgetAction":{
          "shape":"DefaultQueueBudgetAction",
          "documentation":"<p>The default action taken on a queue summary if a budget wasn't configured.</p>"
        },
        "blockedReason":{
          "shape":"QueueBlockedReason",
          "documentation":"<p>The reason the queue is blocked, if applicable.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        }
      },
      "documentation":"<p>The details of a queue summary.</p>"
    },
    "RequiredFileSystemLocationNames":{
      "type":"list",
      "member":{"shape":"FileSystemLocationName"},
      "max":20,
      "min":0
    },
    "ResourceName":{
      "type":"string",
      "max":100,
      "min":1
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "required":[
        "message",
        "resourceId",
        "resourceType"
      ],
      "members":{
        "message":{"shape":"String"},
        "resourceId":{
          "shape":"String",
          "documentation":"<p>The identifier of the resource that couldn't be found.</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>The type of the resource that couldn't be found.</p>"
        },
        "context":{
          "shape":"ExceptionContext",
          "documentation":"<p>Information about the resources in use when the exception was thrown.</p>"
        }
      },
      "documentation":"<p>The requested resource can't be found.</p>",
      "error":{
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true
    },
    "ResponseBudgetAction":{
      "type":"structure",
      "required":[
        "type",
        "thresholdPercentage"
      ],
      "members":{
        "type":{
          "shape":"BudgetActionType",
          "documentation":"<p>The action taken on the budget once scheduling stops.</p>"
        },
        "thresholdPercentage":{
          "shape":"ThresholdPercentage",
          "documentation":"<p>The percentage threshold for the budget.</p>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The budget action description.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        }
      },
      "documentation":"<p>The details of a budget action.</p>"
    },
    "ResponseBudgetActionList":{
      "type":"list",
      "member":{"shape":"ResponseBudgetAction"},
      "max":10,
      "min":0
    },
    "RunAs":{
      "type":"string",
      "enum":[
        "QUEUE_CONFIGURED_USER",
        "WORKER_AGENT_USER"
      ]
    },
    "S3BucketName":{
      "type":"string",
      "max":255,
      "min":1
    },
    "S3Key":{
      "type":"string",
      "max":1024,
      "min":1
    },
    "S3Location":{
      "type":"structure",
      "required":[
        "bucketName",
        "key"
      ],
      "members":{
        "bucketName":{
          "shape":"S3BucketName",
          "documentation":"<p>The name of the Amazon S3 bucket.</p>"
        },
        "key":{
          "shape":"S3Key",
          "documentation":"<p>The Amazon S3 object key that uniquely identifies the Amazon S3 bucket.</p>"
        }
      },
      "documentation":"<p>The Amazon S3 location information.</p>"
    },
    "S3Prefix":{
      "type":"string",
      "max":63,
      "min":1,
      "pattern":"[a-zA-Z0-9-_/]+"
    },
    "SearchFilterExpression":{
      "type":"structure",
      "members":{
        "dateTimeFilter":{
          "shape":"DateTimeFilterExpression",
          "documentation":"<p>Filters based on date and time.</p>"
        },
        "parameterFilter":{
          "shape":"ParameterFilterExpression",
          "documentation":"<p>Filters by parameter.</p>"
        },
        "searchTermFilter":{
          "shape":"SearchTermFilterExpression",
          "documentation":"<p>Filters by a specified search term.</p>"
        },
        "stringFilter":{
          "shape":"StringFilterExpression",
          "documentation":"<p>Filters by a string.</p>"
        },
        "groupFilter":{
          "shape":"SearchGroupedFilterExpressions",
          "documentation":"<p>Filters by group.</p>"
        }
      },
      "documentation":"<p>The type of search filter to apply.</p>",
      "union":true
    },
    "SearchFilterExpressions":{
      "type":"list",
      "member":{"shape":"SearchFilterExpression"},
      "max":3,
      "min":1
    },
    "SearchGroupedFilterExpressions":{
      "type":"structure",
      "required":[
        "filters",
        "operator"
      ],
      "members":{
        "filters":{
          "shape":"SearchFilterExpressions",
          "documentation":"<p>The filters to use for the search.</p>"
        },
        "operator":{
          "shape":"LogicalOperator",
          "documentation":"<p>The operators to include in the search.</p>"
        }
      },
      "documentation":"<p>The filter expression, <code>AND</code> or <code>OR</code>, to use when searching among a group of search strings in a resource. <p>You can use two groupings per search each within parenthesis <code>()</code>.</p></p>"
    },
    "SearchJobsRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueIds",
        "itemOffset"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the job.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueIds":{
          "shape":"SearchJobsRequestQueueIdsList",
          "documentation":"<p>The queue ID to use in the job search.</p>"
        },
        "filterExpressions":{
          "shape":"SearchGroupedFilterExpressions",
          "documentation":"<p>The filter expression, <code>AND</code> or <code>OR</code>, to use when searching among a group of search strings in a resource. <p>You can use two groupings per search each within parenthesis <code>()</code>.</p></p>"
        },
        "sortExpressions":{
          "shape":"SearchSortExpressions",
          "documentation":"<p>The search terms for a resource.</p>"
        },
        "itemOffset":{
          "shape":"SearchJobsRequestItemOffsetInteger",
          "documentation":"<p>Defines how far into the scrollable list to start the return of results.</p>"
        },
        "pageSize":{
          "shape":"SearchJobsRequestPageSizeInteger",
          "documentation":"<p>Specifies the number of items per page for the resource.</p>"
        }
      }
    },
    "SearchJobsRequestItemOffsetInteger":{
      "type":"integer",
      "box":true,
      "max":10000,
      "min":0
    },
    "SearchJobsRequestPageSizeInteger":{
      "type":"integer",
      "box":true,
      "max":100,
      "min":1
    },
    "SearchJobsRequestQueueIdsList":{
      "type":"list",
      "member":{"shape":"QueueId"},
      "max":10,
      "min":1
    },
    "SearchJobsResponse":{
      "type":"structure",
      "required":[
        "jobs",
        "totalResults"
      ],
      "members":{
        "jobs":{
          "shape":"JobSearchSummaries",
          "documentation":"<p>The jobs in the search.</p>"
        },
        "nextItemOffset":{
          "shape":"NextItemOffset",
          "documentation":"<p>The next incremental starting point after the defined <code>itemOffset</code>.</p>"
        },
        "totalResults":{
          "shape":"TotalResults",
          "documentation":"<p>The total number of results in the search.</p>"
        }
      }
    },
    "SearchSortExpression":{
      "type":"structure",
      "members":{
        "userJobsFirst":{
          "shape":"UserJobsFirst",
          "documentation":"<p>Options for sorting a particular user's jobs first.</p>"
        },
        "fieldSort":{
          "shape":"FieldSortExpression",
          "documentation":"<p>Options for sorting by a field.</p>"
        },
        "parameterSort":{
          "shape":"ParameterSortExpression",
          "documentation":"<p>Options for sorting by a parameter.</p>"
        }
      },
      "documentation":"<p>The resources to search.</p>",
      "union":true
    },
    "SearchSortExpressions":{
      "type":"list",
      "member":{"shape":"SearchSortExpression"},
      "max":5,
      "min":1
    },
    "SearchStepsRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueIds",
        "itemOffset"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to use for the step search.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueIds":{
          "shape":"SearchStepsRequestQueueIdsList",
          "documentation":"<p>The queue IDs in the step search.</p>"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID to use in the step search.</p>"
        },
        "filterExpressions":{
          "shape":"SearchGroupedFilterExpressions",
          "documentation":"<p>The filter expression, <code>AND</code> or <code>OR</code>, to use when searching among a group of search strings in a resource. <p>You can use two groupings per search each within parenthesis <code>()</code>.</p></p>"
        },
        "sortExpressions":{
          "shape":"SearchSortExpressions",
          "documentation":"<p>The search terms for a resource.</p>"
        },
        "itemOffset":{
          "shape":"SearchStepsRequestItemOffsetInteger",
          "documentation":"<p>Defines how far into the scrollable list to start the return of results.</p>"
        },
        "pageSize":{
          "shape":"SearchStepsRequestPageSizeInteger",
          "documentation":"<p>Specifies the number of items per page for the resource.</p>"
        }
      }
    },
    "SearchStepsRequestItemOffsetInteger":{
      "type":"integer",
      "box":true,
      "max":10000,
      "min":0
    },
    "SearchStepsRequestPageSizeInteger":{
      "type":"integer",
      "box":true,
      "max":100,
      "min":1
    },
    "SearchStepsRequestQueueIdsList":{
      "type":"list",
      "member":{"shape":"QueueId"},
      "max":10,
      "min":1
    },
    "SearchStepsResponse":{
      "type":"structure",
      "required":[
        "steps",
        "totalResults"
      ],
      "members":{
        "steps":{
          "shape":"StepSearchSummaries",
          "documentation":"<p>The steps in the search.</p>"
        },
        "nextItemOffset":{
          "shape":"NextItemOffset",
          "documentation":"<p>The next incremental starting point after the defined <code>itemOffset</code>.</p>"
        },
        "totalResults":{
          "shape":"TotalResults",
          "documentation":"<p>The total number of results in the search.</p>"
        }
      }
    },
    "SearchTasksRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueIds",
        "itemOffset"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the task.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueIds":{
          "shape":"SearchTasksRequestQueueIdsList",
          "documentation":"<p>The queue IDs to include in the search.</p>"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the task search.</p>"
        },
        "filterExpressions":{
          "shape":"SearchGroupedFilterExpressions",
          "documentation":"<p>The filter expression, <code>AND</code> or <code>OR</code>, to use when searching among a group of search strings in a resource. <p>You can use two groupings per search each within parenthesis <code>()</code>.</p></p>"
        },
        "sortExpressions":{
          "shape":"SearchSortExpressions",
          "documentation":"<p>The search terms for a resource.</p>"
        },
        "itemOffset":{
          "shape":"SearchTasksRequestItemOffsetInteger",
          "documentation":"<p>Defines how far into the scrollable list to start the return of results.</p>"
        },
        "pageSize":{
          "shape":"SearchTasksRequestPageSizeInteger",
          "documentation":"<p>Specifies the number of items per page for the resource.</p>"
        }
      }
    },
    "SearchTasksRequestItemOffsetInteger":{
      "type":"integer",
      "box":true,
      "max":10000,
      "min":0
    },
    "SearchTasksRequestPageSizeInteger":{
      "type":"integer",
      "box":true,
      "max":100,
      "min":1
    },
    "SearchTasksRequestQueueIdsList":{
      "type":"list",
      "member":{"shape":"QueueId"},
      "max":10,
      "min":1
    },
    "SearchTasksResponse":{
      "type":"structure",
      "required":[
        "tasks",
        "totalResults"
      ],
      "members":{
        "tasks":{
          "shape":"TaskSearchSummaries",
          "documentation":"<p>Tasks in the search.</p>"
        },
        "nextItemOffset":{
          "shape":"NextItemOffset",
          "documentation":"<p>The next incremental starting point after the defined <code>itemOffset</code>.</p>"
        },
        "totalResults":{
          "shape":"TotalResults",
          "documentation":"<p>The total number of results in the search.</p>"
        }
      }
    },
    "SearchTerm":{
      "type":"string",
      "max":256,
      "min":1
    },
    "SearchTermFilterExpression":{
      "type":"structure",
      "required":["searchTerm"],
      "members":{
        "searchTerm":{
          "shape":"SearchTerm",
          "documentation":"<p>The term to search for.</p>"
        },
        "matchType":{
          "shape":"SearchTermMatchingType",
          "documentation":"<p>Specifies how Deadline Cloud matches your search term in the results. If you don't specify a <code>matchType</code> the default is <code>FUZZY_MATCH</code>.</p> <ul> <li> <p> <code>FUZZY_MATCH</code> - Matches if a portion of the search term is found in the result.</p> </li> <li> <p> <code>CONTAINS</code> - Matches if the exact search term is contained in the result.</p> </li> </ul>"
        }
      },
      "documentation":"<p>Searches for a particular search term.</p>"
    },
    "SearchTermMatchingType":{
      "type":"string",
      "enum":[
        "FUZZY_MATCH",
        "CONTAINS"
      ]
    },
    "SearchWorkersRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetIds",
        "itemOffset"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID in the workers search.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetIds":{
          "shape":"SearchWorkersRequestFleetIdsList",
          "documentation":"<p>The fleet ID of the workers to search for.</p>"
        },
        "filterExpressions":{
          "shape":"SearchGroupedFilterExpressions",
          "documentation":"<p>The filter expression, <code>AND</code> or <code>OR</code>, to use when searching among a group of search strings in a resource. <p>You can use two groupings per search each within parenthesis <code>()</code>.</p></p>"
        },
        "sortExpressions":{
          "shape":"SearchSortExpressions",
          "documentation":"<p>The search terms for a resource.</p>"
        },
        "itemOffset":{
          "shape":"SearchWorkersRequestItemOffsetInteger",
          "documentation":"<p>Defines how far into the scrollable list to start the return of results.</p>"
        },
        "pageSize":{
          "shape":"SearchWorkersRequestPageSizeInteger",
          "documentation":"<p>Specifies the number of items per page for the resource.</p>"
        }
      }
    },
    "SearchWorkersRequestFleetIdsList":{
      "type":"list",
      "member":{"shape":"FleetId"},
      "max":10,
      "min":1
    },
    "SearchWorkersRequestItemOffsetInteger":{
      "type":"integer",
      "box":true,
      "max":10000,
      "min":0
    },
    "SearchWorkersRequestPageSizeInteger":{
      "type":"integer",
      "box":true,
      "max":100,
      "min":1
    },
    "SearchWorkersResponse":{
      "type":"structure",
      "required":[
        "workers",
        "totalResults"
      ],
      "members":{
        "workers":{
          "shape":"WorkerSearchSummaries",
          "documentation":"<p>The workers for the search.</p>"
        },
        "nextItemOffset":{
          "shape":"NextItemOffset",
          "documentation":"<p>The next incremental starting point after the defined <code>itemOffset</code>.</p>"
        },
        "totalResults":{
          "shape":"TotalResults",
          "documentation":"<p>The total number of results in the search.</p>"
        }
      }
    },
    "SecretAccessKey":{
      "type":"string",
      "sensitive":true
    },
    "SecurityGroupId":{
      "type":"string",
      "pattern":"sg-[\\w]{1,120}"
    },
    "ServiceManagedEc2FleetConfiguration":{
      "type":"structure",
      "required":[
        "instanceCapabilities",
        "instanceMarketOptions"
      ],
      "members":{
        "instanceCapabilities":{
          "shape":"ServiceManagedEc2InstanceCapabilities",
          "documentation":"<p>The Amazon EC2 instance capabilities.</p>"
        },
        "instanceMarketOptions":{
          "shape":"ServiceManagedEc2InstanceMarketOptions",
          "documentation":"<p>The Amazon EC2 market type.</p>"
        },
        "vpcConfiguration":{
          "shape":"VpcConfiguration",
          "documentation":"<p>The VPC configuration details for a service managed Amazon EC2 fleet.</p>"
        },
        "storageProfileId":{
          "shape":"StorageProfileId",
          "documentation":"<p>The storage profile ID.</p>"
        }
      },
      "documentation":"<p>The configuration details for a service managed Amazon EC2 fleet.</p>"
    },
    "ServiceManagedEc2InstanceCapabilities":{
      "type":"structure",
      "required":[
        "vCpuCount",
        "memoryMiB",
        "osFamily",
        "cpuArchitectureType"
      ],
      "members":{
        "vCpuCount":{
          "shape":"VCpuCountRange",
          "documentation":"<p>The amount of vCPU to require for instances in this fleet.</p>"
        },
        "memoryMiB":{
          "shape":"MemoryMiBRange",
          "documentation":"<p>The memory, as MiB, for the Amazon EC2 instance type.</p>"
        },
        "osFamily":{
          "shape":"ServiceManagedFleetOperatingSystemFamily",
          "documentation":"<p>The operating system (OS) family.</p>"
        },
        "cpuArchitectureType":{
          "shape":"CpuArchitectureType",
          "documentation":"<p>The CPU architecture type.</p>"
        },
        "rootEbsVolume":{
          "shape":"Ec2EbsVolume",
          "documentation":"<p>The root EBS volume.</p>"
        },
        "acceleratorCapabilities":{
          "shape":"AcceleratorCapabilities",
          "documentation":"<p>Describes the GPU accelerator capabilities required for worker host instances in this fleet.</p>"
        },
        "allowedInstanceTypes":{
          "shape":"InstanceTypes",
          "documentation":"<p>The allowable Amazon EC2 instance types.</p>"
        },
        "excludedInstanceTypes":{
          "shape":"InstanceTypes",
          "documentation":"<p>The instance types to exclude from the fleet.</p>"
        },
        "customAmounts":{
          "shape":"CustomFleetAmountCapabilities",
          "documentation":"<p>The custom capability amounts to require for instances in this fleet.</p>"
        },
        "customAttributes":{
          "shape":"CustomFleetAttributeCapabilities",
          "documentation":"<p>The custom capability attributes to require for instances in this fleet.</p>"
        }
      },
      "documentation":"<p>The Amazon EC2 instance capabilities.</p>"
    },
    "ServiceManagedEc2InstanceMarketOptions":{
      "type":"structure",
      "required":["type"],
      "members":{
        "type":{
          "shape":"Ec2MarketType",
          "documentation":"<p>The Amazon EC2 instance type.</p>"
        }
      },
      "documentation":"<p>The details of the Amazon EC2 instance market options for a service managed fleet.</p>"
    },
    "ServiceManagedFleetOperatingSystemFamily":{
      "type":"string",
      "enum":[
        "WINDOWS",
        "LINUX"
      ]
    },
    "ServiceQuotaExceededException":{
      "type":"structure",
      "required":[
        "message",
        "reason",
        "resourceType",
        "serviceCode",
        "quotaCode"
      ],
      "members":{
        "message":{"shape":"String"},
        "reason":{
          "shape":"ServiceQuotaExceededExceptionReason",
          "documentation":"<p>A string that describes the reason the quota was exceeded.</p>"
        },
        "resourceType":{
          "shape":"String",
          "documentation":"<p>The type of the affected resource</p>"
        },
        "serviceCode":{
          "shape":"String",
          "documentation":"<p>Identifies the service that exceeded the quota.</p>"
        },
        "quotaCode":{
          "shape":"String",
          "documentation":"<p>Identifies the quota that has been exceeded.</p>"
        },
        "resourceId":{
          "shape":"String",
          "documentation":"<p>The identifier of the affected resource.</p>"
        },
        "context":{
          "shape":"ExceptionContext",
          "documentation":"<p>Information about the resources in use when the exception was thrown.</p>"
        }
      },
      "documentation":"<p>You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.</p>",
      "error":{
        "httpStatusCode":402,
        "senderFault":true
      },
      "exception":true
    },
    "ServiceQuotaExceededExceptionReason":{
      "type":"string",
      "enum":[
        "SERVICE_QUOTA_EXCEEDED_EXCEPTION",
        "KMS_KEY_LIMIT_EXCEEDED",
        "DEPENDENCY_LIMIT_EXCEEDED"
      ]
    },
    "SessionActionDefinition":{
      "type":"structure",
      "members":{
        "envEnter":{
          "shape":"EnvironmentEnterSessionActionDefinition",
          "documentation":"<p>The environment to enter into.</p>"
        },
        "envExit":{
          "shape":"EnvironmentExitSessionActionDefinition",
          "documentation":"<p>The environment to exit from.</p>"
        },
        "taskRun":{
          "shape":"TaskRunSessionActionDefinition",
          "documentation":"<p>The task run in the session.</p>"
        },
        "syncInputJobAttachments":{
          "shape":"SyncInputJobAttachmentsSessionActionDefinition",
          "documentation":"<p>The job attachments to sync with a session action.</p>"
        }
      },
      "documentation":"<p>The definition of the session action.</p>",
      "union":true
    },
    "SessionActionDefinitionSummary":{
      "type":"structure",
      "members":{
        "envEnter":{
          "shape":"EnvironmentEnterSessionActionDefinitionSummary",
          "documentation":"<p>The environment to enter into.</p>"
        },
        "envExit":{
          "shape":"EnvironmentExitSessionActionDefinitionSummary",
          "documentation":"<p>The environment to exit from.</p>"
        },
        "taskRun":{
          "shape":"TaskRunSessionActionDefinitionSummary",
          "documentation":"<p>The task run.</p>"
        },
        "syncInputJobAttachments":{
          "shape":"SyncInputJobAttachmentsSessionActionDefinitionSummary",
          "documentation":"<p>The job attachments to sync with the session action definition.</p>"
        }
      },
      "documentation":"<p>The details of a session action definition.</p>",
      "union":true
    },
    "SessionActionId":{
      "type":"string",
      "pattern":"sessionaction-[0-9a-f]{32}-(0|([1-9][0-9]{0,9}))"
    },
    "SessionActionIdList":{
      "type":"list",
      "member":{"shape":"SessionActionId"},
      "max":100,
      "min":0
    },
    "SessionActionProgressMessage":{
      "type":"string",
      "max":4096,
      "min":0,
      "sensitive":true
    },
    "SessionActionProgressPercent":{
      "type":"float",
      "box":true,
      "max":100,
      "min":0
    },
    "SessionActionStatus":{
      "type":"string",
      "enum":[
        "ASSIGNED",
        "RUNNING",
        "CANCELING",
        "SUCCEEDED",
        "FAILED",
        "INTERRUPTED",
        "CANCELED",
        "NEVER_ATTEMPTED",
        "SCHEDULED",
        "RECLAIMING",
        "RECLAIMED"
      ]
    },
    "SessionActionSummaries":{
      "type":"list",
      "member":{"shape":"SessionActionSummary"}
    },
    "SessionActionSummary":{
      "type":"structure",
      "required":[
        "sessionActionId",
        "status",
        "definition"
      ],
      "members":{
        "sessionActionId":{
          "shape":"SessionActionId",
          "documentation":"<p>The session action ID.</p>"
        },
        "status":{
          "shape":"SessionActionStatus",
          "documentation":"<p>The status of the session action.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "workerUpdatedAt":{
          "shape":"Timestamp",
          "documentation":"<p>The Linux timestamp of the last date and time that the session action was updated.</p>"
        },
        "progressPercent":{
          "shape":"SessionActionProgressPercent",
          "documentation":"<p>The completion percentage for the session action.</p>"
        },
        "definition":{
          "shape":"SessionActionDefinitionSummary",
          "documentation":"<p>The session action definition.</p>"
        },
        "manifests":{
          "shape":"TaskRunManifestPropertiesListResponse",
          "documentation":"<p>The list of manifest properties that describe file attachments for the task run.</p>"
        }
      },
      "documentation":"<p>The details of a session action.</p>"
    },
    "SessionId":{
      "type":"string",
      "pattern":"session-[0-9a-f]{32}"
    },
    "SessionLifecycleStatus":{
      "type":"string",
      "enum":[
        "STARTED",
        "UPDATE_IN_PROGRESS",
        "UPDATE_SUCCEEDED",
        "UPDATE_FAILED",
        "ENDED"
      ]
    },
    "SessionLifecycleTargetStatus":{
      "type":"string",
      "enum":["ENDED"]
    },
    "SessionSummaries":{
      "type":"list",
      "member":{"shape":"SessionSummary"}
    },
    "SessionSummary":{
      "type":"structure",
      "required":[
        "sessionId",
        "fleetId",
        "workerId",
        "startedAt",
        "lifecycleStatus"
      ],
      "members":{
        "sessionId":{
          "shape":"SessionId",
          "documentation":"<p>The session ID.</p>"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID.</p>"
        },
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "lifecycleStatus":{
          "shape":"SessionLifecycleStatus",
          "documentation":"<p>The life cycle status for the session.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "targetLifecycleStatus":{
          "shape":"SessionLifecycleTargetStatus",
          "documentation":"<p>The target life cycle status for the session.</p>"
        }
      },
      "documentation":"<p>The summary of a session.</p>"
    },
    "SessionToken":{
      "type":"string",
      "sensitive":true
    },
    "SessionsStatisticsAggregationStatus":{
      "type":"string",
      "enum":[
        "IN_PROGRESS",
        "TIMEOUT",
        "FAILED",
        "COMPLETED"
      ]
    },
    "SessionsStatisticsResources":{
      "type":"structure",
      "members":{
        "queueIds":{
          "shape":"SessionsStatisticsResourcesQueueIdsList",
          "documentation":"<p>One to 10 queue IDs that specify the queues to return statistics for. If you specify the <code>queueIds</code> field, you can't specify the <code>fleetIds</code> field.</p>"
        },
        "fleetIds":{
          "shape":"SessionsStatisticsResourcesFleetIdsList",
          "documentation":"<p>One to 10 fleet IDs that specify the fleets to return statistics for. If you specify the <code>fleetIds</code> field, you can't specify the <code>queueIds</code> field.</p>"
        }
      },
      "documentation":"<p>Specifies the fleet IDs or queue IDs to return statistics. You can specify only fleet IDs or queue IDS, not both.</p>",
      "union":true
    },
    "SessionsStatisticsResourcesFleetIdsList":{
      "type":"list",
      "member":{"shape":"FleetId"},
      "max":10,
      "min":1
    },
    "SessionsStatisticsResourcesQueueIdsList":{
      "type":"list",
      "member":{"shape":"QueueId"},
      "max":10,
      "min":1
    },
    "SortOrder":{
      "type":"string",
      "enum":[
        "ASCENDING",
        "DESCENDING"
      ]
    },
    "StartSessionsStatisticsAggregationRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "resourceIds",
        "startTime",
        "endTime",
        "groupBy",
        "statistics"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The identifier of the farm that contains queues or fleets to return statistics for.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "resourceIds":{
          "shape":"SessionsStatisticsResources",
          "documentation":"<p>A list of fleet IDs or queue IDs to gather statistics for.</p>"
        },
        "startTime":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The Linux timestamp of the date and time that the statistics start.</p>"
        },
        "endTime":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The Linux timestamp of the date and time that the statistics end.</p>"
        },
        "timezone":{
          "shape":"Timezone",
          "documentation":"<p>The timezone to use for the statistics. Use UTC notation such as \"UTC+8.\"</p>"
        },
        "period":{
          "shape":"Period",
          "documentation":"<p>The period to aggregate the statistics.</p>"
        },
        "groupBy":{
          "shape":"UsageGroupBy",
          "documentation":"<p>The field to use to group the statistics.</p>"
        },
        "statistics":{
          "shape":"UsageStatistics",
          "documentation":"<p>One to four statistics to return.</p>"
        }
      }
    },
    "StartSessionsStatisticsAggregationResponse":{
      "type":"structure",
      "required":["aggregationId"],
      "members":{
        "aggregationId":{
          "shape":"AggregationId",
          "documentation":"<p>A unique identifier for the aggregated statistics. Use this identifier with the <code>GetAggregatedStatisticsForSessions</code> operation to return the statistics.</p>"
        }
      }
    },
    "StartedAt":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "StartsAt":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "Statistics":{
      "type":"structure",
      "required":[
        "count",
        "costInUsd",
        "runtimeInSeconds"
      ],
      "members":{
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID.</p>"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "jobName":{
          "shape":"JobName",
          "documentation":"<p>The job name.</p>"
        },
        "userId":{
          "shape":"UserId",
          "documentation":"<p>The user ID.</p>"
        },
        "usageType":{
          "shape":"UsageType",
          "documentation":"<p>The type of usage for the statistics.</p>"
        },
        "licenseProduct":{
          "shape":"LicenseProduct",
          "documentation":"<p>The licensed product.</p>"
        },
        "instanceType":{
          "shape":"InstanceType",
          "documentation":"<p>The type of instance.</p>"
        },
        "count":{
          "shape":"Integer",
          "documentation":"<p>The number of instances in a list of statistics.</p>"
        },
        "costInUsd":{
          "shape":"Stats",
          "documentation":"<p>How the statistics should appear in USD. Options include: minimum, maximum, average or sum.</p>"
        },
        "runtimeInSeconds":{
          "shape":"Stats",
          "documentation":"<p>The total aggregated runtime.</p>"
        },
        "aggregationStartTime":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The start time for the aggregation.</p>"
        },
        "aggregationEndTime":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The end time for the aggregation.</p>"
        }
      },
      "documentation":"<p>A list of statistics for a session.</p>"
    },
    "StatisticsList":{
      "type":"list",
      "member":{"shape":"Statistics"}
    },
    "Stats":{
      "type":"structure",
      "members":{
        "min":{
          "shape":"Double",
          "documentation":"<p>The minimum of the usage statistics.</p>"
        },
        "max":{
          "shape":"Double",
          "documentation":"<p>The maximum among the usage statistics.</p>"
        },
        "avg":{
          "shape":"Double",
          "documentation":"<p>The average of the usage statistics.</p>"
        },
        "sum":{
          "shape":"Double",
          "documentation":"<p>The sum of the usage statistics.</p>"
        }
      },
      "documentation":"<p>The minimum, maximum, average, and sum.</p>"
    },
    "StatusMessage":{
      "type":"string",
      "max":1024,
      "min":0
    },
    "StepAmountCapabilities":{
      "type":"list",
      "member":{"shape":"StepAmountCapability"},
      "max":25,
      "min":1
    },
    "StepAmountCapability":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{
          "shape":"AmountCapabilityName",
          "documentation":"<p>The name of the step.</p>"
        },
        "min":{
          "shape":"Double",
          "documentation":"<p>The minimum amount.</p>"
        },
        "max":{
          "shape":"Double",
          "documentation":"<p>The maximum amount.</p>"
        },
        "value":{
          "shape":"Double",
          "documentation":"<p>The amount value.</p>"
        }
      },
      "documentation":"<p>The details outlining the minimum and maximum capability of a step.</p>"
    },
    "StepAttributeCapabilities":{
      "type":"list",
      "member":{"shape":"StepAttributeCapability"},
      "max":25,
      "min":1
    },
    "StepAttributeCapability":{
      "type":"structure",
      "required":["name"],
      "members":{
        "name":{
          "shape":"AttributeCapabilityName",
          "documentation":"<p>The name of the step attribute.</p>"
        },
        "anyOf":{
          "shape":"ListAttributeCapabilityValue",
          "documentation":"<p>Requires any of the step attributes in a given list.</p>"
        },
        "allOf":{
          "shape":"ListAttributeCapabilityValue",
          "documentation":"<p>Requires all of the step attribute values.</p>"
        }
      },
      "documentation":"<p>The list of step attributes.</p>"
    },
    "StepConsumer":{
      "type":"structure",
      "required":[
        "stepId",
        "status"
      ],
      "members":{
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        },
        "status":{
          "shape":"DependencyConsumerResolutionStatus",
          "documentation":"<p>The step consumer status.</p>"
        }
      },
      "documentation":"<p>The details of a step consumer.</p>"
    },
    "StepConsumers":{
      "type":"list",
      "member":{"shape":"StepConsumer"}
    },
    "StepDependencies":{
      "type":"list",
      "member":{"shape":"StepDependency"}
    },
    "StepDependency":{
      "type":"structure",
      "required":[
        "stepId",
        "status"
      ],
      "members":{
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        },
        "status":{
          "shape":"DependencyConsumerResolutionStatus",
          "documentation":"<p>The step dependency status.</p>"
        }
      },
      "documentation":"<p>The details of step dependency.</p>"
    },
    "StepDescription":{
      "type":"string",
      "max":2048,
      "min":1,
      "sensitive":true
    },
    "StepDetailsEntity":{
      "type":"structure",
      "required":[
        "jobId",
        "stepId",
        "schemaVersion",
        "template",
        "dependencies"
      ],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        },
        "schemaVersion":{
          "shape":"String",
          "documentation":"<p>The schema version for a step template.</p>"
        },
        "template":{
          "shape":"Document",
          "documentation":"<p>The template for a step.</p>"
        },
        "dependencies":{
          "shape":"DependenciesList",
          "documentation":"<p>The dependencies for a step.</p>"
        }
      },
      "documentation":"<p>The details of a step entity.</p>"
    },
    "StepDetailsError":{
      "type":"structure",
      "required":[
        "jobId",
        "stepId",
        "code",
        "message"
      ],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        },
        "code":{
          "shape":"JobEntityErrorCode",
          "documentation":"<p>The error code.</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>The error message detailing the error's cause.</p>"
        }
      },
      "documentation":"<p>The details of the step error.</p>"
    },
    "StepDetailsIdentifiers":{
      "type":"structure",
      "required":[
        "jobId",
        "stepId"
      ],
      "members":{
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        }
      },
      "documentation":"<p>The details of identifiers for a step.</p>"
    },
    "StepId":{
      "type":"string",
      "pattern":"step-[0-9a-f]{32}"
    },
    "StepLifecycleStatus":{
      "type":"string",
      "enum":[
        "CREATE_COMPLETE",
        "UPDATE_IN_PROGRESS",
        "UPDATE_FAILED",
        "UPDATE_SUCCEEDED"
      ]
    },
    "StepName":{
      "type":"string",
      "max":64,
      "min":1
    },
    "StepParameter":{
      "type":"structure",
      "required":[
        "name",
        "type"
      ],
      "members":{
        "name":{
          "shape":"StepParameterName",
          "documentation":"<p>The name of the parameter.</p>"
        },
        "type":{
          "shape":"StepParameterType",
          "documentation":"<p>The data type of the parameter.</p>"
        }
      },
      "documentation":"<p>The details of a step parameter.</p>"
    },
    "StepParameterList":{
      "type":"list",
      "member":{"shape":"StepParameter"}
    },
    "StepParameterName":{
      "type":"string",
      "max":64,
      "min":1
    },
    "StepParameterType":{
      "type":"string",
      "enum":[
        "INT",
        "FLOAT",
        "STRING",
        "PATH",
        "CHUNK_INT"
      ]
    },
    "StepRequiredCapabilities":{
      "type":"structure",
      "required":[
        "attributes",
        "amounts"
      ],
      "members":{
        "attributes":{
          "shape":"StepAttributeCapabilities",
          "documentation":"<p>The capability attributes that the step requires.</p>"
        },
        "amounts":{
          "shape":"StepAmountCapabilities",
          "documentation":"<p>The capability amounts that the step requires.</p>"
        }
      },
      "documentation":"<p>The details of required step capabilities.</p>"
    },
    "StepSearchSummaries":{
      "type":"list",
      "member":{"shape":"StepSearchSummary"}
    },
    "StepSearchSummary":{
      "type":"structure",
      "members":{
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>"
        },
        "name":{
          "shape":"StepName",
          "documentation":"<p>The step name.</p>"
        },
        "lifecycleStatus":{
          "shape":"StepLifecycleStatus",
          "documentation":"<p>The life cycle status.</p>"
        },
        "lifecycleStatusMessage":{
          "shape":"String",
          "documentation":"<p>The life cycle status message.</p>"
        },
        "taskRunStatus":{
          "shape":"TaskRunStatus",
          "documentation":"<p>The task run status for the job.</p> <ul> <li> <p> <code>PENDING</code>–pending and waiting for resources.</p> </li> <li> <p> <code>READY</code>–ready to be processed.</p> </li> <li> <p> <code>ASSIGNED</code>–assigned and will run next on a worker.</p> </li> <li> <p> <code>SCHEDULED</code>–scheduled to be run on a worker.</p> </li> <li> <p> <code>INTERRUPTING</code>–being interrupted.</p> </li> <li> <p> <code>RUNNING</code>–running on a worker.</p> </li> <li> <p> <code>SUSPENDED</code>–the task is suspended.</p> </li> <li> <p> <code>CANCELED</code>–the task has been canceled.</p> </li> <li> <p> <code>FAILED</code>–the task has failed.</p> </li> <li> <p> <code>SUCCEEDED</code>–the task has succeeded.</p> </li> </ul>"
        },
        "targetTaskRunStatus":{
          "shape":"StepTargetTaskRunStatus",
          "documentation":"<p>The task status to start with on the job.</p>"
        },
        "taskRunStatusCounts":{
          "shape":"TaskRunStatusCounts",
          "documentation":"<p>The number of tasks running on the job.</p>"
        },
        "taskFailureRetryCount":{
          "shape":"TaskFailureRetryCount",
          "documentation":"<p>The total number of times tasks from the step failed and were retried.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "parameterSpace":{
          "shape":"ParameterSpace",
          "documentation":"<p>The parameters and combination expressions for the search.</p>"
        }
      },
      "documentation":"<p>The details of a step search.</p>"
    },
    "StepSummaries":{
      "type":"list",
      "member":{"shape":"StepSummary"}
    },
    "StepSummary":{
      "type":"structure",
      "required":[
        "stepId",
        "name",
        "lifecycleStatus",
        "taskRunStatus",
        "taskRunStatusCounts",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        },
        "name":{
          "shape":"StepName",
          "documentation":"<p>The name of the step.</p>"
        },
        "lifecycleStatus":{
          "shape":"StepLifecycleStatus",
          "documentation":"<p>The life cycle status.</p>"
        },
        "lifecycleStatusMessage":{
          "shape":"String",
          "documentation":"<p>A message that describes the lifecycle of the step.</p>"
        },
        "taskRunStatus":{
          "shape":"TaskRunStatus",
          "documentation":"<p>The task run status for the job.</p> <ul> <li> <p> <code>PENDING</code>–pending and waiting for resources.</p> </li> <li> <p> <code>READY</code>–ready to process.</p> </li> <li> <p> <code>ASSIGNED</code>–assigned and will run next on a worker.</p> </li> <li> <p> <code>SCHEDULED</code>–scheduled to run on a worker.</p> </li> <li> <p> <code>INTERRUPTING</code>–being interrupted.</p> </li> <li> <p> <code>RUNNING</code>–running on a worker.</p> </li> <li> <p> <code>SUSPENDED</code>–the task is suspended.</p> </li> <li> <p> <code>CANCELED</code>–the task has been canceled.</p> </li> <li> <p> <code>FAILED</code>–the task has failed.</p> </li> <li> <p> <code>SUCCEEDED</code>–the task has succeeded.</p> </li> </ul>"
        },
        "taskRunStatusCounts":{
          "shape":"TaskRunStatusCounts",
          "documentation":"<p>The number of tasks running on the job.</p>"
        },
        "taskFailureRetryCount":{
          "shape":"TaskFailureRetryCount",
          "documentation":"<p>The total number of times tasks from the step failed and were retried.</p>"
        },
        "targetTaskRunStatus":{
          "shape":"StepTargetTaskRunStatus",
          "documentation":"<p>The task status to start with on the job.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "dependencyCounts":{
          "shape":"DependencyCounts",
          "documentation":"<p>The number of dependencies for the step.</p>"
        }
      },
      "documentation":"<p>The details for a step.</p>"
    },
    "StepTargetTaskRunStatus":{
      "type":"string",
      "enum":[
        "READY",
        "FAILED",
        "SUCCEEDED",
        "CANCELED",
        "SUSPENDED",
        "PENDING"
      ]
    },
    "StorageProfileId":{
      "type":"string",
      "pattern":"sp-[0-9a-f]{32}"
    },
    "StorageProfileOperatingSystemFamily":{
      "type":"string",
      "enum":[
        "WINDOWS",
        "LINUX",
        "MACOS"
      ]
    },
    "StorageProfileSummaries":{
      "type":"list",
      "member":{"shape":"StorageProfileSummary"}
    },
    "StorageProfileSummary":{
      "type":"structure",
      "required":[
        "storageProfileId",
        "displayName",
        "osFamily"
      ],
      "members":{
        "storageProfileId":{
          "shape":"StorageProfileId",
          "documentation":"<p>The storage profile ID.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the storage profile summary to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "osFamily":{
          "shape":"StorageProfileOperatingSystemFamily",
          "documentation":"<p>The operating system (OS) family.</p>"
        }
      },
      "documentation":"<p>The details of a storage profile.</p>"
    },
    "String":{"type":"string"},
    "StringFilter":{
      "type":"string",
      "max":256,
      "min":1
    },
    "StringFilterExpression":{
      "type":"structure",
      "required":[
        "name",
        "operator",
        "value"
      ],
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The field name to search.</p>"
        },
        "operator":{
          "shape":"ComparisonOperator",
          "documentation":"<p>The type of comparison to use for this search.</p>"
        },
        "value":{
          "shape":"StringFilter",
          "documentation":"<p>The string to search for.</p>"
        }
      },
      "documentation":"<p>Searches for a particular string.</p>"
    },
    "StringList":{
      "type":"list",
      "member":{"shape":"String"}
    },
    "Subdomain":{
      "type":"string",
      "pattern":"[a-z0-9-]{1,100}"
    },
    "SubnetId":{
      "type":"string",
      "max":32,
      "min":1,
      "pattern":"subnet-[\\w]{1,120}"
    },
    "SyncInputJobAttachmentsSessionActionDefinition":{
      "type":"structure",
      "members":{
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID for the step in the job attachment.</p>"
        }
      },
      "documentation":"<p>The job attachment in a session action to sync.</p>"
    },
    "SyncInputJobAttachmentsSessionActionDefinitionSummary":{
      "type":"structure",
      "members":{
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID of the step in the job attachment.</p>"
        }
      },
      "documentation":"<p>The details of a synced job attachment.</p>"
    },
    "SyntheticTimestamp_date_time":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "TagPropagationMode":{
      "type":"string",
      "enum":[
        "NO_PROPAGATION",
        "PROPAGATE_TAGS_TO_WORKERS_AT_LAUNCH"
      ]
    },
    "TagResourceRequest":{
      "type":"structure",
      "required":["resourceArn"],
      "members":{
        "resourceArn":{
          "shape":"String",
          "documentation":"<p>The ARN of the resource to apply tags to.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tags":{
          "shape":"Tags",
          "documentation":"<p>Each tag consists of a tag key and a tag value. Tag keys and values are both required, but tag values can be empty strings.</p>"
        }
      }
    },
    "TagResourceResponse":{
      "type":"structure",
      "members":{
      }
    },
    "Tags":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "TaskFailureRetryCount":{
      "type":"integer",
      "box":true,
      "max":2147483647,
      "min":0
    },
    "TaskId":{
      "type":"string",
      "pattern":"task-[0-9a-f]{32}-(0|([1-9][0-9]{0,9}))"
    },
    "TaskParameterValue":{
      "type":"structure",
      "members":{
        "int":{
          "shape":"IntString",
          "documentation":"<p>A signed integer represented as a string.</p>"
        },
        "float":{
          "shape":"FloatString",
          "documentation":"<p>A double precision IEEE-754 floating point number represented as a string.</p>"
        },
        "string":{
          "shape":"ParameterString",
          "documentation":"<p>A UTF-8 string.</p>"
        },
        "path":{
          "shape":"PathString",
          "documentation":"<p>A file system path represented as a string.</p>"
        },
        "chunkInt":{
          "shape":"String",
          "documentation":"<p>A range (for example 1-10) or selection of specific (for example 1,3,7,8,10) integers represented as a string.</p>"
        }
      },
      "documentation":"<p>The data types for the task parameters.</p>",
      "sensitive":true,
      "union":true
    },
    "TaskParameters":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"TaskParameterValue"},
      "sensitive":true
    },
    "TaskRetryCount":{
      "type":"integer",
      "box":true,
      "max":2147483647,
      "min":0
    },
    "TaskRunManifestPropertiesListRequest":{
      "type":"list",
      "member":{"shape":"TaskRunManifestPropertiesRequest"},
      "max":10,
      "min":0
    },
    "TaskRunManifestPropertiesListResponse":{
      "type":"list",
      "member":{"shape":"TaskRunManifestPropertiesResponse"}
    },
    "TaskRunManifestPropertiesRequest":{
      "type":"structure",
      "members":{
        "outputManifestPath":{
          "shape":"TaskRunManifestPropertiesRequestOutputManifestPathString",
          "documentation":"<p>The manifest file path.</p>"
        },
        "outputManifestHash":{
          "shape":"TaskRunManifestPropertiesRequestOutputManifestHashString",
          "documentation":"<p>The hash value of the file.</p>"
        }
      },
      "documentation":"<p>The output manifest properties reported by the worker agent for a completed task run.</p>"
    },
    "TaskRunManifestPropertiesRequestOutputManifestHashString":{
      "type":"string",
      "max":256,
      "min":1
    },
    "TaskRunManifestPropertiesRequestOutputManifestPathString":{
      "type":"string",
      "max":512,
      "min":1
    },
    "TaskRunManifestPropertiesResponse":{
      "type":"structure",
      "members":{
        "outputManifestPath":{
          "shape":"String",
          "documentation":"<p>The manifest file path.</p>"
        },
        "outputManifestHash":{
          "shape":"String",
          "documentation":"<p>The hash value of the file.</p>"
        }
      },
      "documentation":"<p>The manifest properties for a task run, corresponding to the manifest properties in the job.</p>"
    },
    "TaskRunSessionActionDefinition":{
      "type":"structure",
      "required":[
        "stepId",
        "parameters"
      ],
      "members":{
        "taskId":{
          "shape":"TaskId",
          "documentation":"<p>The task ID.</p>"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        },
        "parameters":{
          "shape":"TaskParameters",
          "documentation":"<p>The task parameters.</p>"
        }
      },
      "documentation":"<p>The task, step, and parameters for the task run in the session action.</p>"
    },
    "TaskRunSessionActionDefinitionSummary":{
      "type":"structure",
      "required":["stepId"],
      "members":{
        "taskId":{
          "shape":"TaskId",
          "documentation":"<p>The task ID.</p>"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        },
        "parameters":{
          "shape":"TaskParameters",
          "documentation":"<p>The parameters of a task run in a session action.</p>"
        }
      },
      "documentation":"<p>The details of a task run in a session action.</p>"
    },
    "TaskRunStatus":{
      "type":"string",
      "enum":[
        "PENDING",
        "READY",
        "ASSIGNED",
        "STARTING",
        "SCHEDULED",
        "INTERRUPTING",
        "RUNNING",
        "SUSPENDED",
        "CANCELED",
        "FAILED",
        "SUCCEEDED",
        "NOT_COMPATIBLE"
      ]
    },
    "TaskRunStatusCounts":{
      "type":"map",
      "key":{"shape":"TaskRunStatus"},
      "value":{"shape":"Integer"}
    },
    "TaskSearchSummaries":{
      "type":"list",
      "member":{"shape":"TaskSearchSummary"}
    },
    "TaskSearchSummary":{
      "type":"structure",
      "members":{
        "taskId":{
          "shape":"TaskId",
          "documentation":"<p>The task ID.</p>"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID.</p>"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID.</p>"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>"
        },
        "runStatus":{
          "shape":"TaskRunStatus",
          "documentation":"<p>The run status of the task.</p>"
        },
        "targetRunStatus":{
          "shape":"TaskTargetRunStatus",
          "documentation":"<p>The run status that the task is being updated to.</p>"
        },
        "parameters":{
          "shape":"TaskParameters",
          "documentation":"<p>The parameters to search for.</p>"
        },
        "failureRetryCount":{
          "shape":"TaskRetryCount",
          "documentation":"<p>The number of times that the task failed and was retried.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        }
      },
      "documentation":"<p>The details of a task search.</p>"
    },
    "TaskSummaries":{
      "type":"list",
      "member":{"shape":"TaskSummary"}
    },
    "TaskSummary":{
      "type":"structure",
      "required":[
        "taskId",
        "createdAt",
        "createdBy",
        "runStatus"
      ],
      "members":{
        "taskId":{
          "shape":"TaskId",
          "documentation":"<p>The task ID.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "runStatus":{
          "shape":"TaskRunStatus",
          "documentation":"<p>The run status of the task.</p>"
        },
        "targetRunStatus":{
          "shape":"TaskTargetRunStatus",
          "documentation":"<p>The run status on which the started.</p>"
        },
        "failureRetryCount":{
          "shape":"TaskRetryCount",
          "documentation":"<p>The number of times that the task failed and was retried.</p>"
        },
        "parameters":{
          "shape":"TaskParameters",
          "documentation":"<p>The task parameters.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "latestSessionActionId":{
          "shape":"SessionActionId",
          "documentation":"<p>The latest session action for the task.</p>"
        }
      },
      "documentation":"<p>The details of a task.</p>"
    },
    "TaskTargetRunStatus":{
      "type":"string",
      "enum":[
        "READY",
        "FAILED",
        "SUCCEEDED",
        "CANCELED",
        "SUSPENDED",
        "PENDING"
      ]
    },
    "ThresholdPercentage":{
      "type":"float",
      "box":true,
      "max":100,
      "min":0
    },
    "ThrottlingException":{
      "type":"structure",
      "required":["message"],
      "members":{
        "message":{"shape":"String"},
        "serviceCode":{
          "shape":"String",
          "documentation":"<p>Identifies the service that is being throttled.</p>"
        },
        "quotaCode":{
          "shape":"String",
          "documentation":"<p>Identifies the quota that is being throttled.</p>"
        },
        "retryAfterSeconds":{
          "shape":"Integer",
          "documentation":"<p>The number of seconds a client should wait before retrying the request.</p>",
          "location":"header",
          "locationName":"Retry-After"
        },
        "context":{
          "shape":"ExceptionContext",
          "documentation":"<p>Information about the resources in use when the exception was thrown.</p>"
        }
      },
      "documentation":"<p>Your request exceeded a request rate quota.</p>",
      "error":{
        "httpStatusCode":429,
        "senderFault":true
      },
      "exception":true,
      "retryable":{"throttling":true}
    },
    "Timestamp":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "Timezone":{
      "type":"string",
      "max":9,
      "min":9,
      "pattern":"UTC[-+][01][0-9]:(30|00)"
    },
    "TotalResults":{
      "type":"integer",
      "box":true,
      "max":10000,
      "min":0
    },
    "UntagResourceRequest":{
      "type":"structure",
      "required":[
        "resourceArn",
        "tagKeys"
      ],
      "members":{
        "resourceArn":{
          "shape":"String",
          "documentation":"<p>The ARN of the resource to remove the tag from.</p>",
          "location":"uri",
          "locationName":"resourceArn"
        },
        "tagKeys":{
          "shape":"StringList",
          "documentation":"<p>They keys of the tag.</p>",
          "location":"querystring",
          "locationName":"tagKeys"
        }
      }
    },
    "UntagResourceResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateBudgetRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "budgetId"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the budget to update.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "budgetId":{
          "shape":"BudgetId",
          "documentation":"<p>The budget ID to update.</p>",
          "location":"uri",
          "locationName":"budgetId"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the budget to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the budget to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "status":{
          "shape":"BudgetStatus",
          "documentation":"<p>Updates the status of the budget.</p> <ul> <li> <p> <code>ACTIVE</code>–The budget is being evaluated.</p> </li> <li> <p> <code>INACTIVE</code>–The budget is inactive. This can include Expired, Canceled, or deleted Deleted statuses.</p> </li> </ul>"
        },
        "approximateDollarLimit":{
          "shape":"ConsumedUsageLimit",
          "documentation":"<p>The dollar limit to update on the budget. Based on consumed usage.</p>"
        },
        "actionsToAdd":{
          "shape":"BudgetActionsToAdd",
          "documentation":"<p>The budget actions to add. Budget actions specify what happens when the budget runs out.</p>"
        },
        "actionsToRemove":{
          "shape":"BudgetActionsToRemove",
          "documentation":"<p>The budget actions to remove from the budget.</p>"
        },
        "schedule":{
          "shape":"BudgetSchedule",
          "documentation":"<p>The schedule to update.</p>"
        }
      }
    },
    "UpdateBudgetResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateFarmRequest":{
      "type":"structure",
      "required":["farmId"],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to update.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the farm to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the farm to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        }
      }
    },
    "UpdateFarmResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateFleetRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to update.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID to update.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the fleet to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the fleet to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "roleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The IAM role ARN that the fleet's workers assume while running jobs.</p>"
        },
        "minWorkerCount":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The minimum number of workers in the fleet.</p>"
        },
        "maxWorkerCount":{
          "shape":"MinZeroMaxInteger",
          "documentation":"<p>The maximum number of workers in the fleet.</p> <p>Deadline Cloud limits the number of workers to less than or equal to the fleet's maximum worker count. The service maintains eventual consistency for the worker count. If you make multiple rapid calls to <code>CreateWorker</code> before the field updates, you might exceed your fleet's maximum worker count. For example, if your <code>maxWorkerCount</code> is 10 and you currently have 9 workers, making two quick <code>CreateWorker</code> calls might successfully create 2 workers instead of 1, resulting in 11 total workers.</p>"
        },
        "configuration":{
          "shape":"FleetConfiguration",
          "documentation":"<p>The fleet configuration to update.</p>"
        },
        "hostConfiguration":{
          "shape":"HostConfiguration",
          "documentation":"<p>Provides a script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet.</p>"
        }
      }
    },
    "UpdateFleetResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateJobLifecycleStatus":{
      "type":"string",
      "enum":["ARCHIVED"]
    },
    "UpdateJobRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "jobId"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "targetTaskRunStatus":{
          "shape":"JobTargetTaskRunStatus",
          "documentation":"<p>The task status to update the job's tasks to.</p>"
        },
        "priority":{
          "shape":"JobPriority",
          "documentation":"<p>The job priority to update.</p>"
        },
        "maxFailedTasksCount":{
          "shape":"MaxFailedTasksCount",
          "documentation":"<p>The number of task failures before the job stops running and is marked as <code>FAILED</code>.</p>"
        },
        "maxRetriesPerTask":{
          "shape":"MaxRetriesPerTask",
          "documentation":"<p>The maximum number of retries for a job.</p>"
        },
        "lifecycleStatus":{
          "shape":"UpdateJobLifecycleStatus",
          "documentation":"<p>The status of a job in its lifecycle. When you change the status of the job to <code>ARCHIVED</code>, the job can't be scheduled or archived.</p> <important> <p>An archived jobs and its steps and tasks are deleted after 120 days. The job can't be recovered.</p> </important>"
        },
        "maxWorkerCount":{
          "shape":"MaxWorkerCount",
          "documentation":"<p>The maximum number of worker hosts that can concurrently process a job. When the <code>maxWorkerCount</code> is reached, no more workers will be assigned to process the job, even if the fleets assigned to the job's queue has available workers.</p> <p>You can't set the <code>maxWorkerCount</code> to 0. If you set it to -1, there is no maximum number of workers.</p> <p>If you don't specify the <code>maxWorkerCount</code>, the default is -1.</p> <p>The maximum number of workers that can process tasks in the job.</p>"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the job to update.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID of the job to update.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID to update.</p>",
          "location":"uri",
          "locationName":"jobId"
        }
      }
    },
    "UpdateJobResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateLimitRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "limitId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The unique identifier of the farm that contains the limit.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>The unique identifier of the limit to update.</p>",
          "location":"uri",
          "locationName":"limitId"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The new display name of the limit.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The new description of the limit.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "maxCount":{
          "shape":"MaxCount",
          "documentation":"<p>The maximum number of resources constrained by this limit. When all of the resources are in use, steps that require the limit won't be scheduled until the resource is available.</p> <p>If more than the new maximum number is currently in use, running jobs finish but no new jobs are started until the number of resources in use is below the new maximum number.</p> <p>The <code>maxCount</code> must not be 0. If the value is -1, there is no restriction on the number of resources that can be acquired for this limit.</p>"
        }
      }
    },
    "UpdateLimitResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateMonitorRequest":{
      "type":"structure",
      "required":["monitorId"],
      "members":{
        "monitorId":{
          "shape":"MonitorId",
          "documentation":"<p>The unique identifier of the monitor to update.</p>",
          "location":"uri",
          "locationName":"monitorId"
        },
        "subdomain":{
          "shape":"Subdomain",
          "documentation":"<p>The new value of the subdomain to use when forming the monitor URL.</p>"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The new value to use for the monitor's display name.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "roleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The Amazon Resource Name (ARN) of the new IAM role to use with the monitor.</p>"
        }
      }
    },
    "UpdateMonitorResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateQueueEnvironmentRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "queueEnvironmentId"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID of the queue environment to update.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID of the queue environment to update.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "queueEnvironmentId":{
          "shape":"QueueEnvironmentId",
          "documentation":"<p>The queue environment ID to update.</p>",
          "location":"uri",
          "locationName":"queueEnvironmentId"
        },
        "priority":{
          "shape":"Priority",
          "documentation":"<p>The priority to update.</p>"
        },
        "templateType":{
          "shape":"EnvironmentTemplateType",
          "documentation":"<p>The template type to update.</p>"
        },
        "template":{
          "shape":"EnvironmentTemplate",
          "documentation":"<p>The template to update.</p>"
        }
      }
    },
    "UpdateQueueEnvironmentResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateQueueFleetAssociationRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "fleetId",
        "status"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to update.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID to update.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID to update.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "status":{
          "shape":"UpdateQueueFleetAssociationStatus",
          "documentation":"<p>The status to update.</p>"
        }
      }
    },
    "UpdateQueueFleetAssociationResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateQueueFleetAssociationStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "STOP_SCHEDULING_AND_COMPLETE_TASKS",
        "STOP_SCHEDULING_AND_CANCEL_TASKS"
      ]
    },
    "UpdateQueueLimitAssociationRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId",
        "limitId",
        "status"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The unique identifier of the farm that contains the associated queues and limits.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The unique identifier of the queue associated to the limit.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "limitId":{
          "shape":"LimitId",
          "documentation":"<p>The unique identifier of the limit associated to the queue.</p>",
          "location":"uri",
          "locationName":"limitId"
        },
        "status":{
          "shape":"UpdateQueueLimitAssociationStatus",
          "documentation":"<p>Sets the status of the limit. You can mark the limit active, or you can stop usage of the limit and either complete existing tasks or cancel any existing tasks immediately. </p>"
        }
      }
    },
    "UpdateQueueLimitAssociationResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateQueueLimitAssociationStatus":{
      "type":"string",
      "enum":[
        "ACTIVE",
        "STOP_LIMIT_USAGE_AND_COMPLETE_TASKS",
        "STOP_LIMIT_USAGE_AND_CANCEL_TASKS"
      ]
    },
    "UpdateQueueRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "queueId"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The idempotency token to update in the queue.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to update in the queue.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID to update.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the queue to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "description":{
          "shape":"Description",
          "documentation":"<p>The description of the queue to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "defaultBudgetAction":{
          "shape":"DefaultQueueBudgetAction",
          "documentation":"<p>The default action to take for a queue update if a budget isn't configured.</p>"
        },
        "jobAttachmentSettings":{
          "shape":"JobAttachmentSettings",
          "documentation":"<p>The job attachment settings to update for the queue.</p>"
        },
        "roleArn":{
          "shape":"IamRoleArn",
          "documentation":"<p>The IAM role ARN that's used to run jobs from this queue.</p>"
        },
        "jobRunAsUser":{
          "shape":"JobRunAsUser",
          "documentation":"<p>Update the jobs in the queue to run as a specified POSIX user.</p>"
        },
        "requiredFileSystemLocationNamesToAdd":{
          "shape":"RequiredFileSystemLocationNames",
          "documentation":"<p>The required file system location names to add to the queue.</p>"
        },
        "requiredFileSystemLocationNamesToRemove":{
          "shape":"RequiredFileSystemLocationNames",
          "documentation":"<p>The required file system location names to remove from the queue.</p>"
        },
        "allowedStorageProfileIdsToAdd":{
          "shape":"AllowedStorageProfileIds",
          "documentation":"<p>The storage profile IDs to add.</p>"
        },
        "allowedStorageProfileIdsToRemove":{
          "shape":"AllowedStorageProfileIds",
          "documentation":"<p>The storage profile ID to remove.</p>"
        }
      }
    },
    "UpdateQueueResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateSessionRequest":{
      "type":"structure",
      "required":[
        "targetLifecycleStatus",
        "farmId",
        "queueId",
        "jobId",
        "sessionId"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "targetLifecycleStatus":{
          "shape":"SessionLifecycleTargetStatus",
          "documentation":"<p>The life cycle status to update in the session.</p>"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to update in the session.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID to update in the session.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID to update in the session.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "sessionId":{
          "shape":"SessionId",
          "documentation":"<p>The session ID to update.</p>",
          "location":"uri",
          "locationName":"sessionId"
        }
      }
    },
    "UpdateSessionResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateStepRequest":{
      "type":"structure",
      "required":[
        "targetTaskRunStatus",
        "farmId",
        "queueId",
        "jobId",
        "stepId"
      ],
      "members":{
        "targetTaskRunStatus":{
          "shape":"StepTargetTaskRunStatus",
          "documentation":"<p>The task status to update the step's tasks to.</p>"
        },
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to update.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID to update.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID to update.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID to update.</p>",
          "location":"uri",
          "locationName":"stepId"
        }
      }
    },
    "UpdateStepResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateStorageProfileRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "storageProfileId"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to update.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "storageProfileId":{
          "shape":"StorageProfileId",
          "documentation":"<p>The storage profile ID to update.</p>",
          "location":"uri",
          "locationName":"storageProfileId"
        },
        "displayName":{
          "shape":"ResourceName",
          "documentation":"<p>The display name of the storage profile to update.</p> <important> <p>This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.</p> </important>"
        },
        "osFamily":{
          "shape":"StorageProfileOperatingSystemFamily",
          "documentation":"<p>The OS system to update.</p>"
        },
        "fileSystemLocationsToAdd":{
          "shape":"FileSystemLocationsList",
          "documentation":"<p>The file system location names to add.</p>"
        },
        "fileSystemLocationsToRemove":{
          "shape":"FileSystemLocationsList",
          "documentation":"<p>The file system location names to remove.</p>"
        }
      }
    },
    "UpdateStorageProfileResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateTaskRequest":{
      "type":"structure",
      "required":[
        "targetRunStatus",
        "farmId",
        "queueId",
        "jobId",
        "stepId",
        "taskId"
      ],
      "members":{
        "clientToken":{
          "shape":"ClientToken",
          "documentation":"<p>The unique token which the server uses to recognize retries of the same request.</p>",
          "idempotencyToken":true,
          "location":"header",
          "locationName":"X-Amz-Client-Token"
        },
        "targetRunStatus":{
          "shape":"TaskTargetRunStatus",
          "documentation":"<p>The run status with which to start the task.</p>"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to update.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID to update.</p>",
          "location":"uri",
          "locationName":"queueId"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID to update.</p>",
          "location":"uri",
          "locationName":"jobId"
        },
        "stepId":{
          "shape":"StepId",
          "documentation":"<p>The step ID to update.</p>",
          "location":"uri",
          "locationName":"stepId"
        },
        "taskId":{
          "shape":"TaskId",
          "documentation":"<p>The task ID to update.</p>",
          "location":"uri",
          "locationName":"taskId"
        }
      }
    },
    "UpdateTaskResponse":{
      "type":"structure",
      "members":{
      }
    },
    "UpdateWorkerRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId",
        "workerId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to update.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID to update.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID to update.</p>",
          "location":"uri",
          "locationName":"workerId"
        },
        "status":{
          "shape":"UpdatedWorkerStatus",
          "documentation":"<p>The worker status to update.</p>"
        },
        "capabilities":{
          "shape":"WorkerCapabilities",
          "documentation":"<p>The worker capabilities to update.</p>"
        },
        "hostProperties":{
          "shape":"HostPropertiesRequest",
          "documentation":"<p>The host properties to update.</p>"
        }
      }
    },
    "UpdateWorkerResponse":{
      "type":"structure",
      "members":{
        "log":{
          "shape":"LogConfiguration",
          "documentation":"<p>The worker log to update.</p>"
        },
        "hostConfiguration":{
          "shape":"HostConfiguration",
          "documentation":"<p>The script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet.</p>"
        }
      }
    },
    "UpdateWorkerScheduleInterval":{
      "type":"integer",
      "box":true,
      "min":0
    },
    "UpdateWorkerScheduleRequest":{
      "type":"structure",
      "required":[
        "farmId",
        "fleetId",
        "workerId"
      ],
      "members":{
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID to update.</p>",
          "location":"uri",
          "locationName":"farmId"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID to update.</p>",
          "location":"uri",
          "locationName":"fleetId"
        },
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID to update.</p>",
          "location":"uri",
          "locationName":"workerId"
        },
        "updatedSessionActions":{
          "shape":"UpdatedSessionActions",
          "documentation":"<p>The session actions associated with the worker schedule to update.</p>"
        }
      }
    },
    "UpdateWorkerScheduleResponse":{
      "type":"structure",
      "required":[
        "assignedSessions",
        "cancelSessionActions",
        "updateIntervalSeconds"
      ],
      "members":{
        "assignedSessions":{
          "shape":"AssignedSessions",
          "documentation":"<p>The assigned sessions to update.</p>"
        },
        "cancelSessionActions":{
          "shape":"CancelSessionActions",
          "documentation":"<p>The session actions associated with the worker schedule to cancel.</p>"
        },
        "desiredWorkerStatus":{
          "shape":"DesiredWorkerStatus",
          "documentation":"<p>The status to update the worker to.</p>"
        },
        "updateIntervalSeconds":{
          "shape":"UpdateWorkerScheduleInterval",
          "documentation":"<p>Updates the time interval (in seconds) for the schedule.</p>"
        }
      }
    },
    "UpdatedAt":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "UpdatedBy":{"type":"string"},
    "UpdatedSessionActionInfo":{
      "type":"structure",
      "members":{
        "completedStatus":{
          "shape":"CompletedStatus",
          "documentation":"<p>The status of the session upon completion.</p>"
        },
        "processExitCode":{
          "shape":"ProcessExitCode",
          "documentation":"<p>The process exit code. The default Deadline Cloud worker agent converts unsigned 32-bit exit codes to signed 32-bit exit codes.</p>"
        },
        "progressMessage":{
          "shape":"SessionActionProgressMessage",
          "documentation":"<p>A message to indicate the progress of the updated session action.</p>"
        },
        "startedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "endedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "updatedAt":{
          "shape":"SyntheticTimestamp_date_time",
          "documentation":"<p>The updated time.</p>"
        },
        "progressPercent":{
          "shape":"SessionActionProgressPercent",
          "documentation":"<p>The percentage completed.</p>"
        },
        "manifests":{
          "shape":"TaskRunManifestPropertiesListRequest",
          "documentation":"<p>A list of output manifest properties reported by the worker agent, with each entry corresponding to a manifest property in the job.</p>"
        }
      },
      "documentation":"<p>The updated session action information as it relates to completion and progress of the session.</p>"
    },
    "UpdatedSessionActions":{
      "type":"map",
      "key":{"shape":"SessionActionId"},
      "value":{"shape":"UpdatedSessionActionInfo"}
    },
    "UpdatedWorkerStatus":{
      "type":"string",
      "enum":[
        "STARTED",
        "STOPPING",
        "STOPPED"
      ]
    },
    "Url":{"type":"string"},
    "UsageGroupBy":{
      "type":"list",
      "member":{"shape":"UsageGroupByField"},
      "max":2,
      "min":1
    },
    "UsageGroupByField":{
      "type":"string",
      "enum":[
        "QUEUE_ID",
        "FLEET_ID",
        "JOB_ID",
        "USER_ID",
        "USAGE_TYPE",
        "INSTANCE_TYPE",
        "LICENSE_PRODUCT"
      ]
    },
    "UsageStatistic":{
      "type":"string",
      "enum":[
        "SUM",
        "MIN",
        "MAX",
        "AVG"
      ]
    },
    "UsageStatistics":{
      "type":"list",
      "member":{"shape":"UsageStatistic"},
      "max":4,
      "min":1
    },
    "UsageTrackingResource":{
      "type":"structure",
      "members":{
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID.</p>"
        }
      },
      "documentation":"<p>The usage details of the allotted budget.</p>",
      "union":true
    },
    "UsageType":{
      "type":"string",
      "enum":[
        "COMPUTE",
        "LICENSE"
      ]
    },
    "UserId":{"type":"string"},
    "UserJobsFirst":{
      "type":"structure",
      "required":["userIdentityId"],
      "members":{
        "userIdentityId":{
          "shape":"String",
          "documentation":"<p>The user's ID.</p>"
        }
      },
      "documentation":"<p>Allows setting a specific user's job to run first.</p>"
    },
    "VCpuCountRange":{
      "type":"structure",
      "required":["min"],
      "members":{
        "min":{
          "shape":"MinOneMaxTenThousand",
          "documentation":"<p>The minimum amount of vCPU.</p>"
        },
        "max":{
          "shape":"MinOneMaxTenThousand",
          "documentation":"<p>The maximum amount of vCPU.</p>"
        }
      },
      "documentation":"<p>The allowable range of vCPU processing power for the fleet.</p>"
    },
    "ValidationException":{
      "type":"structure",
      "required":[
        "message",
        "reason"
      ],
      "members":{
        "message":{"shape":"String"},
        "reason":{
          "shape":"ValidationExceptionReason",
          "documentation":"<p>The reason that the request failed validation.</p>"
        },
        "fieldList":{
          "shape":"ValidationExceptionFieldList",
          "documentation":"<p>A list of fields that failed validation.</p>"
        },
        "context":{
          "shape":"ExceptionContext",
          "documentation":"<p>Information about the resources in use when the exception was thrown.</p>"
        }
      },
      "documentation":"<p>The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.</p>",
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    },
    "ValidationExceptionField":{
      "type":"structure",
      "required":[
        "name",
        "message"
      ],
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the validation exception.</p>"
        },
        "message":{
          "shape":"String",
          "documentation":"<p>The error message for the validation exception.</p>"
        }
      },
      "documentation":"<p>The details of a validation exception.</p>"
    },
    "ValidationExceptionFieldList":{
      "type":"list",
      "member":{"shape":"ValidationExceptionField"}
    },
    "ValidationExceptionReason":{
      "type":"string",
      "enum":[
        "UNKNOWN_OPERATION",
        "CANNOT_PARSE",
        "FIELD_VALIDATION_FAILED",
        "OTHER"
      ]
    },
    "VpcConfiguration":{
      "type":"structure",
      "members":{
        "resourceConfigurationArns":{
          "shape":"VpcResourceConfigurationArns",
          "documentation":"<p>The ARNs of the VPC Lattice resource configurations attached to the fleet.</p>"
        }
      },
      "documentation":"<p>The configuration options for a service managed fleet's VPC.</p>"
    },
    "VpcId":{
      "type":"string",
      "max":32,
      "min":1,
      "pattern":"vpc-[\\w]{1,120}"
    },
    "VpcResourceConfigurationArn":{
      "type":"string",
      "max":2048,
      "min":1
    },
    "VpcResourceConfigurationArns":{
      "type":"list",
      "member":{"shape":"VpcResourceConfigurationArn"}
    },
    "WindowsUser":{
      "type":"structure",
      "required":[
        "user",
        "passwordArn"
      ],
      "members":{
        "user":{
          "shape":"WindowsUserUserString",
          "documentation":"<p>The user.</p>"
        },
        "passwordArn":{
          "shape":"WindowsUserPasswordArnString",
          "documentation":"<p>The password ARN for the Windows user.</p>"
        }
      },
      "documentation":"<p>The Windows user details.</p>"
    },
    "WindowsUserPasswordArnString":{
      "type":"string",
      "max":2048,
      "min":20,
      "pattern":"arn:(aws[a-zA-Z-]*):secretsmanager:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:secret:[a-zA-Z0-9-/_+=.@]{1,2028}"
    },
    "WindowsUserUserString":{
      "type":"string",
      "max":111,
      "min":0,
      "pattern":"[^\"'/\\[\\]:;|=,+*?<>\\s]*"
    },
    "WorkerAmountCapability":{
      "type":"structure",
      "required":[
        "name",
        "value"
      ],
      "members":{
        "name":{
          "shape":"AmountCapabilityName",
          "documentation":"<p>The name of the worker amount capability.</p>"
        },
        "value":{
          "shape":"Float",
          "documentation":"<p>The value of the worker amount capability.</p>"
        }
      },
      "documentation":"<p>The details of the worker amount capability.</p>"
    },
    "WorkerAmountCapabilityList":{
      "type":"list",
      "member":{"shape":"WorkerAmountCapability"},
      "max":17,
      "min":2
    },
    "WorkerAttributeCapability":{
      "type":"structure",
      "required":[
        "name",
        "values"
      ],
      "members":{
        "name":{
          "shape":"AttributeCapabilityName",
          "documentation":"<p>The name of the worker attribute capability.</p>"
        },
        "values":{
          "shape":"AttributeCapabilityValuesList",
          "documentation":"<p>The values of the worker amount capability.</p>"
        }
      },
      "documentation":"<p>The details of the worker attribute capability.</p>"
    },
    "WorkerAttributeCapabilityList":{
      "type":"list",
      "member":{"shape":"WorkerAttributeCapability"},
      "max":17,
      "min":2
    },
    "WorkerCapabilities":{
      "type":"structure",
      "required":[
        "amounts",
        "attributes"
      ],
      "members":{
        "amounts":{
          "shape":"WorkerAmountCapabilityList",
          "documentation":"<p>The worker capabilities amounts on a list of worker capabilities.</p>"
        },
        "attributes":{
          "shape":"WorkerAttributeCapabilityList",
          "documentation":"<p>The worker attribute capabilities in the list of attribute capabilities.</p>"
        }
      },
      "documentation":"<p>The details for worker capabilities.</p>"
    },
    "WorkerId":{
      "type":"string",
      "pattern":"worker-[0-9a-f]{32}"
    },
    "WorkerSearchSummaries":{
      "type":"list",
      "member":{"shape":"WorkerSearchSummary"}
    },
    "WorkerSearchSummary":{
      "type":"structure",
      "members":{
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID.</p>"
        },
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID.</p>"
        },
        "status":{
          "shape":"WorkerStatus",
          "documentation":"<p>The status of the worker search.</p>"
        },
        "hostProperties":{
          "shape":"HostPropertiesResponse",
          "documentation":"<p>Provides the Amazon EC2 instance properties of the worker host.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        }
      },
      "documentation":"<p>The details of a worker search.</p>"
    },
    "WorkerSessionSummary":{
      "type":"structure",
      "required":[
        "sessionId",
        "queueId",
        "jobId",
        "startedAt",
        "lifecycleStatus"
      ],
      "members":{
        "sessionId":{
          "shape":"SessionId",
          "documentation":"<p>The session ID for the session action.</p>"
        },
        "queueId":{
          "shape":"QueueId",
          "documentation":"<p>The queue ID for the queue associated to the worker.</p>"
        },
        "jobId":{
          "shape":"JobId",
          "documentation":"<p>The job ID for the job associated with the worker's session.</p>"
        },
        "startedAt":{
          "shape":"StartedAt",
          "documentation":"<p>The date and time the resource started running.</p>"
        },
        "lifecycleStatus":{
          "shape":"SessionLifecycleStatus",
          "documentation":"<p>The life cycle status for the worker's session.</p>"
        },
        "endedAt":{
          "shape":"EndedAt",
          "documentation":"<p>The date and time the resource ended running.</p>"
        },
        "targetLifecycleStatus":{
          "shape":"SessionLifecycleTargetStatus",
          "documentation":"<p>The life cycle status </p>"
        }
      },
      "documentation":"<p>Summarizes the session for a particular worker.</p>"
    },
    "WorkerStatus":{
      "type":"string",
      "enum":[
        "CREATED",
        "STARTED",
        "STOPPING",
        "STOPPED",
        "NOT_RESPONDING",
        "NOT_COMPATIBLE",
        "RUNNING",
        "IDLE"
      ]
    },
    "WorkerSummaries":{
      "type":"list",
      "member":{"shape":"WorkerSummary"}
    },
    "WorkerSummary":{
      "type":"structure",
      "required":[
        "workerId",
        "farmId",
        "fleetId",
        "status",
        "createdAt",
        "createdBy"
      ],
      "members":{
        "workerId":{
          "shape":"WorkerId",
          "documentation":"<p>The worker ID.</p>"
        },
        "farmId":{
          "shape":"FarmId",
          "documentation":"<p>The farm ID.</p>"
        },
        "fleetId":{
          "shape":"FleetId",
          "documentation":"<p>The fleet ID.</p>"
        },
        "status":{
          "shape":"WorkerStatus",
          "documentation":"<p>The status of the worker.</p>"
        },
        "hostProperties":{
          "shape":"HostPropertiesResponse",
          "documentation":"<p>The host properties of the worker.</p>"
        },
        "log":{
          "shape":"LogConfiguration",
          "documentation":"<p>The log configuration for the worker.</p>"
        },
        "createdAt":{
          "shape":"CreatedAt",
          "documentation":"<p>The date and time the resource was created.</p>"
        },
        "createdBy":{
          "shape":"CreatedBy",
          "documentation":"<p>The user or system that created this resource.</p>"
        },
        "updatedAt":{
          "shape":"UpdatedAt",
          "documentation":"<p>The date and time the resource was updated.</p>"
        },
        "updatedBy":{
          "shape":"UpdatedBy",
          "documentation":"<p>The user or system that updated this resource.</p>"
        }
      },
      "documentation":"<p>The summary of details for a worker.</p>"
    }
  },
  "documentation":"<p>The Amazon Web Services Deadline Cloud API provides infrastructure and centralized management for your projects. Use the Deadline Cloud API to onboard users, assign projects, and attach permissions specific to their job function.</p> <p>With Deadline Cloud, content production teams can deploy resources for their workforce securely in the cloud, reducing the costs of added physical infrastructure. Keep your content production operations secure, while allowing your contributors to access the tools they need, such as scalable high-speed storage, licenses, and cost management services.</p>"
}
